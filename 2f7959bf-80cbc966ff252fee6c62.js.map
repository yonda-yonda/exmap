{"version":3,"file":"2f7959bf-80cbc966ff252fee6c62.js","mappings":"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","sources":["webpack://exmap/./node_modules/cesium/Source/Scene/Model.js"],"sourcesContent":["import BoundingSphere from \"../Core/BoundingSphere.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport Color from \"../Core/Color.js\";\nimport combine from \"../Core/combine.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport Credit from \"../Core/Credit.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport FeatureDetection from \"../Core/FeatureDetection.js\";\nimport getAbsoluteUri from \"../Core/getAbsoluteUri.js\";\nimport getJsonFromTypedArray from \"../Core/getJsonFromTypedArray.js\";\nimport getMagic from \"../Core/getMagic.js\";\nimport getStringFromTypedArray from \"../Core/getStringFromTypedArray.js\";\nimport IndexDatatype from \"../Core/IndexDatatype.js\";\nimport loadImageFromTypedArray from \"../Core/loadImageFromTypedArray.js\";\nimport loadKTX2 from \"../Core/loadKTX2.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport Resource from \"../Core/Resource.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\nimport Buffer from \"../Renderer/Buffer.js\";\nimport BufferUsage from \"../Renderer/BufferUsage.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderProgram from \"../Renderer/ShaderProgram.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport TextureMinificationFilter from \"../Renderer/TextureMinificationFilter.js\";\nimport TextureWrap from \"../Renderer/TextureWrap.js\";\nimport VertexArray from \"../Renderer/VertexArray.js\";\nimport addDefaults from \"./GltfPipeline/addDefaults.js\";\nimport addPipelineExtras from \"./GltfPipeline/addPipelineExtras.js\";\nimport ForEach from \"./GltfPipeline/ForEach.js\";\nimport getAccessorByteStride from \"./GltfPipeline/getAccessorByteStride.js\";\nimport usesExtension from \"./GltfPipeline/usesExtension.js\";\nimport numberOfComponentsForType from \"./GltfPipeline/numberOfComponentsForType.js\";\nimport parseGlb from \"./GltfPipeline/parseGlb.js\";\nimport updateVersion from \"./GltfPipeline/updateVersion.js\";\nimport when from \"../ThirdParty/when.js\";\nimport Axis from \"./Axis.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport ClippingPlaneCollection from \"./ClippingPlaneCollection.js\";\nimport ColorBlendMode from \"./ColorBlendMode.js\";\nimport DepthFunction from \"./DepthFunction.js\";\nimport DracoLoader from \"./DracoLoader.js\";\nimport getClipAndStyleCode from \"./getClipAndStyleCode.js\";\nimport getClippingFunction from \"./getClippingFunction.js\";\nimport HeightReference from \"./HeightReference.js\";\nimport JobType from \"./JobType.js\";\nimport ModelAnimationCache from \"./ModelAnimationCache.js\";\nimport ModelAnimationCollection from \"./ModelAnimationCollection.js\";\nimport ModelLoadResources from \"./ModelLoadResources.js\";\nimport ModelMaterial from \"./ModelMaterial.js\";\nimport ModelMesh from \"./ModelMesh.js\";\nimport ModelNode from \"./ModelNode.js\";\nimport ModelOutlineLoader from \"./ModelOutlineLoader.js\";\nimport ModelUtility from \"./ModelUtility.js\";\nimport OctahedralProjectedCubeMap from \"./OctahedralProjectedCubeMap.js\";\nimport processModelMaterialsCommon from \"./processModelMaterialsCommon.js\";\nimport processPbrMaterials from \"./processPbrMaterials.js\";\nimport SceneMode from \"./SceneMode.js\";\nimport ShadowMode from \"./ShadowMode.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nvar boundingSphereCartesian3Scratch = new Cartesian3();\nvar ModelState = ModelUtility.ModelState; // glTF MIME types discussed in https://github.com/KhronosGroup/glTF/issues/412 and https://github.com/KhronosGroup/glTF/issues/943\n\nvar defaultModelAccept = \"model/gltf-binary,model/gltf+json;q=0.8,application/json;q=0.2,*/*;q=0.01\";\nvar articulationEpsilon = CesiumMath.EPSILON16; ///////////////////////////////////////////////////////////////////////////\n\nfunction setCachedGltf(model, cachedGltf) {\n  model._cachedGltf = cachedGltf;\n} // glTF JSON can be big given embedded geometry, textures, and animations, so we\n// cache it across all models using the same url/cache-key.  This also reduces the\n// slight overhead in assigning defaults to missing values.\n//\n// Note that this is a global cache, compared to renderer resources, which\n// are cached per context.\n\n\nfunction CachedGltf(options) {\n  this._gltf = options.gltf;\n  this.ready = options.ready;\n  this.modelsToLoad = [];\n  this.count = 0;\n}\n\nObject.defineProperties(CachedGltf.prototype, {\n  gltf: {\n    set: function set(value) {\n      this._gltf = value;\n    },\n    get: function get() {\n      return this._gltf;\n    }\n  }\n});\n\nCachedGltf.prototype.makeReady = function (gltfJson) {\n  this.gltf = gltfJson;\n  var models = this.modelsToLoad;\n  var length = models.length;\n\n  for (var i = 0; i < length; ++i) {\n    var m = models[i];\n\n    if (!m.isDestroyed()) {\n      setCachedGltf(m, this);\n    }\n  }\n\n  this.modelsToLoad = undefined;\n  this.ready = true;\n};\n\nvar gltfCache = {};\nvar uriToGuid = {}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * A 3D model based on glTF, the runtime asset format for WebGL, OpenGL ES, and OpenGL.\n * <p>\n * Cesium includes support for geometry and materials, glTF animations, and glTF skinning.\n * In addition, individual glTF nodes are pickable with {@link Scene#pick} and animatable\n * with {@link Model#getNode}.  glTF cameras and lights are not currently supported.\n * </p>\n * <p>\n * An external glTF asset is created with {@link Model.fromGltf}.  glTF JSON can also be\n * created at runtime and passed to this constructor function.  In either case, the\n * {@link Model#readyPromise} is resolved when the model is ready to render, i.e.,\n * when the external binary, image, and shader files are downloaded and the WebGL\n * resources are created.\n * </p>\n * <p>\n * Cesium supports glTF assets with the following extensions:\n * <ul>\n * <li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/README.md|KHR_binary_glTF (glTF 1.0)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_materials_common/README.md|KHR_materials_common (glTF 1.0)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Vendor/WEB3D_quantized_attributes/README.md|WEB3D_quantized_attributes (glTF 1.0)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/AGI_articulations/README.md|AGI_articulations}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/pull/1302|KHR_blend (draft)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_draco_mesh_compression/README.md|KHR_draco_mesh_compression}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/README.md|KHR_materials_pbrSpecularGlossiness}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit/README.md|KHR_materials_unlit}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_techniques_webgl/README.md|KHR_techniques_webgl}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_transform/README.md|KHR_texture_transform}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_basisu|KHR_texture_basisu}\n * </li>\n * </ul>\n * </p>\n * <p>\n * Note: for models with compressed textures using the KHR_texture_basisu extension, we recommend power of 2 textures in both dimensions\n * for maximum compatibility. This is because some samplers require power of 2 textures ({@link https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL|Using textures in WebGL})\n * and KHR_texture_basisu requires multiple of 4 dimensions ({@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_basisu/README.md#additional-requirements|KHR_texture_basisu additional requirements}).\n * </p>\n * <p>\n * For high-precision rendering, Cesium supports the {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Vendor/CESIUM_RTC/README.md|CESIUM_RTC} extension, which introduces the\n * CESIUM_RTC_MODELVIEW parameter semantic that says the node is in WGS84 coordinates translated\n * relative to a local origin.\n * </p>\n *\n * @alias Model\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object|ArrayBuffer|Uint8Array} [options.gltf] A glTF JSON object, or a binary glTF buffer.\n * @param {Resource|String} [options.basePath=''] The base path that paths in the glTF JSON are relative to.\n * @param {Boolean} [options.show=true] Determines if the model primitive will be shown.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms the model from model to world coordinates.\n * @param {Number} [options.scale=1.0] A uniform scale applied to this model.\n * @param {Number} [options.minimumPixelSize=0.0] The approximate minimum pixel size of the model regardless of zoom.\n * @param {Number} [options.maximumScale] The maximum scale size of a model. An upper limit for minimumPixelSize.\n * @param {Object} [options.id] A user-defined object to return when the model is picked with {@link Scene#pick}.\n * @param {Boolean} [options.allowPicking=true] When <code>true</code>, each glTF mesh and primitive is pickable with {@link Scene#pick}.\n * @param {Boolean} [options.incrementallyLoadTextures=true] Determine if textures may continue to stream in after the model is loaded.\n * @param {Boolean} [options.asynchronous=true] Determines if model WebGL resource creation will be spread out over several frames or block until completion once all glTF files are loaded.\n * @param {Boolean} [options.clampAnimations=true] Determines if the model's animations should hold a pose over frames where no keyframes are specified.\n * @param {ShadowMode} [options.shadows=ShadowMode.ENABLED] Determines whether the model casts or receives shadows from light sources.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Draws the bounding sphere for each draw command in the model.\n * @param {Boolean} [options.debugWireframe=false] For debugging only. Draws the model in wireframe.\n * @param {HeightReference} [options.heightReference=HeightReference.NONE] Determines how the model is drawn relative to terrain.\n * @param {Scene} [options.scene] Must be passed in for models that use the height reference property.\n * @param {DistanceDisplayCondition} [options.distanceDisplayCondition] The condition specifying at what distance from the camera that this model will be displayed.\n * @param {Color} [options.color=Color.WHITE] A color that blends with the model's rendered color.\n * @param {ColorBlendMode} [options.colorBlendMode=ColorBlendMode.HIGHLIGHT] Defines how the color blends with the model.\n * @param {Number} [options.colorBlendAmount=0.5] Value used to determine the color strength when the <code>colorBlendMode</code> is <code>MIX</code>. A value of 0.0 results in the model's rendered color while a value of 1.0 results in a solid color, with any value in-between resulting in a mix of the two.\n * @param {Color} [options.silhouetteColor=Color.RED] The silhouette color. If more than 256 models have silhouettes enabled, there is a small chance that overlapping models will have minor artifacts.\n * @param {Number} [options.silhouetteSize=0.0] The size of the silhouette in pixels.\n * @param {ClippingPlaneCollection} [options.clippingPlanes] The {@link ClippingPlaneCollection} used to selectively disable rendering the model.\n * @param {Boolean} [options.dequantizeInShader=true] Determines if a {@link https://github.com/google/draco|Draco} encoded model is dequantized on the GPU. This decreases total memory usage for encoded models.\n * @param {Cartesian2} [options.imageBasedLightingFactor=Cartesian2(1.0, 1.0)] Scales diffuse and specular image-based lighting from the earth, sky, atmosphere and star skybox.\n * @param {Cartesian3} [options.lightColor] The light color when shading the model. When <code>undefined</code> the scene's light color is used instead.\n * @param {Number} [options.luminanceAtZenith=0.2] The sun's luminance at the zenith in kilo candela per meter squared to use for this model's procedural environment map.\n * @param {Cartesian3[]} [options.sphericalHarmonicCoefficients] The third order spherical harmonic coefficients used for the diffuse color of image-based lighting.\n * @param {String} [options.specularEnvironmentMaps] A URL to a KTX2 file that contains a cube map of the specular lighting and the convoluted specular mipmaps.\n * @param {Credit|String} [options.credit] A credit for the data source, which is displayed on the canvas.\n * @param {Boolean} [options.backFaceCulling=true] Whether to cull back-facing geometry. When true, back face culling is determined by the material's doubleSided property; when false, back face culling is disabled. Back faces are not culled if {@link Model#color} is translucent or {@link Model#silhouetteSize} is greater than 0.0.\n * @param {Boolean} [options.showOutline=true] Whether to display the outline for models using the {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/CESIUM_primitive_outline|CESIUM_primitive_outline} extension. When true, outlines are displayed. When false, outlines are not displayed.\n *\n * @see Model.fromGltf\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=3D%20Models.html|Cesium Sandcastle Models Demo}\n */\n\nfunction Model(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var cacheKey = options.cacheKey;\n  this._cacheKey = cacheKey;\n  this._cachedGltf = undefined;\n  this._releaseGltfJson = defaultValue(options.releaseGltfJson, false);\n  var cachedGltf;\n\n  if (defined(cacheKey) && defined(gltfCache[cacheKey]) && gltfCache[cacheKey].ready) {\n    // glTF JSON is in cache and ready\n    cachedGltf = gltfCache[cacheKey];\n    ++cachedGltf.count;\n  } else {\n    // glTF was explicitly provided, e.g., when a user uses the Model constructor directly\n    var gltf = options.gltf;\n\n    if (defined(gltf)) {\n      if (gltf instanceof ArrayBuffer) {\n        gltf = new Uint8Array(gltf);\n      }\n\n      if (gltf instanceof Uint8Array) {\n        // Binary glTF\n        var parsedGltf = parseGlb(gltf);\n        cachedGltf = new CachedGltf({\n          gltf: parsedGltf,\n          ready: true\n        });\n      } else {\n        // Normal glTF (JSON)\n        cachedGltf = new CachedGltf({\n          gltf: options.gltf,\n          ready: true\n        });\n      }\n\n      cachedGltf.count = 1;\n\n      if (defined(cacheKey)) {\n        gltfCache[cacheKey] = cachedGltf;\n      }\n    }\n  }\n\n  setCachedGltf(this, cachedGltf);\n  var basePath = defaultValue(options.basePath, \"\");\n  this._resource = Resource.createIfNeeded(basePath); // User specified credit\n\n  var credit = options.credit;\n\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n\n  this._credit = credit; // Create a list of Credit's so they can be added from the Resource later\n\n  this._resourceCredits = [];\n  /**\n   * Determines if the model primitive will be shown.\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n\n  this.show = defaultValue(options.show, true);\n  /**\n   * The silhouette color.\n   *\n   * @type {Color}\n   *\n   * @default Color.RED\n   */\n\n  this.silhouetteColor = defaultValue(options.silhouetteColor, Color.RED);\n  this._silhouetteColor = new Color();\n  this._silhouetteColorPreviousAlpha = 1.0;\n  this._normalAttributeName = undefined;\n  /**\n   * The size of the silhouette in pixels.\n   *\n   * @type {Number}\n   *\n   * @default 0.0\n   */\n\n  this.silhouetteSize = defaultValue(options.silhouetteSize, 0.0);\n  /**\n   * The 4x4 transformation matrix that transforms the model from model to world coordinates.\n   * When this is the identity matrix, the model is drawn in world coordinates, i.e., Earth's WGS84 coordinates.\n   * Local reference frames can be used by providing a different transformation matrix, like that returned\n   * by {@link Transforms.eastNorthUpToFixedFrame}.\n   *\n   * @type {Matrix4}\n   *\n   * @default {@link Matrix4.IDENTITY}\n   *\n   * @example\n   * const origin = Cesium.Cartesian3.fromDegrees(-95.0, 40.0, 200000.0);\n   * m.modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(origin);\n   */\n\n  this.modelMatrix = Matrix4.clone(defaultValue(options.modelMatrix, Matrix4.IDENTITY));\n  this._modelMatrix = Matrix4.clone(this.modelMatrix);\n  this._clampedModelMatrix = undefined;\n  /**\n   * A uniform scale applied to this model before the {@link Model#modelMatrix}.\n   * Values greater than <code>1.0</code> increase the size of the model; values\n   * less than <code>1.0</code> decrease.\n   *\n   * @type {Number}\n   *\n   * @default 1.0\n   */\n\n  this.scale = defaultValue(options.scale, 1.0);\n  this._scale = this.scale;\n  /**\n   * The approximate minimum pixel size of the model regardless of zoom.\n   * This can be used to ensure that a model is visible even when the viewer\n   * zooms out.  When <code>0.0</code>, no minimum size is enforced.\n   *\n   * @type {Number}\n   *\n   * @default 0.0\n   */\n\n  this.minimumPixelSize = defaultValue(options.minimumPixelSize, 0.0);\n  this._minimumPixelSize = this.minimumPixelSize;\n  /**\n   * The maximum scale size for a model. This can be used to give\n   * an upper limit to the {@link Model#minimumPixelSize}, ensuring that the model\n   * is never an unreasonable scale.\n   *\n   * @type {Number}\n   */\n\n  this.maximumScale = options.maximumScale;\n  this._maximumScale = this.maximumScale;\n  /**\n   * User-defined object returned when the model is picked.\n   *\n   * @type Object\n   *\n   * @default undefined\n   *\n   * @see Scene#pick\n   */\n\n  this.id = options.id;\n  this._id = options.id;\n  /**\n   * Returns the height reference of the model\n   *\n   * @type {HeightReference}\n   *\n   * @default HeightReference.NONE\n   */\n\n  this.heightReference = defaultValue(options.heightReference, HeightReference.NONE);\n  this._heightReference = this.heightReference;\n  this._heightChanged = false;\n  this._removeUpdateHeightCallback = undefined;\n  var scene = options.scene;\n  this._scene = scene;\n\n  if (defined(scene) && defined(scene.terrainProviderChanged)) {\n    this._terrainProviderChangedCallback = scene.terrainProviderChanged.addEventListener(function () {\n      this._heightChanged = true;\n    }, this);\n  }\n  /**\n   * Used for picking primitives that wrap a model.\n   *\n   * @private\n   */\n\n\n  this._pickObject = options.pickObject;\n  this._allowPicking = defaultValue(options.allowPicking, true);\n  this._ready = false;\n  this._readyPromise = when.defer();\n  /**\n   * The currently playing glTF animations.\n   *\n   * @type {ModelAnimationCollection}\n   */\n\n  this.activeAnimations = new ModelAnimationCollection(this);\n  /**\n   * Determines if the model's animations should hold a pose over frames where no keyframes are specified.\n   *\n   * @type {Boolean}\n   */\n\n  this.clampAnimations = defaultValue(options.clampAnimations, true);\n  this._defaultTexture = undefined;\n  this._incrementallyLoadTextures = defaultValue(options.incrementallyLoadTextures, true);\n  this._asynchronous = defaultValue(options.asynchronous, true);\n  /**\n   * Determines whether the model casts or receives shadows from light sources.\n   *\n   * @type {ShadowMode}\n   *\n   * @default ShadowMode.ENABLED\n   */\n\n  this.shadows = defaultValue(options.shadows, ShadowMode.ENABLED);\n  this._shadows = this.shadows;\n  /**\n   * A color that blends with the model's rendered color.\n   *\n   * @type {Color}\n   *\n   * @default Color.WHITE\n   */\n\n  this.color = Color.clone(defaultValue(options.color, Color.WHITE));\n  this._colorPreviousAlpha = 1.0;\n  /**\n   * Defines how the color blends with the model.\n   *\n   * @type {ColorBlendMode}\n   *\n   * @default ColorBlendMode.HIGHLIGHT\n   */\n\n  this.colorBlendMode = defaultValue(options.colorBlendMode, ColorBlendMode.HIGHLIGHT);\n  /**\n   * Value used to determine the color strength when the <code>colorBlendMode</code> is <code>MIX</code>.\n   * A value of 0.0 results in the model's rendered color while a value of 1.0 results in a solid color, with\n   * any value in-between resulting in a mix of the two.\n   *\n   * @type {Number}\n   *\n   * @default 0.5\n   */\n\n  this.colorBlendAmount = defaultValue(options.colorBlendAmount, 0.5);\n  this._colorShadingEnabled = false;\n  this._clippingPlanes = undefined;\n  this.clippingPlanes = options.clippingPlanes; // Used for checking if shaders need to be regenerated due to clipping plane changes.\n\n  this._clippingPlanesState = 0; // If defined, use this matrix to transform miscellaneous properties like\n  // clipping planes and IBL instead of the modelMatrix. This is so that when\n  // models are part of a tileset these properties get transformed relative to\n  // a common reference (such as the root).\n\n  this.referenceMatrix = undefined;\n  /**\n   * Whether to cull back-facing geometry. When true, back face culling is\n   * determined by the material's doubleSided property; when false, back face\n   * culling is disabled. Back faces are not culled if {@link Model#color} is\n   * translucent or {@link Model#silhouetteSize} is greater than 0.0.\n   *\n   * @type {Boolean}\n   *\n   * @default true\n   */\n\n  this.backFaceCulling = defaultValue(options.backFaceCulling, true);\n  /**\n   * Whether to display the outline for models using the\n   * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/CESIUM_primitive_outline|CESIUM_primitive_outline} extension.\n   * When true, outlines are displayed. When false, outlines are not displayed.\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n\n  this.showOutline = defaultValue(options.showOutline, true);\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the bounding sphere for each draw command in the model.  A glTF primitive corresponds\n   * to one draw command.  A glTF mesh has an array of primitives, often of length one.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n\n  this.debugShowBoundingVolume = defaultValue(options.debugShowBoundingVolume, false);\n  this._debugShowBoundingVolume = false;\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the model in wireframe.\n   * </p>\n   *\n   * @type {Boolean}\n   *\n   * @default false\n   */\n\n  this.debugWireframe = defaultValue(options.debugWireframe, false);\n  this._debugWireframe = false;\n  this._distanceDisplayCondition = options.distanceDisplayCondition; // Undocumented options\n\n  this._addBatchIdToGeneratedShaders = options.addBatchIdToGeneratedShaders;\n  this._precreatedAttributes = options.precreatedAttributes;\n  this._vertexShaderLoaded = options.vertexShaderLoaded;\n  this._fragmentShaderLoaded = options.fragmentShaderLoaded;\n  this._uniformMapLoaded = options.uniformMapLoaded;\n  this._pickIdLoaded = options.pickIdLoaded;\n  this._ignoreCommands = defaultValue(options.ignoreCommands, false);\n  this._requestType = options.requestType;\n  this._upAxis = defaultValue(options.upAxis, Axis.Y);\n  this._gltfForwardAxis = Axis.Z;\n  this._forwardAxis = options.forwardAxis;\n  /**\n   * @private\n   * @readonly\n   */\n\n  this.cull = defaultValue(options.cull, true);\n  /**\n   * @private\n   * @readonly\n   */\n\n  this.opaquePass = defaultValue(options.opaquePass, Pass.OPAQUE);\n  this._computedModelMatrix = new Matrix4(); // Derived from modelMatrix and scale\n\n  this._clippingPlanesMatrix = Matrix4.clone(Matrix4.IDENTITY); // Derived from reference matrix and the current view matrix\n\n  this._iblReferenceFrameMatrix = Matrix3.clone(Matrix3.IDENTITY); // Derived from reference matrix and the current view matrix\n\n  this._initialRadius = undefined; // Radius without model's scale property, model-matrix scale, animations, or skins\n\n  this._boundingSphere = undefined;\n  this._scaledBoundingSphere = new BoundingSphere();\n  this._state = ModelState.NEEDS_LOAD;\n  this._loadResources = undefined;\n  this._mode = undefined;\n  this._perNodeShowDirty = false; // true when the Cesium API was used to change a node's show property\n\n  this._cesiumAnimationsDirty = false; // true when the Cesium API, not a glTF animation, changed a node transform\n\n  this._dirty = false; // true when the model was transformed this frame\n\n  this._maxDirtyNumber = 0; // Used in place of a dirty boolean flag to avoid an extra graph traversal\n\n  this._runtime = {\n    animations: undefined,\n    articulationsByName: undefined,\n    articulationsByStageKey: undefined,\n    stagesByKey: undefined,\n    rootNodes: undefined,\n    nodes: undefined,\n    // Indexed with the node's index\n    nodesByName: undefined,\n    // Indexed with name property in the node\n    skinnedNodes: undefined,\n    meshesByName: undefined,\n    // Indexed with the name property in the mesh\n    materialsByName: undefined,\n    // Indexed with the name property in the material\n    materialsById: undefined // Indexed with the material's index\n\n  };\n  this._uniformMaps = {}; // Not cached since it can be targeted by glTF animation\n\n  this._extensionsUsed = undefined; // Cached used glTF extensions\n\n  this._extensionsRequired = undefined; // Cached required glTF extensions\n\n  this._quantizedUniforms = {}; // Quantized uniforms for each program for WEB3D_quantized_attributes\n\n  this._programPrimitives = {};\n  this._rendererResources = {\n    // Cached between models with the same url/cache-key\n    buffers: {},\n    vertexArrays: {},\n    programs: {},\n    sourceShaders: {},\n    silhouettePrograms: {},\n    textures: {},\n    samplers: {},\n    renderStates: {}\n  };\n  this._cachedRendererResources = undefined;\n  this._loadRendererResourcesFromCache = false;\n  this._dequantizeInShader = defaultValue(options.dequantizeInShader, true);\n  this._decodedData = {};\n  this._cachedGeometryByteLength = 0;\n  this._cachedTexturesByteLength = 0;\n  this._geometryByteLength = 0;\n  this._texturesByteLength = 0;\n  this._trianglesLength = 0;\n  this._pointsLength = 0; // Hold references for shader reconstruction.\n  // Hold these separately because _cachedGltf may get released (this.releaseGltfJson)\n\n  this._sourceTechniques = {};\n  this._sourcePrograms = {};\n  this._quantizedVertexShaders = {};\n  this._nodeCommands = [];\n  this._pickIds = []; // CESIUM_RTC extension\n\n  this._rtcCenter = undefined; // reference to either 3D or 2D\n\n  this._rtcCenterEye = undefined; // in eye coordinates\n\n  this._rtcCenter3D = undefined; // in world coordinates\n\n  this._rtcCenter2D = undefined; // in projected world coordinates\n\n  this._sourceVersion = undefined;\n  this._sourceKHRTechniquesWebGL = undefined;\n  this._imageBasedLightingFactor = new Cartesian2(1.0, 1.0);\n  Cartesian2.clone(options.imageBasedLightingFactor, this._imageBasedLightingFactor);\n  this._lightColor = Cartesian3.clone(options.lightColor);\n  this._luminanceAtZenith = undefined;\n  this.luminanceAtZenith = defaultValue(options.luminanceAtZenith, 0.2);\n  this._sphericalHarmonicCoefficients = options.sphericalHarmonicCoefficients;\n  this._specularEnvironmentMaps = options.specularEnvironmentMaps;\n  this._shouldUpdateSpecularMapAtlas = true;\n  this._specularEnvironmentMapAtlas = undefined;\n  this._useDefaultSphericalHarmonics = false;\n  this._useDefaultSpecularMaps = false;\n  this._shouldRegenerateShaders = false;\n}\n\nObject.defineProperties(Model.prototype, {\n  /**\n   * The object for the glTF JSON, including properties with default values omitted\n   * from the JSON provided to this model.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Object}\n   * @readonly\n   *\n   * @default undefined\n   */\n  gltf: {\n    get: function get() {\n      return defined(this._cachedGltf) ? this._cachedGltf.gltf : undefined;\n    }\n  },\n\n  /**\n   * When <code>true</code>, the glTF JSON is not stored with the model once the model is\n   * loaded (when {@link Model#ready} is <code>true</code>).  This saves memory when\n   * geometry, textures, and animations are embedded in the .gltf file.\n   * This is especially useful for cases like 3D buildings, where each .gltf model is unique\n   * and caching the glTF JSON is not effective.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   *\n   * @private\n   */\n  releaseGltfJson: {\n    get: function get() {\n      return this._releaseGltfJson;\n    }\n  },\n\n  /**\n   * The key identifying this model in the model cache for glTF JSON, renderer resources, and animations.\n   * Caching saves memory and improves loading speed when several models with the same url are created.\n   * <p>\n   * This key is automatically generated when the model is created with {@link Model.fromGltf}.  If the model\n   * is created directly from glTF JSON using the {@link Model} constructor, this key can be manually\n   * provided; otherwise, the model will not be changed.\n   * </p>\n   *\n   * @memberof Model.prototype\n   *\n   * @type {String}\n   * @readonly\n   *\n   * @private\n   */\n  cacheKey: {\n    get: function get() {\n      return this._cacheKey;\n    }\n  },\n\n  /**\n   * The base path that paths in the glTF JSON are relative to.  The base\n   * path is the same path as the path containing the .gltf file\n   * minus the .gltf file, when binary, image, and shader files are\n   * in the same directory as the .gltf.  When this is <code>''</code>,\n   * the app's base path is used.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {String}\n   * @readonly\n   *\n   * @default ''\n   */\n  basePath: {\n    get: function get() {\n      return this._resource.url;\n    }\n  },\n\n  /**\n   * The model's bounding sphere in its local coordinate system.  This does not take into\n   * account glTF animations and skins nor does it take into account {@link Model#minimumPixelSize}.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {BoundingSphere}\n   * @readonly\n   *\n   * @default undefined\n   *\n   * @exception {DeveloperError} The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\n   *\n   * @example\n   * // Center in WGS84 coordinates\n   * const center = Cesium.Matrix4.multiplyByPoint(model.modelMatrix, model.boundingSphere.center, new Cesium.Cartesian3());\n   */\n  boundingSphere: {\n    get: function get() {\n      //>>includeStart('debug', pragmas.debug);\n      if (this._state !== ModelState.LOADED) {\n        throw new DeveloperError(\"The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\");\n      } //>>includeEnd('debug');\n\n\n      var modelMatrix = this.modelMatrix;\n\n      if (this.heightReference !== HeightReference.NONE && this._clampedModelMatrix) {\n        modelMatrix = this._clampedModelMatrix;\n      }\n\n      var nonUniformScale = Matrix4.getScale(modelMatrix, boundingSphereCartesian3Scratch);\n      var scale = defined(this.maximumScale) ? Math.min(this.maximumScale, this.scale) : this.scale;\n      Cartesian3.multiplyByScalar(nonUniformScale, scale, nonUniformScale);\n      var scaledBoundingSphere = this._scaledBoundingSphere;\n      scaledBoundingSphere.center = Cartesian3.multiplyComponents(this._boundingSphere.center, nonUniformScale, scaledBoundingSphere.center);\n      scaledBoundingSphere.radius = Cartesian3.maximumComponent(nonUniformScale) * this._initialRadius;\n\n      if (defined(this._rtcCenter)) {\n        Cartesian3.add(this._rtcCenter, scaledBoundingSphere.center, scaledBoundingSphere.center);\n      }\n\n      return scaledBoundingSphere;\n    }\n  },\n\n  /**\n   * When <code>true</code>, this model is ready to render, i.e., the external binary, image,\n   * and shader files were downloaded and the WebGL resources were created.  This is set to\n   * <code>true</code> right before {@link Model#readyPromise} is resolved.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default false\n   */\n  ready: {\n    get: function get() {\n      return this._ready;\n    }\n  },\n\n  /**\n   * Gets the promise that will be resolved when this model is ready to render, i.e., when the external binary, image,\n   * and shader files were downloaded and the WebGL resources were created.\n   * <p>\n   * This promise is resolved at the end of the frame before the first frame the model is rendered in.\n   * </p>\n   *\n   * @memberof Model.prototype\n   * @type {Promise.<Model>}\n   * @readonly\n   *\n   * @example\n   * // Play all animations at half-speed when the model is ready to render\n   * Cesium.when(model.readyPromise).then(function(model) {\n   *   model.activeAnimations.addAll({\n   *     multiplier : 0.5\n   *   });\n   * }).otherwise(function(error){\n   *   window.alert(error);\n   * });\n   *\n   * @see Model#ready\n   */\n  readyPromise: {\n    get: function get() {\n      return this._readyPromise.promise;\n    }\n  },\n\n  /**\n   * Determines if model WebGL resource creation will be spread out over several frames or\n   * block until completion once all glTF files are loaded.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  asynchronous: {\n    get: function get() {\n      return this._asynchronous;\n    }\n  },\n\n  /**\n   * When <code>true</code>, each glTF mesh and primitive is pickable with {@link Scene#pick}.  When <code>false</code>, GPU memory is saved.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  allowPicking: {\n    get: function get() {\n      return this._allowPicking;\n    }\n  },\n\n  /**\n   * Determine if textures may continue to stream in after the model is loaded.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @default true\n   */\n  incrementallyLoadTextures: {\n    get: function get() {\n      return this._incrementallyLoadTextures;\n    }\n  },\n\n  /**\n   * Return the number of pending texture loads.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  pendingTextureLoads: {\n    get: function get() {\n      return defined(this._loadResources) ? this._loadResources.pendingTextureLoads : 0;\n    }\n  },\n\n  /**\n   * Returns true if the model was transformed this frame\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   *\n   * @private\n   */\n  dirty: {\n    get: function get() {\n      return this._dirty;\n    }\n  },\n\n  /**\n   * Gets or sets the condition specifying at what distance from the camera that this model will be displayed.\n   * @memberof Model.prototype\n   * @type {DistanceDisplayCondition}\n   * @default undefined\n   */\n  distanceDisplayCondition: {\n    get: function get() {\n      return this._distanceDisplayCondition;\n    },\n    set: function set(value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (defined(value) && value.far <= value.near) {\n        throw new DeveloperError(\"far must be greater than near\");\n      } //>>includeEnd('debug');\n\n\n      this._distanceDisplayCondition = DistanceDisplayCondition.clone(value, this._distanceDisplayCondition);\n    }\n  },\n  extensionsUsed: {\n    get: function get() {\n      if (!defined(this._extensionsUsed)) {\n        this._extensionsUsed = ModelUtility.getUsedExtensions(this.gltf);\n      }\n\n      return this._extensionsUsed;\n    }\n  },\n  extensionsRequired: {\n    get: function get() {\n      if (!defined(this._extensionsRequired)) {\n        this._extensionsRequired = ModelUtility.getRequiredExtensions(this.gltf);\n      }\n\n      return this._extensionsRequired;\n    }\n  },\n\n  /**\n   * Gets the model's up-axis.\n   * By default models are y-up according to the glTF spec, however geo-referenced models will typically be z-up.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Number}\n   * @default Axis.Y\n   * @readonly\n   *\n   * @private\n   */\n  upAxis: {\n    get: function get() {\n      return this._upAxis;\n    }\n  },\n\n  /**\n   * Gets the model's forward axis.\n   * By default, glTF 2.0 models are z-forward according to the glTF spec, however older\n   * glTF (1.0, 0.8) models used x-forward.  Note that only Axis.X and Axis.Z are supported.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Number}\n   * @default Axis.Z\n   * @readonly\n   *\n   * @private\n   */\n  forwardAxis: {\n    get: function get() {\n      if (defined(this._forwardAxis)) {\n        return this._forwardAxis;\n      }\n\n      return this._gltfForwardAxis;\n    }\n  },\n\n  /**\n   * Gets the model's triangle count.\n   *\n   * @private\n   */\n  trianglesLength: {\n    get: function get() {\n      return this._trianglesLength;\n    }\n  },\n\n  /**\n   * Gets the model's point count.\n   *\n   * @private\n   */\n  pointsLength: {\n    get: function get() {\n      return this._pointsLength;\n    }\n  },\n\n  /**\n   * Gets the model's geometry memory in bytes. This includes all vertex and index buffers.\n   *\n   * @private\n   */\n  geometryByteLength: {\n    get: function get() {\n      return this._geometryByteLength;\n    }\n  },\n\n  /**\n   * Gets the model's texture memory in bytes.\n   *\n   * @private\n   */\n  texturesByteLength: {\n    get: function get() {\n      return this._texturesByteLength;\n    }\n  },\n\n  /**\n   * Gets the model's cached geometry memory in bytes. This includes all vertex and index buffers.\n   *\n   * @private\n   */\n  cachedGeometryByteLength: {\n    get: function get() {\n      return this._cachedGeometryByteLength;\n    }\n  },\n\n  /**\n   * Gets the model's cached texture memory in bytes.\n   *\n   * @private\n   */\n  cachedTexturesByteLength: {\n    get: function get() {\n      return this._cachedTexturesByteLength;\n    }\n  },\n\n  /**\n   * The {@link ClippingPlaneCollection} used to selectively disable rendering the model.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {ClippingPlaneCollection}\n   */\n  clippingPlanes: {\n    get: function get() {\n      return this._clippingPlanes;\n    },\n    set: function set(value) {\n      if (value === this._clippingPlanes) {\n        return;\n      } // Handle destroying, checking of unknown, checking for existing ownership\n\n\n      ClippingPlaneCollection.setOwner(value, this, \"_clippingPlanes\");\n    }\n  },\n\n  /**\n   * @private\n   */\n  pickIds: {\n    get: function get() {\n      return this._pickIds;\n    }\n  },\n\n  /**\n   * Cesium adds lighting from the earth, sky, atmosphere, and star skybox. This cartesian is used to scale the final\n   * diffuse and specular lighting contribution from those sources to the final color. A value of 0.0 will disable those light sources.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Cartesian2}\n   * @default Cartesian2(1.0, 1.0)\n   */\n  imageBasedLightingFactor: {\n    get: function get() {\n      return this._imageBasedLightingFactor;\n    },\n    set: function set(value) {\n      //>>includeStart('debug', pragmas.debug);\n      Check.typeOf.object(\"imageBasedLightingFactor\", value);\n      Check.typeOf.number.greaterThanOrEquals(\"imageBasedLightingFactor.x\", value.x, 0.0);\n      Check.typeOf.number.lessThanOrEquals(\"imageBasedLightingFactor.x\", value.x, 1.0);\n      Check.typeOf.number.greaterThanOrEquals(\"imageBasedLightingFactor.y\", value.y, 0.0);\n      Check.typeOf.number.lessThanOrEquals(\"imageBasedLightingFactor.y\", value.y, 1.0); //>>includeEnd('debug');\n\n      var imageBasedLightingFactor = this._imageBasedLightingFactor;\n\n      if (value === imageBasedLightingFactor || Cartesian2.equals(value, imageBasedLightingFactor)) {\n        return;\n      }\n\n      this._shouldRegenerateShaders = this._shouldRegenerateShaders || this._imageBasedLightingFactor.x > 0.0 && value.x === 0.0 || this._imageBasedLightingFactor.x === 0.0 && value.x > 0.0;\n      this._shouldRegenerateShaders = this._shouldRegenerateShaders || this._imageBasedLightingFactor.y > 0.0 && value.y === 0.0 || this._imageBasedLightingFactor.y === 0.0 && value.y > 0.0;\n      Cartesian2.clone(value, this._imageBasedLightingFactor);\n    }\n  },\n\n  /**\n   * The light color when shading the model. When <code>undefined</code> the scene's light color is used instead.\n   * <p>\n   * For example, disabling additional light sources by setting <code>model.imageBasedLightingFactor = new Cesium.Cartesian2(0.0, 0.0)</code> will make the\n   * model much darker. Here, increasing the intensity of the light source will make the model brighter.\n   * </p>\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Cartesian3}\n   * @default undefined\n   */\n  lightColor: {\n    get: function get() {\n      return this._lightColor;\n    },\n    set: function set(value) {\n      var lightColor = this._lightColor;\n\n      if (value === lightColor || Cartesian3.equals(value, lightColor)) {\n        return;\n      }\n\n      this._shouldRegenerateShaders = this._shouldRegenerateShaders || defined(lightColor) && !defined(value) || defined(value) && !defined(lightColor);\n      this._lightColor = Cartesian3.clone(value, lightColor);\n    }\n  },\n\n  /**\n   * The sun's luminance at the zenith in kilo candela per meter squared to use for this model's procedural environment map.\n   * This is used when {@link Model#specularEnvironmentMaps} and {@link Model#sphericalHarmonicCoefficients} are not defined.\n   *\n   * @memberof Model.prototype\n   *\n   * @demo {@link https://sandcastle.cesium.com/index.html?src=Image-Based Lighting.html|Sandcastle Image Based Lighting Demo}\n   * @type {Number}\n   * @default 0.2\n   */\n  luminanceAtZenith: {\n    get: function get() {\n      return this._luminanceAtZenith;\n    },\n    set: function set(value) {\n      var lum = this._luminanceAtZenith;\n\n      if (value === lum) {\n        return;\n      }\n\n      this._shouldRegenerateShaders = this._shouldRegenerateShaders || defined(lum) && !defined(value) || defined(value) && !defined(lum);\n      this._luminanceAtZenith = value;\n    }\n  },\n\n  /**\n   * The third order spherical harmonic coefficients used for the diffuse color of image-based lighting. When <code>undefined</code>, a diffuse irradiance\n   * computed from the atmosphere color is used.\n   * <p>\n   * There are nine <code>Cartesian3</code> coefficients.\n   * The order of the coefficients is: L<sub>00</sub>, L<sub>1-1</sub>, L<sub>10</sub>, L<sub>11</sub>, L<sub>2-2</sub>, L<sub>2-1</sub>, L<sub>20</sub>, L<sub>21</sub>, L<sub>22</sub>\n   * </p>\n   *\n   * These values can be obtained by preprocessing the environment map using the <code>cmgen</code> tool of\n   * {@link https://github.com/google/filament/releases|Google's Filament project}. This will also generate a KTX file that can be\n   * supplied to {@link Model#specularEnvironmentMaps}.\n   *\n   * @memberof Model.prototype\n   *\n   * @type {Cartesian3[]}\n   * @demo {@link https://sandcastle.cesium.com/index.html?src=Image-Based Lighting.html|Sandcastle Image Based Lighting Demo}\n   * @see {@link https://graphics.stanford.edu/papers/envmap/envmap.pdf|An Efficient Representation for Irradiance Environment Maps}\n   */\n  sphericalHarmonicCoefficients: {\n    get: function get() {\n      return this._sphericalHarmonicCoefficients;\n    },\n    set: function set(value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (defined(value) && (!Array.isArray(value) || value.length !== 9)) {\n        throw new DeveloperError(\"sphericalHarmonicCoefficients must be an array of 9 Cartesian3 values.\");\n      } //>>includeEnd('debug');\n\n\n      if (value === this._sphericalHarmonicCoefficients) {\n        return;\n      }\n\n      this._sphericalHarmonicCoefficients = value;\n      this._shouldRegenerateShaders = true;\n    }\n  },\n\n  /**\n   * A URL to a KTX2 file that contains a cube map of the specular lighting and the convoluted specular mipmaps.\n   *\n   * @memberof Model.prototype\n   * @demo {@link https://sandcastle.cesium.com/index.html?src=Image-Based Lighting.html|Sandcastle Image Based Lighting Demo}\n   * @type {String}\n   * @see Model#sphericalHarmonicCoefficients\n   */\n  specularEnvironmentMaps: {\n    get: function get() {\n      return this._specularEnvironmentMaps;\n    },\n    set: function set(value) {\n      this._shouldUpdateSpecularMapAtlas = this._shouldUpdateSpecularMapAtlas || value !== this._specularEnvironmentMaps;\n      this._specularEnvironmentMaps = value;\n    }\n  },\n\n  /**\n   * Gets the credit that will be displayed for the model\n   * @memberof Model.prototype\n   * @type {Credit}\n   */\n  credit: {\n    get: function get() {\n      return this._credit;\n    }\n  }\n});\n\nfunction silhouetteSupported(context) {\n  return context.stencilBuffer;\n}\n\nfunction isColorShadingEnabled(model) {\n  return !Color.equals(model.color, Color.WHITE) || model.colorBlendMode !== ColorBlendMode.HIGHLIGHT;\n}\n\nfunction isClippingEnabled(model) {\n  var clippingPlanes = model._clippingPlanes;\n  return defined(clippingPlanes) && clippingPlanes.enabled && clippingPlanes.length !== 0;\n}\n/**\n * Determines if silhouettes are supported.\n *\n * @param {Scene} scene The scene.\n * @returns {Boolean} <code>true</code> if silhouettes are supported; otherwise, returns <code>false</code>\n */\n\n\nModel.silhouetteSupported = function (scene) {\n  return silhouetteSupported(scene.context);\n};\n\nfunction containsGltfMagic(uint8Array) {\n  var magic = getMagic(uint8Array);\n  return magic === \"glTF\";\n}\n/**\n * <p>\n * Creates a model from a glTF asset.  When the model is ready to render, i.e., when the external binary, image,\n * and shader files are downloaded and the WebGL resources are created, the {@link Model#readyPromise} is resolved.\n * </p>\n * <p>\n * The model can be a traditional glTF asset with a .gltf extension or a Binary glTF using the .glb extension.\n * </p>\n * <p>\n * Cesium supports glTF assets with the following extensions:\n * <ul>\n * <li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/README.md|KHR_binary_glTF (glTF 1.0)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_materials_common/README.md|KHR_materials_common (glTF 1.0)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Vendor/WEB3D_quantized_attributes/README.md|WEB3D_quantized_attributes (glTF 1.0)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/AGI_articulations/README.md|AGI_articulations}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/pull/1302|KHR_blend (draft)}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_draco_mesh_compression/README.md|KHR_draco_mesh_compression}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/README.md|KHR_materials_pbrSpecularGlossiness}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit/README.md|KHR_materials_unlit}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_techniques_webgl/README.md|KHR_techniques_webgl}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_transform/README.md|KHR_texture_transform}\n * </li><li>\n * {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_texture_basisu/README.md|KHR_texture_basisu}\n * </li>\n * </ul>\n * </p>\n * <p>\n * For high-precision rendering, Cesium supports the {@link https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Vendor/CESIUM_RTC/README.md|CESIUM_RTC} extension, which introduces the\n * CESIUM_RTC_MODELVIEW parameter semantic that says the node is in WGS84 coordinates translated\n * relative to a local origin.\n * </p>\n *\n * @param {Object} options Object with the following properties:\n * @param {Resource|String} options.url The url to the .gltf file.\n * @param {Resource|String} [options.basePath] The base path that paths in the glTF JSON are relative to.\n * @param {Boolean} [options.show=true] Determines if the model primitive will be shown.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 transformation matrix that transforms the model from model to world coordinates.\n * @param {Number} [options.scale=1.0] A uniform scale applied to this model.\n * @param {Number} [options.minimumPixelSize=0.0] The approximate minimum pixel size of the model regardless of zoom.\n * @param {Number} [options.maximumScale] The maximum scale for the model.\n * @param {Object} [options.id] A user-defined object to return when the model is picked with {@link Scene#pick}.\n * @param {Boolean} [options.allowPicking=true] When <code>true</code>, each glTF mesh and primitive is pickable with {@link Scene#pick}.\n * @param {Boolean} [options.incrementallyLoadTextures=true] Determine if textures may continue to stream in after the model is loaded.\n * @param {Boolean} [options.asynchronous=true] Determines if model WebGL resource creation will be spread out over several frames or block until completion once all glTF files are loaded.\n * @param {Boolean} [options.clampAnimations=true] Determines if the model's animations should hold a pose over frames where no keyframes are specified.\n * @param {ShadowMode} [options.shadows=ShadowMode.ENABLED] Determines whether the model casts or receives shadows from light sources.\n * @param {Boolean} [options.debugShowBoundingVolume=false] For debugging only. Draws the bounding sphere for each draw command in the model.\n * @param {Boolean} [options.debugWireframe=false] For debugging only. Draws the model in wireframe.\n * @param {HeightReference} [options.heightReference=HeightReference.NONE] Determines how the model is drawn relative to terrain.\n * @param {Scene} [options.scene] Must be passed in for models that use the height reference property.\n * @param {DistanceDisplayCondition} [options.distanceDisplayCondition] The condition specifying at what distance from the camera that this model will be displayed.\n * @param {Color} [options.color=Color.WHITE] A color that blends with the model's rendered color.\n * @param {ColorBlendMode} [options.colorBlendMode=ColorBlendMode.HIGHLIGHT] Defines how the color blends with the model.\n * @param {Number} [options.colorBlendAmount=0.5] Value used to determine the color strength when the <code>colorBlendMode</code> is <code>MIX</code>. A value of 0.0 results in the model's rendered color while a value of 1.0 results in a solid color, with any value in-between resulting in a mix of the two.\n * @param {Color} [options.silhouetteColor=Color.RED] The silhouette color. If more than 256 models have silhouettes enabled, there is a small chance that overlapping models will have minor artifacts.\n * @param {Number} [options.silhouetteSize=0.0] The size of the silhouette in pixels.\n * @param {ClippingPlaneCollection} [options.clippingPlanes] The {@link ClippingPlaneCollection} used to selectively disable rendering the model.\n * @param {Boolean} [options.dequantizeInShader=true] Determines if a {@link https://github.com/google/draco|Draco} encoded model is dequantized on the GPU. This decreases total memory usage for encoded models.\n * @param {Credit|String} [options.credit] A credit for the model, which is displayed on the canvas.\n * @param {Boolean} [options.backFaceCulling=true] Whether to cull back-facing geometry. When true, back face culling is determined by the material's doubleSided property; when false, back face culling is disabled. Back faces are not culled if {@link Model#color} is translucent or {@link Model#silhouetteSize} is greater than 0.0.\n * @param {Boolean} [options.showOutline=true] Whether to display the outline for models using the {@link https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/CESIUM_primitive_outline|CESIUM_primitive_outline} extension. When true, outlines are displayed. When false, outlines are not displayed.\n * @returns {Model} The newly created model.\n *\n * @example\n * // Example 1. Create a model from a glTF asset\n * const model = scene.primitives.add(Cesium.Model.fromGltf({\n *   url : './duck/duck.gltf'\n * }));\n *\n * @example\n * // Example 2. Create model and provide all properties and events\n * const origin = Cesium.Cartesian3.fromDegrees(-95.0, 40.0, 200000.0);\n * const modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(origin);\n *\n * const model = scene.primitives.add(Cesium.Model.fromGltf({\n *   url : './duck/duck.gltf',\n *   show : true,                     // default\n *   modelMatrix : modelMatrix,\n *   scale : 2.0,                     // double size\n *   minimumPixelSize : 128,          // never smaller than 128 pixels\n *   maximumScale: 20000,             // never larger than 20000 * model size (overrides minimumPixelSize)\n *   allowPicking : false,            // not pickable\n *   debugShowBoundingVolume : false, // default\n *   debugWireframe : false\n * }));\n *\n * model.readyPromise.then(function(model) {\n *   // Play all animations when the model is ready to render\n *   model.activeAnimations.addAll();\n * });\n */\n\n\nModel.fromGltf = function (options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options) || !defined(options.url)) {\n    throw new DeveloperError(\"options.url is required\");\n  } //>>includeEnd('debug');\n\n\n  var url = options.url;\n  options = clone(options); // Create resource for the model file\n\n  var modelResource = Resource.createIfNeeded(url); // Setup basePath to get dependent files\n\n  var basePath = defaultValue(options.basePath, modelResource.clone());\n  var resource = Resource.createIfNeeded(basePath); // If no cache key is provided, use a GUID.\n  // Check using a URI to GUID dictionary that we have not already added this model.\n\n  var cacheKey = defaultValue(options.cacheKey, uriToGuid[getAbsoluteUri(modelResource.url)]);\n\n  if (!defined(cacheKey)) {\n    cacheKey = createGuid();\n    uriToGuid[getAbsoluteUri(modelResource.url)] = cacheKey;\n  }\n\n  if (defined(options.basePath) && !defined(options.cacheKey)) {\n    cacheKey += resource.url;\n  }\n\n  options.cacheKey = cacheKey;\n  options.basePath = resource;\n  var model = new Model(options);\n  var cachedGltf = gltfCache[cacheKey];\n\n  if (!defined(cachedGltf)) {\n    cachedGltf = new CachedGltf({\n      ready: false\n    });\n    cachedGltf.count = 1;\n    cachedGltf.modelsToLoad.push(model);\n    setCachedGltf(model, cachedGltf);\n    gltfCache[cacheKey] = cachedGltf; // Add Accept header if we need it\n\n    if (!defined(modelResource.headers.Accept)) {\n      modelResource.headers.Accept = defaultModelAccept;\n    }\n\n    modelResource.fetchArrayBuffer().then(function (arrayBuffer) {\n      var array = new Uint8Array(arrayBuffer);\n\n      if (containsGltfMagic(array)) {\n        // Load binary glTF\n        var parsedGltf = parseGlb(array);\n        cachedGltf.makeReady(parsedGltf);\n      } else {\n        // Load text (JSON) glTF\n        var json = getJsonFromTypedArray(array);\n        cachedGltf.makeReady(json);\n      }\n\n      var resourceCredits = model._resourceCredits;\n      var credits = modelResource.credits;\n\n      if (defined(credits)) {\n        var length = credits.length;\n\n        for (var i = 0; i < length; i++) {\n          resourceCredits.push(credits[i]);\n        }\n      }\n    }).otherwise(ModelUtility.getFailedLoadFunction(model, \"model\", modelResource.url));\n  } else if (!cachedGltf.ready) {\n    // Cache hit but the fetchArrayBuffer() or fetchText() request is still pending\n    ++cachedGltf.count;\n    cachedGltf.modelsToLoad.push(model);\n  } // else if the cached glTF is defined and ready, the\n  // model constructor will pick it up using the cache key.\n\n\n  return model;\n};\n/**\n * For the unit tests to verify model caching.\n *\n * @private\n */\n\n\nModel._gltfCache = gltfCache;\n\nfunction getRuntime(model, runtimeName, name) {\n  //>>includeStart('debug', pragmas.debug);\n  if (model._state !== ModelState.LOADED) {\n    throw new DeveloperError(\"The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\");\n  }\n\n  if (!defined(name)) {\n    throw new DeveloperError(\"name is required.\");\n  } //>>includeEnd('debug');\n\n\n  return model._runtime[runtimeName][name];\n}\n/**\n * Returns the glTF node with the given <code>name</code> property.  This is used to\n * modify a node's transform for animation outside of glTF animations.\n *\n * @param {String} name The glTF name of the node.\n * @returns {ModelNode} The node or <code>undefined</code> if no node with <code>name</code> exists.\n *\n * @exception {DeveloperError} The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\n *\n * @example\n * // Apply non-uniform scale to node LOD3sp\n * const node = model.getNode('LOD3sp');\n * node.matrix = Cesium.Matrix4.fromScale(new Cesium.Cartesian3(5.0, 1.0, 1.0), node.matrix);\n */\n\n\nModel.prototype.getNode = function (name) {\n  var node = getRuntime(this, \"nodesByName\", name);\n  return defined(node) ? node.publicNode : undefined;\n};\n/**\n * Returns the glTF mesh with the given <code>name</code> property.\n *\n * @param {String} name The glTF name of the mesh.\n *\n * @returns {ModelMesh} The mesh or <code>undefined</code> if no mesh with <code>name</code> exists.\n *\n * @exception {DeveloperError} The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\n */\n\n\nModel.prototype.getMesh = function (name) {\n  return getRuntime(this, \"meshesByName\", name);\n};\n/**\n * Returns the glTF material with the given <code>name</code> property.\n *\n * @param {String} name The glTF name of the material.\n * @returns {ModelMaterial} The material or <code>undefined</code> if no material with <code>name</code> exists.\n *\n * @exception {DeveloperError} The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\n */\n\n\nModel.prototype.getMaterial = function (name) {\n  return getRuntime(this, \"materialsByName\", name);\n};\n/**\n * Sets the current value of an articulation stage.  After setting one or multiple stage values, call\n * Model.applyArticulations() to cause the node matrices to be recalculated.\n *\n * @param {String} articulationStageKey The name of the articulation, a space, and the name of the stage.\n * @param {Number} value The numeric value of this stage of the articulation.\n *\n * @exception {DeveloperError} The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\n *\n * @see Model#applyArticulations\n */\n\n\nModel.prototype.setArticulationStage = function (articulationStageKey, value) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number(\"value\", value); //>>includeEnd('debug');\n\n  var stage = getRuntime(this, \"stagesByKey\", articulationStageKey);\n  var articulation = getRuntime(this, \"articulationsByStageKey\", articulationStageKey);\n\n  if (defined(stage) && defined(articulation)) {\n    value = CesiumMath.clamp(value, stage.minimumValue, stage.maximumValue);\n\n    if (!CesiumMath.equalsEpsilon(stage.currentValue, value, articulationEpsilon)) {\n      stage.currentValue = value;\n      articulation.isDirty = true;\n    }\n  }\n};\n\nvar scratchArticulationCartesian = new Cartesian3();\nvar scratchArticulationRotation = new Matrix3();\n/**\n * Modifies a Matrix4 by applying a transformation for a given value of a stage.  Note this is different usage\n * from the typical <code>result</code> parameter, in that the incoming value of <code>result</code> is\n * meaningful.  Various stages of an articulation can be multiplied together, so their\n * transformations are all merged into a composite Matrix4 representing them all.\n *\n * @param {object} stage The stage of an articulation that is being evaluated.\n * @param {Matrix4} result The matrix to be modified.\n * @returns {Matrix4} A matrix transformed as requested by the articulation stage.\n *\n * @private\n */\n\nfunction applyArticulationStageMatrix(stage, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"stage\", stage);\n  Check.typeOf.object(\"result\", result); //>>includeEnd('debug');\n\n  var value = stage.currentValue;\n  var cartesian = scratchArticulationCartesian;\n  var rotation;\n\n  switch (stage.type) {\n    case \"xRotate\":\n      rotation = Matrix3.fromRotationX(CesiumMath.toRadians(value), scratchArticulationRotation);\n      Matrix4.multiplyByMatrix3(result, rotation, result);\n      break;\n\n    case \"yRotate\":\n      rotation = Matrix3.fromRotationY(CesiumMath.toRadians(value), scratchArticulationRotation);\n      Matrix4.multiplyByMatrix3(result, rotation, result);\n      break;\n\n    case \"zRotate\":\n      rotation = Matrix3.fromRotationZ(CesiumMath.toRadians(value), scratchArticulationRotation);\n      Matrix4.multiplyByMatrix3(result, rotation, result);\n      break;\n\n    case \"xTranslate\":\n      cartesian.x = value;\n      cartesian.y = 0.0;\n      cartesian.z = 0.0;\n      Matrix4.multiplyByTranslation(result, cartesian, result);\n      break;\n\n    case \"yTranslate\":\n      cartesian.x = 0.0;\n      cartesian.y = value;\n      cartesian.z = 0.0;\n      Matrix4.multiplyByTranslation(result, cartesian, result);\n      break;\n\n    case \"zTranslate\":\n      cartesian.x = 0.0;\n      cartesian.y = 0.0;\n      cartesian.z = value;\n      Matrix4.multiplyByTranslation(result, cartesian, result);\n      break;\n\n    case \"xScale\":\n      cartesian.x = value;\n      cartesian.y = 1.0;\n      cartesian.z = 1.0;\n      Matrix4.multiplyByScale(result, cartesian, result);\n      break;\n\n    case \"yScale\":\n      cartesian.x = 1.0;\n      cartesian.y = value;\n      cartesian.z = 1.0;\n      Matrix4.multiplyByScale(result, cartesian, result);\n      break;\n\n    case \"zScale\":\n      cartesian.x = 1.0;\n      cartesian.y = 1.0;\n      cartesian.z = value;\n      Matrix4.multiplyByScale(result, cartesian, result);\n      break;\n\n    case \"uniformScale\":\n      Matrix4.multiplyByUniformScale(result, value, result);\n      break;\n\n    default:\n      break;\n  }\n\n  return result;\n}\n\nvar scratchApplyArticulationTransform = new Matrix4();\n/**\n * Applies any modified articulation stages to the matrix of each node that participates\n * in any articulation.  Note that this will overwrite any nodeTransformations on participating nodes.\n *\n * @exception {DeveloperError} The model is not loaded.  Use Model.readyPromise or wait for Model.ready to be true.\n */\n\nModel.prototype.applyArticulations = function () {\n  var articulationsByName = this._runtime.articulationsByName;\n\n  for (var articulationName in articulationsByName) {\n    if (articulationsByName.hasOwnProperty(articulationName)) {\n      var articulation = articulationsByName[articulationName];\n\n      if (articulation.isDirty) {\n        articulation.isDirty = false;\n        var numNodes = articulation.nodes.length;\n\n        for (var n = 0; n < numNodes; ++n) {\n          var node = articulation.nodes[n];\n          var transform = Matrix4.clone(node.originalMatrix, scratchApplyArticulationTransform);\n          var numStages = articulation.stages.length;\n\n          for (var s = 0; s < numStages; ++s) {\n            var stage = articulation.stages[s];\n            transform = applyArticulationStageMatrix(stage, transform);\n          }\n\n          node.matrix = transform;\n        }\n      }\n    }\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n\nfunction addBuffersToLoadResources(model) {\n  var gltf = model.gltf;\n  var loadResources = model._loadResources;\n  ForEach.buffer(gltf, function (buffer, id) {\n    loadResources.buffers[id] = buffer.extras._pipeline.source;\n  });\n}\n\nfunction bufferLoad(model, id) {\n  return function (arrayBuffer) {\n    var loadResources = model._loadResources;\n    var buffer = new Uint8Array(arrayBuffer);\n    --loadResources.pendingBufferLoads;\n    model.gltf.buffers[id].extras._pipeline.source = buffer;\n  };\n}\n\nfunction parseBufferViews(model) {\n  var bufferViews = model.gltf.bufferViews;\n  var vertexBuffersToCreate = model._loadResources.vertexBuffersToCreate; // Only ARRAY_BUFFER here.  ELEMENT_ARRAY_BUFFER created below.\n\n  ForEach.bufferView(model.gltf, function (bufferView, id) {\n    if (bufferView.target === WebGLConstants.ARRAY_BUFFER) {\n      vertexBuffersToCreate.enqueue(id);\n    }\n  });\n  var indexBuffersToCreate = model._loadResources.indexBuffersToCreate;\n  var indexBufferIds = {}; // The Cesium Renderer requires knowing the datatype for an index buffer\n  // at creation type, which is not part of the glTF bufferview so loop\n  // through glTF accessors to create the bufferview's index buffer.\n\n  ForEach.accessor(model.gltf, function (accessor) {\n    var bufferViewId = accessor.bufferView;\n\n    if (!defined(bufferViewId)) {\n      return;\n    }\n\n    var bufferView = bufferViews[bufferViewId];\n\n    if (bufferView.target === WebGLConstants.ELEMENT_ARRAY_BUFFER && !defined(indexBufferIds[bufferViewId])) {\n      indexBufferIds[bufferViewId] = true;\n      indexBuffersToCreate.enqueue({\n        id: bufferViewId,\n        componentType: accessor.componentType\n      });\n    }\n  });\n}\n\nfunction parseTechniques(model) {\n  // retain references to gltf techniques\n  var gltf = model.gltf;\n\n  if (!usesExtension(gltf, \"KHR_techniques_webgl\")) {\n    return;\n  }\n\n  var sourcePrograms = model._sourcePrograms;\n  var sourceTechniques = model._sourceTechniques;\n  var programs = gltf.extensions.KHR_techniques_webgl.programs;\n  ForEach.technique(gltf, function (technique, techniqueId) {\n    sourceTechniques[techniqueId] = clone(technique);\n    var programId = technique.program;\n\n    if (!defined(sourcePrograms[programId])) {\n      sourcePrograms[programId] = clone(programs[programId]);\n    }\n  });\n}\n\nfunction shaderLoad(model, type, id) {\n  return function (source) {\n    var loadResources = model._loadResources;\n    loadResources.shaders[id] = {\n      source: source,\n      type: type,\n      bufferView: undefined\n    };\n    --loadResources.pendingShaderLoads;\n    model._rendererResources.sourceShaders[id] = source;\n  };\n}\n\nfunction parseShaders(model) {\n  var gltf = model.gltf;\n  var buffers = gltf.buffers;\n  var bufferViews = gltf.bufferViews;\n  var sourceShaders = model._rendererResources.sourceShaders;\n  ForEach.shader(gltf, function (shader, id) {\n    // Shader references either uri (external or base64-encoded) or bufferView\n    if (defined(shader.bufferView)) {\n      var bufferViewId = shader.bufferView;\n      var bufferView = bufferViews[bufferViewId];\n      var bufferId = bufferView.buffer;\n      var buffer = buffers[bufferId];\n      var source = getStringFromTypedArray(buffer.extras._pipeline.source, bufferView.byteOffset, bufferView.byteLength);\n      sourceShaders[id] = source;\n    } else if (defined(shader.extras._pipeline.source)) {\n      sourceShaders[id] = shader.extras._pipeline.source;\n    } else {\n      ++model._loadResources.pendingShaderLoads;\n\n      var shaderResource = model._resource.getDerivedResource({\n        url: shader.uri\n      });\n\n      shaderResource.fetchText().then(shaderLoad(model, shader.type, id)).otherwise(ModelUtility.getFailedLoadFunction(model, \"shader\", shaderResource.url));\n    }\n  });\n}\n\nfunction parsePrograms(model) {\n  var sourceTechniques = model._sourceTechniques;\n\n  for (var techniqueId in sourceTechniques) {\n    if (sourceTechniques.hasOwnProperty(techniqueId)) {\n      var technique = sourceTechniques[techniqueId];\n\n      model._loadResources.programsToCreate.enqueue({\n        programId: technique.program,\n        techniqueId: techniqueId\n      });\n    }\n  }\n}\n\nfunction parseArticulations(model) {\n  var articulationsByName = {};\n  var articulationsByStageKey = {};\n  var runtimeStagesByKey = {};\n  model._runtime.articulationsByName = articulationsByName;\n  model._runtime.articulationsByStageKey = articulationsByStageKey;\n  model._runtime.stagesByKey = runtimeStagesByKey;\n  var gltf = model.gltf;\n\n  if (!usesExtension(gltf, \"AGI_articulations\") || !defined(gltf.extensions) || !defined(gltf.extensions.AGI_articulations)) {\n    return;\n  }\n\n  var gltfArticulations = gltf.extensions.AGI_articulations.articulations;\n\n  if (!defined(gltfArticulations)) {\n    return;\n  }\n\n  var numArticulations = gltfArticulations.length;\n\n  for (var i = 0; i < numArticulations; ++i) {\n    var articulation = clone(gltfArticulations[i]);\n    articulation.nodes = [];\n    articulation.isDirty = true;\n    articulationsByName[articulation.name] = articulation;\n    var numStages = articulation.stages.length;\n\n    for (var s = 0; s < numStages; ++s) {\n      var stage = articulation.stages[s];\n      stage.currentValue = stage.initialValue;\n      var stageKey = articulation.name + \" \" + stage.name;\n      articulationsByStageKey[stageKey] = articulation;\n      runtimeStagesByKey[stageKey] = stage;\n    }\n  }\n}\n\nfunction imageLoad(model, textureId) {\n  return function (image) {\n    var loadResources = model._loadResources;\n    --loadResources.pendingTextureLoads; // Images transcoded from KTX2 can contain multiple mip levels:\n    // https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n\n    var mipLevels;\n\n    if (Array.isArray(image)) {\n      // highest detail mip should be level 0\n      mipLevels = image.slice(1, image.length).map(function (mipLevel) {\n        return mipLevel.bufferView;\n      });\n      image = image[0];\n    }\n\n    loadResources.texturesToCreate.enqueue({\n      id: textureId,\n      image: image,\n      bufferView: image.bufferView,\n      width: image.width,\n      height: image.height,\n      internalFormat: image.internalFormat,\n      mipLevels: mipLevels\n    });\n  };\n}\n\nvar ktx2Regex = /(^data:image\\/ktx2)|(\\.ktx2$)/i;\n\nfunction parseTextures(model, context, supportsWebP) {\n  var gltf = model.gltf;\n  var images = gltf.images;\n  var uri;\n  ForEach.texture(gltf, function (texture, id) {\n    var imageId = texture.source;\n\n    if (defined(texture.extensions) && defined(texture.extensions.EXT_texture_webp) && supportsWebP) {\n      imageId = texture.extensions.EXT_texture_webp.source;\n    } else if (defined(texture.extensions) && defined(texture.extensions.KHR_texture_basisu) && context.supportsBasis) {\n      imageId = texture.extensions.KHR_texture_basisu.source;\n    }\n\n    var gltfImage = images[imageId];\n    var bufferViewId = gltfImage.bufferView;\n    var mimeType = gltfImage.mimeType;\n    uri = gltfImage.uri; // Image references either uri (external or base64-encoded) or bufferView\n\n    if (defined(bufferViewId)) {\n      model._loadResources.texturesToCreateFromBufferView.enqueue({\n        id: id,\n        image: undefined,\n        bufferView: bufferViewId,\n        mimeType: mimeType\n      });\n    } else {\n      ++model._loadResources.pendingTextureLoads;\n\n      var imageResource = model._resource.getDerivedResource({\n        url: uri\n      });\n\n      var promise;\n\n      if (ktx2Regex.test(uri)) {\n        promise = loadKTX2(imageResource);\n      } else {\n        promise = imageResource.fetchImage({\n          skipColorSpaceConversion: true,\n          preferImageBitmap: true\n        });\n      }\n\n      promise.then(imageLoad(model, id, imageId)).otherwise(ModelUtility.getFailedLoadFunction(model, \"image\", imageResource.url));\n    }\n  });\n}\n\nvar scratchArticulationStageInitialTransform = new Matrix4();\n\nfunction parseNodes(model) {\n  var runtimeNodes = {};\n  var runtimeNodesByName = {};\n  var skinnedNodes = [];\n  var skinnedNodesIds = model._loadResources.skinnedNodesIds;\n  var articulationsByName = model._runtime.articulationsByName;\n  ForEach.node(model.gltf, function (node, id) {\n    var runtimeNode = {\n      // Animation targets\n      matrix: undefined,\n      translation: undefined,\n      rotation: undefined,\n      scale: undefined,\n      // Per-node show inherited from parent\n      computedShow: true,\n      // Computed transforms\n      transformToRoot: new Matrix4(),\n      computedMatrix: new Matrix4(),\n      dirtyNumber: 0,\n      // The frame this node was made dirty by an animation; for graph traversal\n      // Rendering\n      commands: [],\n      // empty for transform, light, and camera nodes\n      // Skinned node\n      inverseBindMatrices: undefined,\n      // undefined when node is not skinned\n      bindShapeMatrix: undefined,\n      // undefined when node is not skinned or identity\n      joints: [],\n      // empty when node is not skinned\n      computedJointMatrices: [],\n      // empty when node is not skinned\n      // Joint node\n      jointName: node.jointName,\n      // undefined when node is not a joint\n      weights: [],\n      // Graph pointers\n      children: [],\n      // empty for leaf nodes\n      parents: [],\n      // empty for root nodes\n      // Publicly-accessible ModelNode instance to modify animation targets\n      publicNode: undefined\n    };\n    runtimeNode.publicNode = new ModelNode(model, node, runtimeNode, id, ModelUtility.getTransform(node));\n    runtimeNodes[id] = runtimeNode;\n    runtimeNodesByName[node.name] = runtimeNode;\n\n    if (defined(node.skin)) {\n      skinnedNodesIds.push(id);\n      skinnedNodes.push(runtimeNode);\n    }\n\n    if (defined(node.extensions) && defined(node.extensions.AGI_articulations)) {\n      var articulationName = node.extensions.AGI_articulations.articulationName;\n\n      if (defined(articulationName)) {\n        var transform = Matrix4.clone(runtimeNode.publicNode.originalMatrix, scratchArticulationStageInitialTransform);\n        var articulation = articulationsByName[articulationName];\n        articulation.nodes.push(runtimeNode.publicNode);\n        var numStages = articulation.stages.length;\n\n        for (var s = 0; s < numStages; ++s) {\n          var stage = articulation.stages[s];\n          transform = applyArticulationStageMatrix(stage, transform);\n        }\n\n        runtimeNode.publicNode.matrix = transform;\n      }\n    }\n  });\n  model._runtime.nodes = runtimeNodes;\n  model._runtime.nodesByName = runtimeNodesByName;\n  model._runtime.skinnedNodes = skinnedNodes;\n}\n\nfunction parseMaterials(model) {\n  var gltf = model.gltf;\n  var techniques = model._sourceTechniques;\n  var runtimeMaterialsByName = {};\n  var runtimeMaterialsById = {};\n  var uniformMaps = model._uniformMaps;\n  ForEach.material(gltf, function (material, materialId) {\n    // Allocated now so ModelMaterial can keep a reference to it.\n    uniformMaps[materialId] = {\n      uniformMap: undefined,\n      values: undefined,\n      jointMatrixUniformName: undefined,\n      morphWeightsUniformName: undefined\n    };\n    var modelMaterial = new ModelMaterial(model, material, materialId);\n\n    if (defined(material.extensions) && defined(material.extensions.KHR_techniques_webgl)) {\n      var techniqueId = material.extensions.KHR_techniques_webgl.technique;\n      modelMaterial._technique = techniqueId;\n      modelMaterial._program = techniques[techniqueId].program;\n      ForEach.materialValue(material, function (value, uniformName) {\n        if (!defined(modelMaterial._values)) {\n          modelMaterial._values = {};\n        }\n\n        modelMaterial._values[uniformName] = clone(value);\n      });\n    }\n\n    runtimeMaterialsByName[material.name] = modelMaterial;\n    runtimeMaterialsById[materialId] = modelMaterial;\n  });\n  model._runtime.materialsByName = runtimeMaterialsByName;\n  model._runtime.materialsById = runtimeMaterialsById;\n}\n\nfunction parseMeshes(model) {\n  var runtimeMeshesByName = {};\n  var runtimeMaterialsById = model._runtime.materialsById;\n  ForEach.mesh(model.gltf, function (mesh, meshId) {\n    runtimeMeshesByName[mesh.name] = new ModelMesh(mesh, runtimeMaterialsById, meshId);\n\n    if (defined(model.extensionsUsed.WEB3D_quantized_attributes) || model._dequantizeInShader) {\n      // Cache primitives according to their program\n      ForEach.meshPrimitive(mesh, function (primitive, primitiveId) {\n        var programId = getProgramForPrimitive(model, primitive);\n        var programPrimitives = model._programPrimitives[programId];\n\n        if (!defined(programPrimitives)) {\n          programPrimitives = {};\n          model._programPrimitives[programId] = programPrimitives;\n        }\n\n        programPrimitives[meshId + \".primitive.\" + primitiveId] = primitive;\n      });\n    }\n  });\n  model._runtime.meshesByName = runtimeMeshesByName;\n} ///////////////////////////////////////////////////////////////////////////\n\n\nvar CreateVertexBufferJob = function CreateVertexBufferJob() {\n  this.id = undefined;\n  this.model = undefined;\n  this.context = undefined;\n};\n\nCreateVertexBufferJob.prototype.set = function (id, model, context) {\n  this.id = id;\n  this.model = model;\n  this.context = context;\n};\n\nCreateVertexBufferJob.prototype.execute = function () {\n  createVertexBuffer(this.id, this.model, this.context);\n}; ///////////////////////////////////////////////////////////////////////////\n\n\nfunction createVertexBuffer(bufferViewId, model, context) {\n  var loadResources = model._loadResources;\n  var bufferViews = model.gltf.bufferViews;\n  var bufferView = bufferViews[bufferViewId]; // Use bufferView created at runtime\n\n  if (!defined(bufferView)) {\n    bufferView = loadResources.createdBufferViews[bufferViewId];\n  }\n\n  var vertexBuffer = Buffer.createVertexBuffer({\n    context: context,\n    typedArray: loadResources.getBuffer(bufferView),\n    usage: BufferUsage.STATIC_DRAW\n  });\n  vertexBuffer.vertexArrayDestroyable = false;\n  model._rendererResources.buffers[bufferViewId] = vertexBuffer;\n  model._geometryByteLength += vertexBuffer.sizeInBytes;\n} ///////////////////////////////////////////////////////////////////////////\n\n\nvar CreateIndexBufferJob = function CreateIndexBufferJob() {\n  this.id = undefined;\n  this.componentType = undefined;\n  this.model = undefined;\n  this.context = undefined;\n};\n\nCreateIndexBufferJob.prototype.set = function (id, componentType, model, context) {\n  this.id = id;\n  this.componentType = componentType;\n  this.model = model;\n  this.context = context;\n};\n\nCreateIndexBufferJob.prototype.execute = function () {\n  createIndexBuffer(this.id, this.componentType, this.model, this.context);\n}; ///////////////////////////////////////////////////////////////////////////\n\n\nfunction createIndexBuffer(bufferViewId, componentType, model, context) {\n  var loadResources = model._loadResources;\n  var bufferViews = model.gltf.bufferViews;\n  var bufferView = bufferViews[bufferViewId]; // Use bufferView created at runtime\n\n  if (!defined(bufferView)) {\n    bufferView = loadResources.createdBufferViews[bufferViewId];\n  }\n\n  var indexBuffer = Buffer.createIndexBuffer({\n    context: context,\n    typedArray: loadResources.getBuffer(bufferView),\n    usage: BufferUsage.STATIC_DRAW,\n    indexDatatype: componentType\n  });\n  indexBuffer.vertexArrayDestroyable = false;\n  model._rendererResources.buffers[bufferViewId] = indexBuffer;\n  model._geometryByteLength += indexBuffer.sizeInBytes;\n}\n\nvar scratchVertexBufferJob = new CreateVertexBufferJob();\nvar scratchIndexBufferJob = new CreateIndexBufferJob();\n\nfunction createBuffers(model, frameState) {\n  var loadResources = model._loadResources;\n\n  if (loadResources.pendingBufferLoads !== 0) {\n    return;\n  }\n\n  var context = frameState.context;\n  var vertexBuffersToCreate = loadResources.vertexBuffersToCreate;\n  var indexBuffersToCreate = loadResources.indexBuffersToCreate;\n  var i;\n\n  if (model.asynchronous) {\n    while (vertexBuffersToCreate.length > 0) {\n      scratchVertexBufferJob.set(vertexBuffersToCreate.peek(), model, context);\n\n      if (!frameState.jobScheduler.execute(scratchVertexBufferJob, JobType.BUFFER)) {\n        break;\n      }\n\n      vertexBuffersToCreate.dequeue();\n    }\n\n    while (indexBuffersToCreate.length > 0) {\n      i = indexBuffersToCreate.peek();\n      scratchIndexBufferJob.set(i.id, i.componentType, model, context);\n\n      if (!frameState.jobScheduler.execute(scratchIndexBufferJob, JobType.BUFFER)) {\n        break;\n      }\n\n      indexBuffersToCreate.dequeue();\n    }\n  } else {\n    while (vertexBuffersToCreate.length > 0) {\n      createVertexBuffer(vertexBuffersToCreate.dequeue(), model, context);\n    }\n\n    while (indexBuffersToCreate.length > 0) {\n      i = indexBuffersToCreate.dequeue();\n      createIndexBuffer(i.id, i.componentType, model, context);\n    }\n  }\n}\n\nfunction getProgramForPrimitive(model, primitive) {\n  var material = model._runtime.materialsById[primitive.material];\n\n  if (!defined(material)) {\n    return;\n  }\n\n  return material._program;\n}\n\nfunction modifyShaderForQuantizedAttributes(shader, programName, model) {\n  var primitive;\n  var primitives = model._programPrimitives[programName]; // If no primitives were cached for this program, there's no need to modify the shader\n\n  if (!defined(primitives)) {\n    return shader;\n  }\n\n  var primitiveId;\n\n  for (primitiveId in primitives) {\n    if (primitives.hasOwnProperty(primitiveId)) {\n      primitive = primitives[primitiveId];\n\n      if (getProgramForPrimitive(model, primitive) === programName) {\n        break;\n      }\n    }\n  } // This is not needed after the program is processed, free the memory\n\n\n  model._programPrimitives[programName] = undefined;\n  var result;\n\n  if (model.extensionsUsed.WEB3D_quantized_attributes) {\n    result = ModelUtility.modifyShaderForQuantizedAttributes(model.gltf, primitive, shader);\n    model._quantizedUniforms[programName] = result.uniforms;\n  } else {\n    var decodedData = model._decodedData[primitiveId];\n\n    if (defined(decodedData)) {\n      result = ModelUtility.modifyShaderForDracoQuantizedAttributes(model.gltf, primitive, shader, decodedData.attributes);\n    } else {\n      return shader;\n    }\n  }\n\n  return result.shader;\n}\n\nfunction modifyShaderForColor(shader) {\n  shader = ShaderSource.replaceMain(shader, \"gltf_blend_main\");\n  shader += \"uniform vec4 gltf_color; \\n\" + \"uniform float gltf_colorBlend; \\n\" + \"void main() \\n\" + \"{ \\n\" + \"    gltf_blend_main(); \\n\" + \"    gl_FragColor.rgb = mix(gl_FragColor.rgb, gltf_color.rgb, gltf_colorBlend); \\n\" + \"    float highlight = ceil(gltf_colorBlend); \\n\" + \"    gl_FragColor.rgb *= mix(gltf_color.rgb, vec3(1.0), highlight); \\n\" + \"    gl_FragColor.a *= gltf_color.a; \\n\" + \"} \\n\";\n  return shader;\n}\n\nfunction modifyShader(shader, programName, callback) {\n  if (defined(callback)) {\n    shader = callback(shader, programName);\n  }\n\n  return shader;\n}\n\nvar CreateProgramJob = function CreateProgramJob() {\n  this.programToCreate = undefined;\n  this.model = undefined;\n  this.context = undefined;\n};\n\nCreateProgramJob.prototype.set = function (programToCreate, model, context) {\n  this.programToCreate = programToCreate;\n  this.model = model;\n  this.context = context;\n};\n\nCreateProgramJob.prototype.execute = function () {\n  createProgram(this.programToCreate, this.model, this.context);\n}; ///////////////////////////////////////////////////////////////////////////\n// When building programs for the first time, do not include modifiers for clipping planes and color\n// since this is the version of the program that will be cached for use with other Models.\n\n\nfunction createProgram(programToCreate, model, context) {\n  var programId = programToCreate.programId;\n  var techniqueId = programToCreate.techniqueId;\n  var program = model._sourcePrograms[programId];\n  var shaders = model._rendererResources.sourceShaders;\n  var vs = shaders[program.vertexShader];\n  var fs = shaders[program.fragmentShader];\n  var quantizedVertexShaders = model._quantizedVertexShaders;\n\n  if (model.extensionsUsed.WEB3D_quantized_attributes || model._dequantizeInShader) {\n    var quantizedVS = quantizedVertexShaders[programId];\n\n    if (!defined(quantizedVS)) {\n      quantizedVS = modifyShaderForQuantizedAttributes(vs, programId, model);\n      quantizedVertexShaders[programId] = quantizedVS;\n    }\n\n    vs = quantizedVS;\n  }\n\n  var drawVS = modifyShader(vs, programId, model._vertexShaderLoaded);\n  var drawFS = modifyShader(fs, programId, model._fragmentShaderLoaded);\n\n  if (!defined(model._uniformMapLoaded)) {\n    drawFS = \"uniform vec4 czm_pickColor;\\n\" + drawFS;\n  }\n\n  var useIBL = model._imageBasedLightingFactor.x > 0.0 || model._imageBasedLightingFactor.y > 0.0;\n\n  if (useIBL) {\n    drawFS = \"#define USE_IBL_LIGHTING \\n\\n\" + drawFS;\n  }\n\n  if (defined(model._lightColor)) {\n    drawFS = \"#define USE_CUSTOM_LIGHT_COLOR \\n\\n\" + drawFS;\n  }\n\n  if (model._sourceVersion !== \"2.0\" || model._sourceKHRTechniquesWebGL) {\n    drawFS = ShaderSource.replaceMain(drawFS, \"non_gamma_corrected_main\");\n    drawFS = drawFS + \"\\n\" + \"void main() { \\n\" + \"    non_gamma_corrected_main(); \\n\" + \"    gl_FragColor = czm_gammaCorrect(gl_FragColor); \\n\" + \"} \\n\";\n  }\n\n  if (OctahedralProjectedCubeMap.isSupported(context)) {\n    var usesSH = defined(model._sphericalHarmonicCoefficients) || model._useDefaultSphericalHarmonics;\n\n    var usesSM = defined(model._specularEnvironmentMapAtlas) && model._specularEnvironmentMapAtlas.ready || model._useDefaultSpecularMaps;\n\n    var addMatrix = usesSH || usesSM || useIBL;\n\n    if (addMatrix) {\n      drawFS = \"uniform mat3 gltf_iblReferenceFrameMatrix; \\n\" + drawFS;\n    }\n\n    if (defined(model._sphericalHarmonicCoefficients)) {\n      drawFS = \"#define DIFFUSE_IBL \\n\" + \"#define CUSTOM_SPHERICAL_HARMONICS \\n\" + \"uniform vec3 gltf_sphericalHarmonicCoefficients[9]; \\n\" + drawFS;\n    } else if (model._useDefaultSphericalHarmonics) {\n      drawFS = \"#define DIFFUSE_IBL \\n\" + drawFS;\n    }\n\n    if (defined(model._specularEnvironmentMapAtlas) && model._specularEnvironmentMapAtlas.ready) {\n      drawFS = \"#define SPECULAR_IBL \\n\" + \"#define CUSTOM_SPECULAR_IBL \\n\" + \"uniform sampler2D gltf_specularMap; \\n\" + \"uniform vec2 gltf_specularMapSize; \\n\" + \"uniform float gltf_maxSpecularLOD; \\n\" + drawFS;\n    } else if (model._useDefaultSpecularMaps) {\n      drawFS = \"#define SPECULAR_IBL \\n\" + drawFS;\n    }\n  }\n\n  if (defined(model._luminanceAtZenith)) {\n    drawFS = \"#define USE_SUN_LUMINANCE \\n\" + \"uniform float gltf_luminanceAtZenith;\\n\" + drawFS;\n  }\n\n  createAttributesAndProgram(programId, techniqueId, drawFS, drawVS, model, context);\n}\n\nfunction recreateProgram(programToCreate, model, context) {\n  var programId = programToCreate.programId;\n  var techniqueId = programToCreate.techniqueId;\n  var program = model._sourcePrograms[programId];\n  var shaders = model._rendererResources.sourceShaders;\n  var quantizedVertexShaders = model._quantizedVertexShaders;\n  var clippingPlaneCollection = model.clippingPlanes;\n  var addClippingPlaneCode = isClippingEnabled(model);\n  var vs = shaders[program.vertexShader];\n  var fs = shaders[program.fragmentShader];\n\n  if (model.extensionsUsed.WEB3D_quantized_attributes || model._dequantizeInShader) {\n    vs = quantizedVertexShaders[programId];\n  }\n\n  var finalFS = fs;\n\n  if (isColorShadingEnabled(model)) {\n    finalFS = Model._modifyShaderForColor(finalFS);\n  }\n\n  if (addClippingPlaneCode) {\n    finalFS = modifyShaderForClippingPlanes(finalFS, clippingPlaneCollection, context);\n  }\n\n  var drawVS = modifyShader(vs, programId, model._vertexShaderLoaded);\n  var drawFS = modifyShader(finalFS, programId, model._fragmentShaderLoaded);\n\n  if (!defined(model._uniformMapLoaded)) {\n    drawFS = \"uniform vec4 czm_pickColor;\\n\" + drawFS;\n  }\n\n  var useIBL = model._imageBasedLightingFactor.x > 0.0 || model._imageBasedLightingFactor.y > 0.0;\n\n  if (useIBL) {\n    drawFS = \"#define USE_IBL_LIGHTING \\n\\n\" + drawFS;\n  }\n\n  if (defined(model._lightColor)) {\n    drawFS = \"#define USE_CUSTOM_LIGHT_COLOR \\n\\n\" + drawFS;\n  }\n\n  if (model._sourceVersion !== \"2.0\" || model._sourceKHRTechniquesWebGL) {\n    drawFS = ShaderSource.replaceMain(drawFS, \"non_gamma_corrected_main\");\n    drawFS = drawFS + \"\\n\" + \"void main() { \\n\" + \"    non_gamma_corrected_main(); \\n\" + \"    gl_FragColor = czm_gammaCorrect(gl_FragColor); \\n\" + \"} \\n\";\n  }\n\n  if (OctahedralProjectedCubeMap.isSupported(context)) {\n    var usesSH = defined(model._sphericalHarmonicCoefficients) || model._useDefaultSphericalHarmonics;\n\n    var usesSM = defined(model._specularEnvironmentMapAtlas) && model._specularEnvironmentMapAtlas.ready || model._useDefaultSpecularMaps;\n\n    var addMatrix = usesSH || usesSM || useIBL;\n\n    if (addMatrix) {\n      drawFS = \"uniform mat3 gltf_iblReferenceFrameMatrix; \\n\" + drawFS;\n    }\n\n    if (defined(model._sphericalHarmonicCoefficients)) {\n      drawFS = \"#define DIFFUSE_IBL \\n\" + \"#define CUSTOM_SPHERICAL_HARMONICS \\n\" + \"uniform vec3 gltf_sphericalHarmonicCoefficients[9]; \\n\" + drawFS;\n    } else if (model._useDefaultSphericalHarmonics) {\n      drawFS = \"#define DIFFUSE_IBL \\n\" + drawFS;\n    }\n\n    if (defined(model._specularEnvironmentMapAtlas) && model._specularEnvironmentMapAtlas.ready) {\n      drawFS = \"#define SPECULAR_IBL \\n\" + \"#define CUSTOM_SPECULAR_IBL \\n\" + \"uniform sampler2D gltf_specularMap; \\n\" + \"uniform vec2 gltf_specularMapSize; \\n\" + \"uniform float gltf_maxSpecularLOD; \\n\" + drawFS;\n    } else if (model._useDefaultSpecularMaps) {\n      drawFS = \"#define SPECULAR_IBL \\n\" + drawFS;\n    }\n  }\n\n  if (defined(model._luminanceAtZenith)) {\n    drawFS = \"#define USE_SUN_LUMINANCE \\n\" + \"uniform float gltf_luminanceAtZenith;\\n\" + drawFS;\n  }\n\n  createAttributesAndProgram(programId, techniqueId, drawFS, drawVS, model, context);\n}\n\nfunction createAttributesAndProgram(programId, techniqueId, drawFS, drawVS, model, context) {\n  var technique = model._sourceTechniques[techniqueId];\n  var attributeLocations = ModelUtility.createAttributeLocations(technique, model._precreatedAttributes);\n  model._rendererResources.programs[programId] = ShaderProgram.fromCache({\n    context: context,\n    vertexShaderSource: drawVS,\n    fragmentShaderSource: drawFS,\n    attributeLocations: attributeLocations\n  });\n}\n\nvar scratchCreateProgramJob = new CreateProgramJob();\n\nfunction createPrograms(model, frameState) {\n  var loadResources = model._loadResources;\n  var programsToCreate = loadResources.programsToCreate;\n\n  if (loadResources.pendingShaderLoads !== 0) {\n    return;\n  } // PERFORMANCE_IDEA: this could be more fine-grained by looking\n  // at the shader's bufferView's to determine the buffer dependencies.\n\n\n  if (loadResources.pendingBufferLoads !== 0) {\n    return;\n  }\n\n  var context = frameState.context;\n\n  if (model.asynchronous) {\n    while (programsToCreate.length > 0) {\n      scratchCreateProgramJob.set(programsToCreate.peek(), model, context);\n\n      if (!frameState.jobScheduler.execute(scratchCreateProgramJob, JobType.PROGRAM)) {\n        break;\n      }\n\n      programsToCreate.dequeue();\n    }\n  } else {\n    // Create all loaded programs this frame\n    while (programsToCreate.length > 0) {\n      createProgram(programsToCreate.dequeue(), model, context);\n    }\n  }\n}\n\nfunction getOnImageCreatedFromTypedArray(loadResources, gltfTexture) {\n  return function (image) {\n    loadResources.texturesToCreate.enqueue({\n      id: gltfTexture.id,\n      image: image,\n      bufferView: undefined\n    });\n    --loadResources.pendingBufferViewToImage;\n  };\n}\n\nfunction loadTexturesFromBufferViews(model) {\n  var loadResources = model._loadResources;\n\n  if (loadResources.pendingBufferLoads !== 0) {\n    return;\n  }\n\n  while (loadResources.texturesToCreateFromBufferView.length > 0) {\n    var gltfTexture = loadResources.texturesToCreateFromBufferView.dequeue();\n    var gltf = model.gltf;\n    var bufferView = gltf.bufferViews[gltfTexture.bufferView];\n    var imageId = gltf.textures[gltfTexture.id].source;\n    var onerror = ModelUtility.getFailedLoadFunction(model, \"image\", \"id: \" + gltfTexture.id + \", bufferView: \" + gltfTexture.bufferView);\n\n    if (gltfTexture.mimeType === \"image/ktx2\") {\n      // Need to make a copy of the embedded KTX2 buffer otherwise the underlying\n      // ArrayBuffer may be accessed on both the worker and the main thread and\n      // throw an error like \"Cannot perform Construct on a detached ArrayBuffer\".\n      // Look into SharedArrayBuffer at some point to get around this.\n      var ktxBuffer = new Uint8Array(loadResources.getBuffer(bufferView));\n      loadKTX2(ktxBuffer).then(imageLoad(model, gltfTexture.id, imageId)).otherwise(onerror);\n      ++model._loadResources.pendingTextureLoads;\n    } else {\n      var onload = getOnImageCreatedFromTypedArray(loadResources, gltfTexture);\n      loadImageFromTypedArray({\n        uint8Array: loadResources.getBuffer(bufferView),\n        format: gltfTexture.mimeType,\n        flipY: false,\n        skipColorSpaceConversion: true\n      }).then(onload).otherwise(onerror);\n      ++loadResources.pendingBufferViewToImage;\n    }\n  }\n}\n\nfunction createSamplers(model) {\n  var loadResources = model._loadResources;\n\n  if (loadResources.createSamplers) {\n    loadResources.createSamplers = false;\n    var rendererSamplers = model._rendererResources.samplers;\n    ForEach.sampler(model.gltf, function (sampler, samplerId) {\n      rendererSamplers[samplerId] = new Sampler({\n        wrapS: sampler.wrapS,\n        wrapT: sampler.wrapT,\n        minificationFilter: sampler.minFilter,\n        magnificationFilter: sampler.magFilter\n      });\n    });\n  }\n} ///////////////////////////////////////////////////////////////////////////\n\n\nvar CreateTextureJob = function CreateTextureJob() {\n  this.gltfTexture = undefined;\n  this.model = undefined;\n  this.context = undefined;\n};\n\nCreateTextureJob.prototype.set = function (gltfTexture, model, context) {\n  this.gltfTexture = gltfTexture;\n  this.model = model;\n  this.context = context;\n};\n\nCreateTextureJob.prototype.execute = function () {\n  createTexture(this.gltfTexture, this.model, this.context);\n}; ///////////////////////////////////////////////////////////////////////////\n\n\nfunction createTexture(gltfTexture, model, context) {\n  var textures = model.gltf.textures;\n  var texture = textures[gltfTexture.id];\n  var rendererSamplers = model._rendererResources.samplers;\n  var sampler = rendererSamplers[texture.sampler];\n\n  if (!defined(sampler)) {\n    sampler = new Sampler({\n      wrapS: TextureWrap.REPEAT,\n      wrapT: TextureWrap.REPEAT\n    });\n  }\n\n  var usesTextureTransform = false;\n  var materials = model.gltf.materials;\n  var materialsLength = materials.length;\n\n  for (var i = 0; i < materialsLength; ++i) {\n    var material = materials[i];\n\n    if (defined(material.extensions) && defined(material.extensions.KHR_techniques_webgl)) {\n      var values = material.extensions.KHR_techniques_webgl.values;\n\n      for (var valueName in values) {\n        if (values.hasOwnProperty(valueName) && valueName.indexOf(\"Texture\") !== -1) {\n          var value = values[valueName];\n\n          if (value.index === gltfTexture.id && defined(value.extensions) && defined(value.extensions.KHR_texture_transform)) {\n            usesTextureTransform = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (usesTextureTransform) {\n      break;\n    }\n  }\n\n  var wrapS = sampler.wrapS;\n  var wrapT = sampler.wrapT;\n  var minFilter = sampler.minificationFilter;\n\n  if (usesTextureTransform && minFilter !== TextureMinificationFilter.LINEAR && minFilter !== TextureMinificationFilter.NEAREST) {\n    if (minFilter === TextureMinificationFilter.NEAREST_MIPMAP_NEAREST || minFilter === TextureMinificationFilter.NEAREST_MIPMAP_LINEAR) {\n      minFilter = TextureMinificationFilter.NEAREST;\n    } else {\n      minFilter = TextureMinificationFilter.LINEAR;\n    }\n\n    sampler = new Sampler({\n      wrapS: sampler.wrapS,\n      wrapT: sampler.wrapT,\n      minificationFilter: minFilter,\n      magnificationFilter: sampler.magnificationFilter\n    });\n  }\n\n  var internalFormat = gltfTexture.internalFormat;\n  var mipmap = !(defined(internalFormat) && PixelFormat.isCompressedFormat(internalFormat)) && (minFilter === TextureMinificationFilter.NEAREST_MIPMAP_NEAREST || minFilter === TextureMinificationFilter.NEAREST_MIPMAP_LINEAR || minFilter === TextureMinificationFilter.LINEAR_MIPMAP_NEAREST || minFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR);\n  var requiresNpot = mipmap || wrapS === TextureWrap.REPEAT || wrapS === TextureWrap.MIRRORED_REPEAT || wrapT === TextureWrap.REPEAT || wrapT === TextureWrap.MIRRORED_REPEAT;\n  var npot;\n  var tx;\n  var source = gltfTexture.image;\n\n  if (defined(internalFormat)) {\n    npot = !CesiumMath.isPowerOfTwo(gltfTexture.width) || !CesiumMath.isPowerOfTwo(gltfTexture.height); // Warning to encourage power of 2 texture dimensions with KHR_texture_basisu\n\n    if (!context.webgl2 && PixelFormat.isCompressedFormat(internalFormat) && npot && requiresNpot) {\n      console.warn(\"Compressed texture uses REPEAT or MIRRORED_REPEAT texture wrap mode and dimensions are not powers of two. The texture may be rendered incorrectly. See the Model.js constructor documentation for more information.\");\n    }\n\n    var minificationFilter = sampler.minificationFilter;\n\n    if (!defined(gltfTexture.mipLevels) && (minFilter === TextureMinificationFilter.NEAREST_MIPMAP_NEAREST || minFilter === TextureMinificationFilter.NEAREST_MIPMAP_LINEAR)) {\n      minificationFilter = TextureMinificationFilter.NEAREST;\n    } else if (!defined(gltfTexture.mipLevels) && (minFilter === TextureMinificationFilter.LINEAR_MIPMAP_NEAREST || minFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR)) {\n      minificationFilter = TextureMinificationFilter.LINEAR;\n    }\n\n    sampler = new Sampler({\n      wrapS: sampler.wrapS,\n      wrapT: sampler.wrapT,\n      minificationFilter: minificationFilter,\n      magnificationFilter: sampler.magnificationFilter\n    });\n    tx = new Texture({\n      context: context,\n      source: {\n        arrayBufferView: gltfTexture.bufferView,\n        mipLevels: gltfTexture.mipLevels\n      },\n      width: gltfTexture.width,\n      height: gltfTexture.height,\n      pixelFormat: internalFormat,\n      sampler: sampler\n    });\n  } else if (defined(source)) {\n    npot = !CesiumMath.isPowerOfTwo(source.width) || !CesiumMath.isPowerOfTwo(source.height);\n\n    if (requiresNpot && npot) {\n      // WebGL requires power-of-two texture dimensions for mipmapping and REPEAT/MIRRORED_REPEAT wrap modes.\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = CesiumMath.nextPowerOfTwo(source.width);\n      canvas.height = CesiumMath.nextPowerOfTwo(source.height);\n      var canvasContext = canvas.getContext(\"2d\");\n      canvasContext.drawImage(source, 0, 0, source.width, source.height, 0, 0, canvas.width, canvas.height);\n      source = canvas;\n    }\n\n    tx = new Texture({\n      context: context,\n      source: source,\n      pixelFormat: texture.internalFormat,\n      pixelDatatype: texture.type,\n      sampler: sampler,\n      flipY: false,\n      skipColorSpaceConversion: true\n    }); // GLTF_SPEC: Support TEXTURE_CUBE_MAP.  https://github.com/KhronosGroup/glTF/issues/40\n\n    if (mipmap) {\n      tx.generateMipmap();\n    }\n  }\n\n  if (defined(tx)) {\n    model._rendererResources.textures[gltfTexture.id] = tx;\n    model._texturesByteLength += tx.sizeInBytes;\n  }\n}\n\nvar scratchCreateTextureJob = new CreateTextureJob();\n\nfunction createTextures(model, frameState) {\n  var context = frameState.context;\n  var texturesToCreate = model._loadResources.texturesToCreate;\n\n  if (model.asynchronous) {\n    while (texturesToCreate.length > 0) {\n      scratchCreateTextureJob.set(texturesToCreate.peek(), model, context);\n\n      if (!frameState.jobScheduler.execute(scratchCreateTextureJob, JobType.TEXTURE)) {\n        break;\n      }\n\n      texturesToCreate.dequeue();\n    }\n  } else {\n    // Create all loaded textures this frame\n    while (texturesToCreate.length > 0) {\n      createTexture(texturesToCreate.dequeue(), model, context);\n    }\n  }\n}\n\nfunction getAttributeLocations(model, primitive) {\n  var techniques = model._sourceTechniques; // Retrieve the compiled shader program to assign index values to attributes\n\n  var attributeLocations = {};\n  var location;\n  var index;\n  var material = model._runtime.materialsById[primitive.material];\n\n  if (!defined(material)) {\n    return attributeLocations;\n  }\n\n  var technique = techniques[material._technique];\n\n  if (!defined(technique)) {\n    return attributeLocations;\n  }\n\n  var attributes = technique.attributes;\n  var program = model._rendererResources.programs[technique.program];\n  var programAttributeLocations = program._attributeLocations;\n\n  for (location in programAttributeLocations) {\n    if (programAttributeLocations.hasOwnProperty(location)) {\n      var attribute = attributes[location];\n\n      if (defined(attribute)) {\n        index = programAttributeLocations[location];\n        attributeLocations[attribute.semantic] = index;\n      }\n    }\n  } // Add pre-created attributes.\n\n\n  var precreatedAttributes = model._precreatedAttributes;\n\n  if (defined(precreatedAttributes)) {\n    for (location in precreatedAttributes) {\n      if (precreatedAttributes.hasOwnProperty(location)) {\n        index = programAttributeLocations[location];\n        attributeLocations[location] = index;\n      }\n    }\n  }\n\n  return attributeLocations;\n}\n\nfunction createJoints(model, runtimeSkins) {\n  var gltf = model.gltf;\n  var skins = gltf.skins;\n  var nodes = gltf.nodes;\n  var runtimeNodes = model._runtime.nodes;\n  var skinnedNodesIds = model._loadResources.skinnedNodesIds;\n  var length = skinnedNodesIds.length;\n\n  for (var j = 0; j < length; ++j) {\n    var id = skinnedNodesIds[j];\n    var skinnedNode = runtimeNodes[id];\n    var node = nodes[id];\n    var runtimeSkin = runtimeSkins[node.skin];\n    skinnedNode.inverseBindMatrices = runtimeSkin.inverseBindMatrices;\n    skinnedNode.bindShapeMatrix = runtimeSkin.bindShapeMatrix;\n    var gltfJoints = skins[node.skin].joints;\n    var jointsLength = gltfJoints.length;\n\n    for (var i = 0; i < jointsLength; ++i) {\n      var nodeId = gltfJoints[i];\n      var jointNode = runtimeNodes[nodeId];\n      skinnedNode.joints.push(jointNode);\n    }\n  }\n}\n\nfunction createSkins(model) {\n  var loadResources = model._loadResources;\n\n  if (loadResources.pendingBufferLoads !== 0) {\n    return;\n  }\n\n  if (!loadResources.createSkins) {\n    return;\n  }\n\n  loadResources.createSkins = false;\n  var gltf = model.gltf;\n  var accessors = gltf.accessors;\n  var runtimeSkins = {};\n  ForEach.skin(gltf, function (skin, id) {\n    var accessor = accessors[skin.inverseBindMatrices];\n    var bindShapeMatrix;\n\n    if (!Matrix4.equals(skin.bindShapeMatrix, Matrix4.IDENTITY)) {\n      bindShapeMatrix = Matrix4.clone(skin.bindShapeMatrix);\n    }\n\n    runtimeSkins[id] = {\n      inverseBindMatrices: ModelAnimationCache.getSkinInverseBindMatrices(model, accessor),\n      bindShapeMatrix: bindShapeMatrix // not used when undefined\n\n    };\n  });\n  createJoints(model, runtimeSkins);\n}\n\nfunction getChannelEvaluator(model, runtimeNode, targetPath, spline) {\n  return function (localAnimationTime) {\n    if (defined(spline)) {\n      localAnimationTime = model.clampAnimations ? spline.clampTime(localAnimationTime) : spline.wrapTime(localAnimationTime);\n      runtimeNode[targetPath] = spline.evaluate(localAnimationTime, runtimeNode[targetPath]);\n      runtimeNode.dirtyNumber = model._maxDirtyNumber;\n    }\n  };\n}\n\nfunction createRuntimeAnimations(model) {\n  var loadResources = model._loadResources;\n\n  if (!loadResources.finishedPendingBufferLoads()) {\n    return;\n  }\n\n  if (!loadResources.createRuntimeAnimations) {\n    return;\n  }\n\n  loadResources.createRuntimeAnimations = false;\n  model._runtime.animations = [];\n  var runtimeNodes = model._runtime.nodes;\n  var accessors = model.gltf.accessors;\n  ForEach.animation(model.gltf, function (animation, i) {\n    var channels = animation.channels;\n    var samplers = animation.samplers; // Find start and stop time for the entire animation\n\n    var startTime = Number.MAX_VALUE;\n    var stopTime = -Number.MAX_VALUE;\n    var channelsLength = channels.length;\n    var channelEvaluators = new Array(channelsLength);\n\n    for (var j = 0; j < channelsLength; ++j) {\n      var channel = channels[j];\n      var target = channel.target;\n      var path = target.path;\n      var sampler = samplers[channel.sampler];\n      var input = ModelAnimationCache.getAnimationParameterValues(model, accessors[sampler.input]);\n      var output = ModelAnimationCache.getAnimationParameterValues(model, accessors[sampler.output]);\n      startTime = Math.min(startTime, input[0]);\n      stopTime = Math.max(stopTime, input[input.length - 1]);\n      var spline = ModelAnimationCache.getAnimationSpline(model, i, animation, channel.sampler, sampler, input, path, output);\n      channelEvaluators[j] = getChannelEvaluator(model, runtimeNodes[target.node], target.path, spline);\n    }\n\n    model._runtime.animations[i] = {\n      name: animation.name,\n      startTime: startTime,\n      stopTime: stopTime,\n      channelEvaluators: channelEvaluators\n    };\n  });\n}\n\nfunction createVertexArrays(model, context) {\n  var loadResources = model._loadResources;\n\n  if (!loadResources.finishedBuffersCreation() || !loadResources.finishedProgramCreation() || !loadResources.createVertexArrays) {\n    return;\n  }\n\n  loadResources.createVertexArrays = false;\n  var rendererBuffers = model._rendererResources.buffers;\n  var rendererVertexArrays = model._rendererResources.vertexArrays;\n  var gltf = model.gltf;\n  var accessors = gltf.accessors;\n  ForEach.mesh(gltf, function (mesh, meshId) {\n    ForEach.meshPrimitive(mesh, function (primitive, primitiveId) {\n      var attributes = [];\n      var attributeLocation;\n      var attributeLocations = getAttributeLocations(model, primitive);\n      var decodedData = model._decodedData[meshId + \".primitive.\" + primitiveId];\n      ForEach.meshPrimitiveAttribute(primitive, function (accessorId, attributeName) {\n        // Skip if the attribute is not used by the material, e.g., because the asset\n        // was exported with an attribute that wasn't used and the asset wasn't optimized.\n        attributeLocation = attributeLocations[attributeName];\n\n        if (defined(attributeLocation)) {\n          // Use attributes of previously decoded draco geometry\n          if (defined(decodedData)) {\n            var decodedAttributes = decodedData.attributes;\n\n            if (decodedAttributes.hasOwnProperty(attributeName)) {\n              var decodedAttribute = decodedAttributes[attributeName];\n              attributes.push({\n                index: attributeLocation,\n                vertexBuffer: rendererBuffers[decodedAttribute.bufferView],\n                componentsPerAttribute: decodedAttribute.componentsPerAttribute,\n                componentDatatype: decodedAttribute.componentDatatype,\n                normalize: decodedAttribute.normalized,\n                offsetInBytes: decodedAttribute.byteOffset,\n                strideInBytes: decodedAttribute.byteStride\n              });\n              return;\n            }\n          }\n\n          var a = accessors[accessorId];\n          var normalize = defined(a.normalized) && a.normalized;\n          attributes.push({\n            index: attributeLocation,\n            vertexBuffer: rendererBuffers[a.bufferView],\n            componentsPerAttribute: numberOfComponentsForType(a.type),\n            componentDatatype: a.componentType,\n            normalize: normalize,\n            offsetInBytes: a.byteOffset,\n            strideInBytes: getAccessorByteStride(gltf, a)\n          });\n        }\n      }); // Add pre-created attributes\n\n      var attribute;\n      var attributeName;\n      var precreatedAttributes = model._precreatedAttributes;\n\n      if (defined(precreatedAttributes)) {\n        for (attributeName in precreatedAttributes) {\n          if (precreatedAttributes.hasOwnProperty(attributeName)) {\n            attributeLocation = attributeLocations[attributeName];\n\n            if (defined(attributeLocation)) {\n              attribute = precreatedAttributes[attributeName];\n              attribute.index = attributeLocation;\n              attributes.push(attribute);\n            }\n          }\n        }\n      }\n\n      var indexBuffer;\n\n      if (defined(primitive.indices)) {\n        var accessor = accessors[primitive.indices];\n        var bufferView = accessor.bufferView; // Use buffer of previously decoded draco geometry\n\n        if (defined(decodedData)) {\n          bufferView = decodedData.bufferView;\n        }\n\n        indexBuffer = rendererBuffers[bufferView];\n      }\n\n      rendererVertexArrays[meshId + \".primitive.\" + primitiveId] = new VertexArray({\n        context: context,\n        attributes: attributes,\n        indexBuffer: indexBuffer\n      });\n    });\n  });\n}\n\nfunction createRenderStates(model) {\n  var loadResources = model._loadResources;\n\n  if (loadResources.createRenderStates) {\n    loadResources.createRenderStates = false;\n    ForEach.material(model.gltf, function (material, materialId) {\n      createRenderStateForMaterial(model, material, materialId);\n    });\n  }\n}\n\nfunction createRenderStateForMaterial(model, material, materialId) {\n  var rendererRenderStates = model._rendererResources.renderStates;\n  var blendEquationSeparate = [WebGLConstants.FUNC_ADD, WebGLConstants.FUNC_ADD];\n  var blendFuncSeparate = [WebGLConstants.ONE, WebGLConstants.ONE_MINUS_SRC_ALPHA, WebGLConstants.ONE, WebGLConstants.ONE_MINUS_SRC_ALPHA];\n\n  if (defined(material.extensions) && defined(material.extensions.KHR_blend)) {\n    blendEquationSeparate = material.extensions.KHR_blend.blendEquation;\n    blendFuncSeparate = material.extensions.KHR_blend.blendFactors;\n  }\n\n  var enableCulling = !material.doubleSided;\n  var blendingEnabled = material.alphaMode === \"BLEND\";\n  rendererRenderStates[materialId] = RenderState.fromCache({\n    cull: {\n      enabled: enableCulling\n    },\n    depthTest: {\n      enabled: true,\n      func: DepthFunction.LESS_OR_EQUAL\n    },\n    depthMask: !blendingEnabled,\n    blending: {\n      enabled: blendingEnabled,\n      equationRgb: blendEquationSeparate[0],\n      equationAlpha: blendEquationSeparate[1],\n      functionSourceRgb: blendFuncSeparate[0],\n      functionDestinationRgb: blendFuncSeparate[1],\n      functionSourceAlpha: blendFuncSeparate[2],\n      functionDestinationAlpha: blendFuncSeparate[3]\n    }\n  });\n} ///////////////////////////////////////////////////////////////////////////\n\n\nvar gltfUniformsFromNode = {\n  MODEL: function MODEL(uniformState, model, runtimeNode) {\n    return function () {\n      return runtimeNode.computedMatrix;\n    };\n  },\n  VIEW: function VIEW(uniformState, model, runtimeNode) {\n    return function () {\n      return uniformState.view;\n    };\n  },\n  PROJECTION: function PROJECTION(uniformState, model, runtimeNode) {\n    return function () {\n      return uniformState.projection;\n    };\n  },\n  MODELVIEW: function MODELVIEW(uniformState, model, runtimeNode) {\n    var mv = new Matrix4();\n    return function () {\n      return Matrix4.multiplyTransformation(uniformState.view, runtimeNode.computedMatrix, mv);\n    };\n  },\n  CESIUM_RTC_MODELVIEW: function CESIUM_RTC_MODELVIEW(uniformState, model, runtimeNode) {\n    // CESIUM_RTC extension\n    var mvRtc = new Matrix4();\n    return function () {\n      Matrix4.multiplyTransformation(uniformState.view, runtimeNode.computedMatrix, mvRtc);\n      return Matrix4.setTranslation(mvRtc, model._rtcCenterEye, mvRtc);\n    };\n  },\n  MODELVIEWPROJECTION: function MODELVIEWPROJECTION(uniformState, model, runtimeNode) {\n    var mvp = new Matrix4();\n    return function () {\n      Matrix4.multiplyTransformation(uniformState.view, runtimeNode.computedMatrix, mvp);\n      return Matrix4.multiply(uniformState._projection, mvp, mvp);\n    };\n  },\n  MODELINVERSE: function MODELINVERSE(uniformState, model, runtimeNode) {\n    var mInverse = new Matrix4();\n    return function () {\n      return Matrix4.inverse(runtimeNode.computedMatrix, mInverse);\n    };\n  },\n  VIEWINVERSE: function VIEWINVERSE(uniformState, model) {\n    return function () {\n      return uniformState.inverseView;\n    };\n  },\n  PROJECTIONINVERSE: function PROJECTIONINVERSE(uniformState, model, runtimeNode) {\n    return function () {\n      return uniformState.inverseProjection;\n    };\n  },\n  MODELVIEWINVERSE: function MODELVIEWINVERSE(uniformState, model, runtimeNode) {\n    var mv = new Matrix4();\n    var mvInverse = new Matrix4();\n    return function () {\n      Matrix4.multiplyTransformation(uniformState.view, runtimeNode.computedMatrix, mv);\n      return Matrix4.inverse(mv, mvInverse);\n    };\n  },\n  MODELVIEWPROJECTIONINVERSE: function MODELVIEWPROJECTIONINVERSE(uniformState, model, runtimeNode) {\n    var mvp = new Matrix4();\n    var mvpInverse = new Matrix4();\n    return function () {\n      Matrix4.multiplyTransformation(uniformState.view, runtimeNode.computedMatrix, mvp);\n      Matrix4.multiply(uniformState._projection, mvp, mvp);\n      return Matrix4.inverse(mvp, mvpInverse);\n    };\n  },\n  MODELINVERSETRANSPOSE: function MODELINVERSETRANSPOSE(uniformState, model, runtimeNode) {\n    var mInverse = new Matrix4();\n    var mInverseTranspose = new Matrix3();\n    return function () {\n      Matrix4.inverse(runtimeNode.computedMatrix, mInverse);\n      Matrix4.getMatrix3(mInverse, mInverseTranspose);\n      return Matrix3.transpose(mInverseTranspose, mInverseTranspose);\n    };\n  },\n  MODELVIEWINVERSETRANSPOSE: function MODELVIEWINVERSETRANSPOSE(uniformState, model, runtimeNode) {\n    var mv = new Matrix4();\n    var mvInverse = new Matrix4();\n    var mvInverseTranspose = new Matrix3();\n    return function () {\n      Matrix4.multiplyTransformation(uniformState.view, runtimeNode.computedMatrix, mv);\n      Matrix4.inverse(mv, mvInverse);\n      Matrix4.getMatrix3(mvInverse, mvInverseTranspose);\n      return Matrix3.transpose(mvInverseTranspose, mvInverseTranspose);\n    };\n  },\n  VIEWPORT: function VIEWPORT(uniformState, model, runtimeNode) {\n    return function () {\n      return uniformState.viewportCartesian4;\n    };\n  }\n};\n\nfunction getUniformFunctionFromSource(source, model, semantic, uniformState) {\n  var runtimeNode = model._runtime.nodes[source];\n  return gltfUniformsFromNode[semantic](uniformState, model, runtimeNode);\n}\n\nfunction createUniformsForMaterial(model, material, technique, instanceValues, context, textures, defaultTexture) {\n  var uniformMap = {};\n  var uniformValues = {};\n  var jointMatrixUniformName;\n  var morphWeightsUniformName;\n  ForEach.techniqueUniform(technique, function (uniform, uniformName) {\n    // GLTF_SPEC: This does not take into account uniform arrays,\n    // indicated by uniforms with a count property.\n    //\n    // https://github.com/KhronosGroup/glTF/issues/258\n    // GLTF_SPEC: In this implementation, material parameters with a\n    // semantic or targeted via a source (for animation) are not\n    // targetable for material animations.  Is this too strict?\n    //\n    // https://github.com/KhronosGroup/glTF/issues/142\n    var uv;\n\n    if (defined(instanceValues) && defined(instanceValues[uniformName])) {\n      // Parameter overrides by the instance technique\n      uv = ModelUtility.createUniformFunction(uniform.type, instanceValues[uniformName], textures, defaultTexture);\n      uniformMap[uniformName] = uv.func;\n      uniformValues[uniformName] = uv;\n    } else if (defined(uniform.node)) {\n      uniformMap[uniformName] = getUniformFunctionFromSource(uniform.node, model, uniform.semantic, context.uniformState);\n    } else if (defined(uniform.semantic)) {\n      if (uniform.semantic === \"JOINTMATRIX\") {\n        jointMatrixUniformName = uniformName;\n      } else if (uniform.semantic === \"MORPHWEIGHTS\") {\n        morphWeightsUniformName = uniformName;\n      } else if (uniform.semantic === \"ALPHACUTOFF\") {\n        // The material's alphaCutoff value uses a uniform with semantic ALPHACUTOFF.\n        // A uniform with this semantic will ignore the instance or default values.\n        var alphaMode = material.alphaMode;\n\n        if (defined(alphaMode) && alphaMode === \"MASK\") {\n          var alphaCutoffValue = defaultValue(material.alphaCutoff, 0.5);\n          uv = ModelUtility.createUniformFunction(uniform.type, alphaCutoffValue, textures, defaultTexture);\n          uniformMap[uniformName] = uv.func;\n          uniformValues[uniformName] = uv;\n        }\n      } else {\n        // Map glTF semantic to Cesium automatic uniform\n        uniformMap[uniformName] = ModelUtility.getGltfSemanticUniforms()[uniform.semantic](context.uniformState, model);\n      }\n    } else if (defined(uniform.value)) {\n      // Technique value that isn't overridden by a material\n      var uv2 = ModelUtility.createUniformFunction(uniform.type, uniform.value, textures, defaultTexture);\n      uniformMap[uniformName] = uv2.func;\n      uniformValues[uniformName] = uv2;\n    }\n  });\n  return {\n    map: uniformMap,\n    values: uniformValues,\n    jointMatrixUniformName: jointMatrixUniformName,\n    morphWeightsUniformName: morphWeightsUniformName\n  };\n}\n\nfunction createUniformMaps(model, context) {\n  var loadResources = model._loadResources;\n\n  if (!loadResources.finishedProgramCreation()) {\n    return;\n  }\n\n  if (!loadResources.createUniformMaps) {\n    return;\n  }\n\n  loadResources.createUniformMaps = false;\n  var gltf = model.gltf;\n  var techniques = model._sourceTechniques;\n  var uniformMaps = model._uniformMaps;\n  var textures = model._rendererResources.textures;\n  var defaultTexture = model._defaultTexture;\n  ForEach.material(gltf, function (material, materialId) {\n    var modelMaterial = model._runtime.materialsById[materialId];\n    var technique = techniques[modelMaterial._technique];\n    var instanceValues = modelMaterial._values;\n    var uniforms = createUniformsForMaterial(model, material, technique, instanceValues, context, textures, defaultTexture);\n    var u = uniformMaps[materialId];\n    u.uniformMap = uniforms.map; // uniform name -> function for the renderer\n\n    u.values = uniforms.values; // material parameter name -> ModelMaterial for modifying the parameter at runtime\n\n    u.jointMatrixUniformName = uniforms.jointMatrixUniformName;\n    u.morphWeightsUniformName = uniforms.morphWeightsUniformName;\n\n    if (defined(technique.attributes.a_outlineCoordinates)) {\n      var outlineTexture = ModelOutlineLoader.createTexture(model, context);\n\n      u.uniformMap.u_outlineTexture = function () {\n        return outlineTexture;\n      };\n    }\n  });\n}\n\nfunction createUniformsForDracoQuantizedAttributes(decodedData) {\n  return ModelUtility.createUniformsForDracoQuantizedAttributes(decodedData.attributes);\n}\n\nfunction createUniformsForQuantizedAttributes(model, primitive) {\n  var programId = getProgramForPrimitive(model, primitive);\n  var quantizedUniforms = model._quantizedUniforms[programId];\n  return ModelUtility.createUniformsForQuantizedAttributes(model.gltf, primitive, quantizedUniforms);\n}\n\nfunction createPickColorFunction(color) {\n  return function () {\n    return color;\n  };\n}\n\nfunction createJointMatricesFunction(runtimeNode) {\n  return function () {\n    return runtimeNode.computedJointMatrices;\n  };\n}\n\nfunction createMorphWeightsFunction(runtimeNode) {\n  return function () {\n    return runtimeNode.weights;\n  };\n}\n\nfunction createSilhouetteColorFunction(model) {\n  return function () {\n    return model.silhouetteColor;\n  };\n}\n\nfunction createSilhouetteSizeFunction(model) {\n  return function () {\n    return model.silhouetteSize;\n  };\n}\n\nfunction createColorFunction(model) {\n  return function () {\n    return model.color;\n  };\n}\n\nfunction createClippingPlanesMatrixFunction(model) {\n  return function () {\n    return model._clippingPlanesMatrix;\n  };\n}\n\nfunction createIBLReferenceFrameMatrixFunction(model) {\n  return function () {\n    return model._iblReferenceFrameMatrix;\n  };\n}\n\nfunction createClippingPlanesFunction(model) {\n  return function () {\n    var clippingPlanes = model.clippingPlanes;\n    return !defined(clippingPlanes) || !clippingPlanes.enabled ? model._defaultTexture : clippingPlanes.texture;\n  };\n}\n\nfunction createClippingPlanesEdgeStyleFunction(model) {\n  return function () {\n    var clippingPlanes = model.clippingPlanes;\n\n    if (!defined(clippingPlanes)) {\n      return Color.WHITE.withAlpha(0.0);\n    }\n\n    var style = Color.clone(clippingPlanes.edgeColor);\n    style.alpha = clippingPlanes.edgeWidth;\n    return style;\n  };\n}\n\nfunction createColorBlendFunction(model) {\n  return function () {\n    return ColorBlendMode.getColorBlend(model.colorBlendMode, model.colorBlendAmount);\n  };\n}\n\nfunction createIBLFactorFunction(model) {\n  return function () {\n    return model._imageBasedLightingFactor;\n  };\n}\n\nfunction createLightColorFunction(model) {\n  return function () {\n    return model._lightColor;\n  };\n}\n\nfunction createLuminanceAtZenithFunction(model) {\n  return function () {\n    return model.luminanceAtZenith;\n  };\n}\n\nfunction createSphericalHarmonicCoefficientsFunction(model) {\n  return function () {\n    return model._sphericalHarmonicCoefficients;\n  };\n}\n\nfunction createSpecularEnvironmentMapFunction(model) {\n  return function () {\n    return model._specularEnvironmentMapAtlas.texture;\n  };\n}\n\nfunction createSpecularEnvironmentMapSizeFunction(model) {\n  return function () {\n    return model._specularEnvironmentMapAtlas.texture.dimensions;\n  };\n}\n\nfunction createSpecularEnvironmentMapLOD(model) {\n  return function () {\n    return model._specularEnvironmentMapAtlas.maximumMipmapLevel;\n  };\n}\n\nfunction triangleCountFromPrimitiveIndices(primitive, indicesCount) {\n  switch (primitive.mode) {\n    case PrimitiveType.TRIANGLES:\n      return indicesCount / 3;\n\n    case PrimitiveType.TRIANGLE_STRIP:\n    case PrimitiveType.TRIANGLE_FAN:\n      return Math.max(indicesCount - 2, 0);\n\n    default:\n      return 0;\n  }\n}\n\nfunction createCommand(model, gltfNode, runtimeNode, context, scene3DOnly) {\n  var nodeCommands = model._nodeCommands;\n  var pickIds = model._pickIds;\n  var allowPicking = model.allowPicking;\n  var runtimeMeshesByName = model._runtime.meshesByName;\n  var resources = model._rendererResources;\n  var rendererVertexArrays = resources.vertexArrays;\n  var rendererPrograms = resources.programs;\n  var rendererRenderStates = resources.renderStates;\n  var uniformMaps = model._uniformMaps;\n  var gltf = model.gltf;\n  var accessors = gltf.accessors;\n  var gltfMeshes = gltf.meshes;\n  var id = gltfNode.mesh;\n  var mesh = gltfMeshes[id];\n  var primitives = mesh.primitives;\n  var length = primitives.length; // The glTF node hierarchy is a DAG so a node can have more than one\n  // parent, so a node may already have commands.  If so, append more\n  // since they will have a different model matrix.\n\n  for (var i = 0; i < length; ++i) {\n    var primitive = primitives[i];\n    var ix = accessors[primitive.indices];\n    var material = model._runtime.materialsById[primitive.material];\n    var programId = material._program;\n    var decodedData = model._decodedData[id + \".primitive.\" + i];\n    var boundingSphere = void 0;\n    var positionAccessor = primitive.attributes.POSITION;\n\n    if (defined(positionAccessor)) {\n      var minMax = ModelUtility.getAccessorMinMax(gltf, positionAccessor);\n      boundingSphere = BoundingSphere.fromCornerPoints(Cartesian3.fromArray(minMax.min), Cartesian3.fromArray(minMax.max));\n    }\n\n    var vertexArray = rendererVertexArrays[id + \".primitive.\" + i];\n    var offset = void 0;\n    var count = void 0; // Use indices of the previously decoded Draco geometry.\n\n    if (defined(decodedData)) {\n      count = decodedData.numberOfIndices;\n      offset = 0;\n    } else if (defined(ix)) {\n      count = ix.count;\n      offset = ix.byteOffset / IndexDatatype.getSizeInBytes(ix.componentType); // glTF has offset in bytes.  Cesium has offsets in indices\n    } else {\n      var positions = accessors[primitive.attributes.POSITION];\n      count = positions.count;\n      offset = 0;\n    } // Update model triangle count using number of indices\n\n\n    model._trianglesLength += triangleCountFromPrimitiveIndices(primitive, count);\n\n    if (primitive.mode === PrimitiveType.POINTS) {\n      model._pointsLength += count;\n    }\n\n    var um = uniformMaps[primitive.material];\n    var uniformMap = um.uniformMap;\n\n    if (defined(um.jointMatrixUniformName)) {\n      var jointUniformMap = {};\n      jointUniformMap[um.jointMatrixUniformName] = createJointMatricesFunction(runtimeNode);\n      uniformMap = combine(uniformMap, jointUniformMap);\n    }\n\n    if (defined(um.morphWeightsUniformName)) {\n      var morphWeightsUniformMap = {};\n      morphWeightsUniformMap[um.morphWeightsUniformName] = createMorphWeightsFunction(runtimeNode);\n      uniformMap = combine(uniformMap, morphWeightsUniformMap);\n    }\n\n    uniformMap = combine(uniformMap, {\n      gltf_color: createColorFunction(model),\n      gltf_colorBlend: createColorBlendFunction(model),\n      gltf_clippingPlanes: createClippingPlanesFunction(model),\n      gltf_clippingPlanesEdgeStyle: createClippingPlanesEdgeStyleFunction(model),\n      gltf_clippingPlanesMatrix: createClippingPlanesMatrixFunction(model),\n      gltf_iblReferenceFrameMatrix: createIBLReferenceFrameMatrixFunction(model),\n      gltf_iblFactor: createIBLFactorFunction(model),\n      gltf_lightColor: createLightColorFunction(model),\n      gltf_sphericalHarmonicCoefficients: createSphericalHarmonicCoefficientsFunction(model),\n      gltf_specularMap: createSpecularEnvironmentMapFunction(model),\n      gltf_specularMapSize: createSpecularEnvironmentMapSizeFunction(model),\n      gltf_maxSpecularLOD: createSpecularEnvironmentMapLOD(model),\n      gltf_luminanceAtZenith: createLuminanceAtZenithFunction(model)\n    }); // Allow callback to modify the uniformMap\n\n    if (defined(model._uniformMapLoaded)) {\n      uniformMap = model._uniformMapLoaded(uniformMap, programId, runtimeNode);\n    } // Add uniforms for decoding quantized attributes if used\n\n\n    var quantizedUniformMap = {};\n\n    if (model.extensionsUsed.WEB3D_quantized_attributes) {\n      quantizedUniformMap = createUniformsForQuantizedAttributes(model, primitive);\n    } else if (model._dequantizeInShader && defined(decodedData)) {\n      quantizedUniformMap = createUniformsForDracoQuantizedAttributes(decodedData);\n    }\n\n    uniformMap = combine(uniformMap, quantizedUniformMap);\n    var rs = rendererRenderStates[primitive.material];\n    var _isTranslucent = rs.blending.enabled;\n    var owner = model._pickObject;\n\n    if (!defined(owner)) {\n      owner = {\n        primitive: model,\n        id: model.id,\n        node: runtimeNode.publicNode,\n        mesh: runtimeMeshesByName[mesh.name]\n      };\n    }\n\n    var castShadows = ShadowMode.castShadows(model._shadows);\n    var receiveShadows = ShadowMode.receiveShadows(model._shadows);\n    var pickId = void 0;\n\n    if (allowPicking && !defined(model._uniformMapLoaded)) {\n      pickId = context.createPickId(owner);\n      pickIds.push(pickId);\n      var pickUniforms = {\n        czm_pickColor: createPickColorFunction(pickId.color)\n      };\n      uniformMap = combine(uniformMap, pickUniforms);\n    }\n\n    if (allowPicking) {\n      if (defined(model._pickIdLoaded) && defined(model._uniformMapLoaded)) {\n        pickId = model._pickIdLoaded();\n      } else {\n        pickId = \"czm_pickColor\";\n      }\n    }\n\n    var command = new DrawCommand({\n      boundingVolume: new BoundingSphere(),\n      // updated in update()\n      cull: model.cull,\n      modelMatrix: new Matrix4(),\n      // computed in update()\n      primitiveType: primitive.mode,\n      vertexArray: vertexArray,\n      count: count,\n      offset: offset,\n      shaderProgram: rendererPrograms[programId],\n      castShadows: castShadows,\n      receiveShadows: receiveShadows,\n      uniformMap: uniformMap,\n      renderState: rs,\n      owner: owner,\n      pass: _isTranslucent ? Pass.TRANSLUCENT : model.opaquePass,\n      pickId: pickId\n    });\n    var command2D = void 0;\n\n    if (!scene3DOnly) {\n      command2D = DrawCommand.shallowClone(command);\n      command2D.boundingVolume = new BoundingSphere(); // updated in update()\n\n      command2D.modelMatrix = new Matrix4(); // updated in update()\n    }\n\n    var nodeCommand = {\n      show: true,\n      boundingSphere: boundingSphere,\n      command: command,\n      command2D: command2D,\n      // Generated on demand when silhouette size is greater than 0.0 and silhouette alpha is greater than 0.0\n      silhouetteModelCommand: undefined,\n      silhouetteModelCommand2D: undefined,\n      silhouetteColorCommand: undefined,\n      silhouetteColorCommand2D: undefined,\n      // Generated on demand when color alpha is less than 1.0\n      translucentCommand: undefined,\n      translucentCommand2D: undefined,\n      // Generated on demand when back face culling is false\n      disableCullingCommand: undefined,\n      disableCullingCommand2D: undefined,\n      // For updating node commands on shader reconstruction\n      programId: programId\n    };\n    runtimeNode.commands.push(nodeCommand);\n    nodeCommands.push(nodeCommand);\n  }\n}\n\nfunction createRuntimeNodes(model, context, scene3DOnly) {\n  var loadResources = model._loadResources;\n\n  if (!loadResources.finishedEverythingButTextureCreation()) {\n    return;\n  }\n\n  if (!loadResources.createRuntimeNodes) {\n    return;\n  }\n\n  loadResources.createRuntimeNodes = false;\n  var rootNodes = [];\n  var runtimeNodes = model._runtime.nodes;\n  var gltf = model.gltf;\n  var nodes = gltf.nodes;\n  var scene = gltf.scenes[gltf.scene];\n  var sceneNodes = scene.nodes;\n  var length = sceneNodes.length;\n  var stack = [];\n  var seen = {};\n\n  for (var i = 0; i < length; ++i) {\n    stack.push({\n      parentRuntimeNode: undefined,\n      gltfNode: nodes[sceneNodes[i]],\n      id: sceneNodes[i]\n    });\n\n    while (stack.length > 0) {\n      var n = stack.pop();\n      seen[n.id] = true;\n      var parentRuntimeNode = n.parentRuntimeNode;\n      var gltfNode = n.gltfNode; // Node hierarchy is a DAG so a node can have more than one parent so it may already exist\n\n      var runtimeNode = runtimeNodes[n.id];\n\n      if (runtimeNode.parents.length === 0) {\n        if (defined(gltfNode.matrix)) {\n          runtimeNode.matrix = Matrix4.fromColumnMajorArray(gltfNode.matrix);\n        } else {\n          // TRS converted to Cesium types\n          var rotation = gltfNode.rotation;\n          runtimeNode.translation = Cartesian3.fromArray(gltfNode.translation);\n          runtimeNode.rotation = Quaternion.unpack(rotation);\n          runtimeNode.scale = Cartesian3.fromArray(gltfNode.scale);\n        }\n      }\n\n      if (defined(parentRuntimeNode)) {\n        parentRuntimeNode.children.push(runtimeNode);\n        runtimeNode.parents.push(parentRuntimeNode);\n      } else {\n        rootNodes.push(runtimeNode);\n      }\n\n      if (defined(gltfNode.mesh)) {\n        createCommand(model, gltfNode, runtimeNode, context, scene3DOnly);\n      }\n\n      var children = gltfNode.children;\n\n      if (defined(children)) {\n        var childrenLength = children.length;\n\n        for (var j = 0; j < childrenLength; j++) {\n          var childId = children[j];\n\n          if (!seen[childId]) {\n            stack.push({\n              parentRuntimeNode: runtimeNode,\n              gltfNode: nodes[childId],\n              id: children[j]\n            });\n          }\n        }\n      }\n    }\n  }\n\n  model._runtime.rootNodes = rootNodes;\n  model._runtime.nodes = runtimeNodes;\n}\n\nfunction getGeometryByteLength(buffers) {\n  var memory = 0;\n\n  for (var id in buffers) {\n    if (buffers.hasOwnProperty(id)) {\n      memory += buffers[id].sizeInBytes;\n    }\n  }\n\n  return memory;\n}\n\nfunction getTexturesByteLength(textures) {\n  var memory = 0;\n\n  for (var id in textures) {\n    if (textures.hasOwnProperty(id)) {\n      memory += textures[id].sizeInBytes;\n    }\n  }\n\n  return memory;\n}\n\nfunction createResources(model, frameState) {\n  var context = frameState.context;\n  var scene3DOnly = frameState.scene3DOnly;\n  var quantizedVertexShaders = model._quantizedVertexShaders;\n  var techniques = model._sourceTechniques;\n  var programs = model._sourcePrograms;\n  var resources = model._rendererResources;\n  var shaders = resources.sourceShaders;\n\n  if (model._loadRendererResourcesFromCache) {\n    shaders = resources.sourceShaders = model._cachedRendererResources.sourceShaders;\n  }\n\n  for (var techniqueId in techniques) {\n    if (techniques.hasOwnProperty(techniqueId)) {\n      var programId = techniques[techniqueId].program;\n      var program = programs[programId];\n      var shader = shaders[program.vertexShader];\n      ModelUtility.checkSupportedGlExtensions(program.glExtensions, context);\n\n      if (model.extensionsUsed.WEB3D_quantized_attributes || model._dequantizeInShader) {\n        var quantizedVS = quantizedVertexShaders[programId];\n\n        if (!defined(quantizedVS)) {\n          quantizedVS = modifyShaderForQuantizedAttributes(shader, programId, model);\n          quantizedVertexShaders[programId] = quantizedVS;\n        }\n\n        shader = quantizedVS;\n      }\n\n      shader = modifyShader(shader, programId, model._vertexShaderLoaded);\n    }\n  }\n\n  if (model._loadRendererResourcesFromCache) {\n    var cachedResources = model._cachedRendererResources;\n    resources.buffers = cachedResources.buffers;\n    resources.vertexArrays = cachedResources.vertexArrays;\n    resources.programs = cachedResources.programs;\n    resources.silhouettePrograms = cachedResources.silhouettePrograms;\n    resources.textures = cachedResources.textures;\n    resources.samplers = cachedResources.samplers;\n    resources.renderStates = cachedResources.renderStates; // Vertex arrays are unique to this model, create instead of using the cache.\n\n    if (defined(model._precreatedAttributes)) {\n      createVertexArrays(model, context);\n    }\n\n    model._cachedGeometryByteLength += getGeometryByteLength(cachedResources.buffers);\n    model._cachedTexturesByteLength += getTexturesByteLength(cachedResources.textures);\n  } else {\n    createBuffers(model, frameState); // using glTF bufferViews\n\n    createPrograms(model, frameState);\n    createSamplers(model, context);\n    loadTexturesFromBufferViews(model);\n    createTextures(model, frameState);\n  }\n\n  createSkins(model);\n  createRuntimeAnimations(model);\n\n  if (!model._loadRendererResourcesFromCache) {\n    createVertexArrays(model, context); // using glTF meshes\n\n    createRenderStates(model); // using glTF materials/techniques/states\n    // Long-term, we might not cache render states if they could change\n    // due to an animation, e.g., a uniform going from opaque to transparent.\n    // Could use copy-on-write if it is worth it.  Probably overkill.\n  }\n\n  createUniformMaps(model, context); // using glTF materials/techniques\n\n  createRuntimeNodes(model, context, scene3DOnly); // using glTF scene\n} ///////////////////////////////////////////////////////////////////////////\n\n\nfunction getNodeMatrix(node, result) {\n  var publicNode = node.publicNode;\n  var publicMatrix = publicNode.matrix;\n\n  if (publicNode.useMatrix && defined(publicMatrix)) {\n    // Public matrix overrides original glTF matrix and glTF animations\n    Matrix4.clone(publicMatrix, result);\n  } else if (defined(node.matrix)) {\n    Matrix4.clone(node.matrix, result);\n  } else {\n    Matrix4.fromTranslationQuaternionRotationScale(node.translation, node.rotation, node.scale, result); // Keep matrix returned by the node in-sync if the node is targeted by an animation.  Only TRS nodes can be targeted.\n\n    publicNode.setMatrix(result);\n  }\n}\n\nvar scratchNodeStack = [];\nvar scratchComputedTranslation = new Cartesian4();\nvar scratchComputedMatrixIn2D = new Matrix4();\n\nfunction updateNodeHierarchyModelMatrix(model, modelTransformChanged, justLoaded, projection) {\n  var maxDirtyNumber = model._maxDirtyNumber;\n  var rootNodes = model._runtime.rootNodes;\n  var length = rootNodes.length;\n  var nodeStack = scratchNodeStack;\n  var computedModelMatrix = model._computedModelMatrix;\n\n  if (model._mode !== SceneMode.SCENE3D && !model._ignoreCommands) {\n    var translation = Matrix4.getColumn(computedModelMatrix, 3, scratchComputedTranslation);\n\n    if (!Cartesian4.equals(translation, Cartesian4.UNIT_W)) {\n      computedModelMatrix = Transforms.basisTo2D(projection, computedModelMatrix, scratchComputedMatrixIn2D);\n      model._rtcCenter = model._rtcCenter3D;\n    } else {\n      var center = model.boundingSphere.center;\n      var to2D = Transforms.wgs84To2DModelMatrix(projection, center, scratchComputedMatrixIn2D);\n      computedModelMatrix = Matrix4.multiply(to2D, computedModelMatrix, scratchComputedMatrixIn2D);\n\n      if (defined(model._rtcCenter)) {\n        Matrix4.setTranslation(computedModelMatrix, Cartesian4.UNIT_W, computedModelMatrix);\n        model._rtcCenter = model._rtcCenter2D;\n      }\n    }\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var n = rootNodes[i];\n    getNodeMatrix(n, n.transformToRoot);\n    nodeStack.push(n);\n\n    while (nodeStack.length > 0) {\n      n = nodeStack.pop();\n      var transformToRoot = n.transformToRoot;\n      var commands = n.commands;\n\n      if (n.dirtyNumber === maxDirtyNumber || modelTransformChanged || justLoaded) {\n        var nodeMatrix = Matrix4.multiplyTransformation(computedModelMatrix, transformToRoot, n.computedMatrix);\n        var commandsLength = commands.length;\n\n        if (commandsLength > 0) {\n          // Node has meshes, which has primitives.  Update their commands.\n          for (var j = 0; j < commandsLength; ++j) {\n            var primitiveCommand = commands[j];\n            var command = primitiveCommand.command;\n            Matrix4.clone(nodeMatrix, command.modelMatrix); // PERFORMANCE_IDEA: Can use transformWithoutScale if no node up to the root has scale (including animation)\n\n            BoundingSphere.transform(primitiveCommand.boundingSphere, command.modelMatrix, command.boundingVolume);\n\n            if (defined(model._rtcCenter)) {\n              Cartesian3.add(model._rtcCenter, command.boundingVolume.center, command.boundingVolume.center);\n            } // If the model crosses the IDL in 2D, it will be drawn in one viewport, but part of it\n            // will be clipped by the viewport. We create a second command that translates the model\n            // model matrix to the opposite side of the map so the part that was clipped in one viewport\n            // is drawn in the other.\n\n\n            command = primitiveCommand.command2D;\n\n            if (defined(command) && model._mode === SceneMode.SCENE2D) {\n              Matrix4.clone(nodeMatrix, command.modelMatrix);\n              command.modelMatrix[13] -= CesiumMath.sign(command.modelMatrix[13]) * 2.0 * CesiumMath.PI * projection.ellipsoid.maximumRadius;\n              BoundingSphere.transform(primitiveCommand.boundingSphere, command.modelMatrix, command.boundingVolume);\n            }\n          }\n        }\n      }\n\n      var children = n.children;\n\n      if (defined(children)) {\n        var childrenLength = children.length;\n\n        for (var k = 0; k < childrenLength; ++k) {\n          var child = children[k]; // A node's transform needs to be updated if\n          // - It was targeted for animation this frame, or\n          // - Any of its ancestors were targeted for animation this frame\n          // PERFORMANCE_IDEA: if a child has multiple parents and only one of the parents\n          // is dirty, all the subtrees for each child instance will be dirty; we probably\n          // won't see this in the wild often.\n\n          child.dirtyNumber = Math.max(child.dirtyNumber, n.dirtyNumber);\n\n          if (child.dirtyNumber === maxDirtyNumber || justLoaded) {\n            // Don't check for modelTransformChanged since if only the model's model matrix changed,\n            // we do not need to rebuild the local transform-to-root, only the final\n            // [model's-model-matrix][transform-to-root] above.\n            getNodeMatrix(child, child.transformToRoot);\n            Matrix4.multiplyTransformation(transformToRoot, child.transformToRoot, child.transformToRoot);\n          }\n\n          nodeStack.push(child);\n        }\n      }\n    }\n  }\n\n  ++model._maxDirtyNumber;\n}\n\nvar scratchObjectSpace = new Matrix4();\n\nfunction applySkins(model) {\n  var skinnedNodes = model._runtime.skinnedNodes;\n  var length = skinnedNodes.length;\n\n  for (var i = 0; i < length; ++i) {\n    var node = skinnedNodes[i];\n    scratchObjectSpace = Matrix4.inverseTransformation(node.transformToRoot, scratchObjectSpace);\n    var computedJointMatrices = node.computedJointMatrices;\n    var joints = node.joints;\n    var bindShapeMatrix = node.bindShapeMatrix;\n    var inverseBindMatrices = node.inverseBindMatrices;\n    var inverseBindMatricesLength = inverseBindMatrices.length;\n\n    for (var m = 0; m < inverseBindMatricesLength; ++m) {\n      // [joint-matrix] = [node-to-root^-1][joint-to-root][inverse-bind][bind-shape]\n      if (!defined(computedJointMatrices[m])) {\n        computedJointMatrices[m] = new Matrix4();\n      }\n\n      computedJointMatrices[m] = Matrix4.multiplyTransformation(scratchObjectSpace, joints[m].transformToRoot, computedJointMatrices[m]);\n      computedJointMatrices[m] = Matrix4.multiplyTransformation(computedJointMatrices[m], inverseBindMatrices[m], computedJointMatrices[m]);\n\n      if (defined(bindShapeMatrix)) {\n        // NOTE: bindShapeMatrix is glTF 1.0 only, removed in glTF 2.0.\n        computedJointMatrices[m] = Matrix4.multiplyTransformation(computedJointMatrices[m], bindShapeMatrix, computedJointMatrices[m]);\n      }\n    }\n  }\n}\n\nfunction updatePerNodeShow(model) {\n  // Totally not worth it, but we could optimize this:\n  // http://help.agi.com/AGIComponents/html/BlogDeletionInBoundingVolumeHierarchies.htm\n  var rootNodes = model._runtime.rootNodes;\n  var length = rootNodes.length;\n  var nodeStack = scratchNodeStack;\n\n  for (var i = 0; i < length; ++i) {\n    var n = rootNodes[i];\n    n.computedShow = n.publicNode.show;\n    nodeStack.push(n);\n\n    while (nodeStack.length > 0) {\n      n = nodeStack.pop();\n      var show = n.computedShow;\n      var nodeCommands = n.commands;\n      var nodeCommandsLength = nodeCommands.length;\n\n      for (var j = 0; j < nodeCommandsLength; ++j) {\n        nodeCommands[j].show = show;\n      } // if commandsLength is zero, the node has a light or camera\n\n\n      var children = n.children;\n\n      if (defined(children)) {\n        var childrenLength = children.length;\n\n        for (var k = 0; k < childrenLength; ++k) {\n          var child = children[k]; // Parent needs to be shown for child to be shown.\n\n          child.computedShow = show && child.publicNode.show;\n          nodeStack.push(child);\n        }\n      }\n    }\n  }\n}\n\nfunction updatePickIds(model, context) {\n  var id = model.id;\n\n  if (model._id !== id) {\n    model._id = id;\n    var pickIds = model._pickIds;\n    var length = pickIds.length;\n\n    for (var i = 0; i < length; ++i) {\n      pickIds[i].object.id = id;\n    }\n  }\n}\n\nfunction updateWireframe(model) {\n  if (model._debugWireframe !== model.debugWireframe) {\n    model._debugWireframe = model.debugWireframe; // This assumes the original primitive was TRIANGLES and that the triangles\n    // are connected for the wireframe to look perfect.\n\n    var primitiveType = model.debugWireframe ? PrimitiveType.LINES : PrimitiveType.TRIANGLES;\n    var nodeCommands = model._nodeCommands;\n    var length = nodeCommands.length;\n\n    for (var i = 0; i < length; ++i) {\n      nodeCommands[i].command.primitiveType = primitiveType;\n    }\n  }\n}\n\nfunction updateShowBoundingVolume(model) {\n  if (model.debugShowBoundingVolume !== model._debugShowBoundingVolume) {\n    model._debugShowBoundingVolume = model.debugShowBoundingVolume;\n    var debugShowBoundingVolume = model.debugShowBoundingVolume;\n    var nodeCommands = model._nodeCommands;\n    var length = nodeCommands.length;\n\n    for (var i = 0; i < length; ++i) {\n      nodeCommands[i].command.debugShowBoundingVolume = debugShowBoundingVolume;\n    }\n  }\n}\n\nfunction updateShadows(model) {\n  if (model.shadows !== model._shadows) {\n    model._shadows = model.shadows;\n    var castShadows = ShadowMode.castShadows(model.shadows);\n    var receiveShadows = ShadowMode.receiveShadows(model.shadows);\n    var nodeCommands = model._nodeCommands;\n    var length = nodeCommands.length;\n\n    for (var i = 0; i < length; i++) {\n      var nodeCommand = nodeCommands[i];\n      nodeCommand.command.castShadows = castShadows;\n      nodeCommand.command.receiveShadows = receiveShadows;\n    }\n  }\n}\n\nfunction getTranslucentRenderState(model, renderState) {\n  var rs = clone(renderState, true);\n  rs.cull.enabled = false;\n  rs.depthTest.enabled = true;\n  rs.depthMask = false;\n  rs.blending = BlendingState.ALPHA_BLEND;\n\n  if (model.opaquePass === Pass.CESIUM_3D_TILE) {\n    rs.stencilTest = StencilConstants.setCesium3DTileBit();\n    rs.stencilMask = StencilConstants.CESIUM_3D_TILE_MASK;\n  }\n\n  return RenderState.fromCache(rs);\n}\n\nfunction deriveTranslucentCommand(model, command) {\n  var translucentCommand = DrawCommand.shallowClone(command);\n  translucentCommand.pass = Pass.TRANSLUCENT;\n  translucentCommand.renderState = getTranslucentRenderState(model, command.renderState);\n  return translucentCommand;\n}\n\nfunction updateColor(model, frameState, forceDerive) {\n  // Generate translucent commands when the blend color has an alpha in the range (0.0, 1.0) exclusive\n  var scene3DOnly = frameState.scene3DOnly;\n  var alpha = model.color.alpha;\n\n  if (alpha > 0.0 && alpha < 1.0) {\n    var nodeCommands = model._nodeCommands;\n    var length = nodeCommands.length;\n\n    if (length > 0 && (!defined(nodeCommands[0].translucentCommand) || forceDerive)) {\n      for (var i = 0; i < length; ++i) {\n        var nodeCommand = nodeCommands[i];\n        var command = nodeCommand.command;\n        nodeCommand.translucentCommand = deriveTranslucentCommand(model, command);\n\n        if (!scene3DOnly) {\n          var command2D = nodeCommand.command2D;\n          nodeCommand.translucentCommand2D = deriveTranslucentCommand(model, command2D);\n        }\n      }\n    }\n  }\n}\n\nfunction getDisableCullingRenderState(renderState) {\n  var rs = clone(renderState, true);\n  rs.cull.enabled = false;\n  return RenderState.fromCache(rs);\n}\n\nfunction deriveDisableCullingCommand(command) {\n  var disableCullingCommand = DrawCommand.shallowClone(command);\n  disableCullingCommand.renderState = getDisableCullingRenderState(command.renderState);\n  return disableCullingCommand;\n}\n\nfunction updateBackFaceCulling(model, frameState, forceDerive) {\n  var scene3DOnly = frameState.scene3DOnly;\n  var backFaceCulling = model.backFaceCulling;\n\n  if (!backFaceCulling) {\n    var nodeCommands = model._nodeCommands;\n    var length = nodeCommands.length;\n\n    if (length > 0 && (!defined(nodeCommands[0].disableCullingCommand) || forceDerive)) {\n      for (var i = 0; i < length; ++i) {\n        var nodeCommand = nodeCommands[i];\n        var command = nodeCommand.command;\n        nodeCommand.disableCullingCommand = deriveDisableCullingCommand(command);\n\n        if (!scene3DOnly) {\n          var command2D = nodeCommand.command2D;\n          nodeCommand.disableCullingCommand2D = deriveDisableCullingCommand(command2D);\n        }\n      }\n    }\n  }\n}\n\nfunction getProgramId(model, program) {\n  var programs = model._rendererResources.programs;\n\n  for (var id in programs) {\n    if (programs.hasOwnProperty(id)) {\n      if (programs[id] === program) {\n        return id;\n      }\n    }\n  }\n}\n\nfunction createSilhouetteProgram(model, program, frameState) {\n  var vs = program.vertexShaderSource.sources[0];\n  var attributeLocations = program._attributeLocations;\n  var normalAttributeName = model._normalAttributeName; // Modified from http://forum.unity3d.com/threads/toon-outline-but-with-diffuse-surface.24668/\n\n  vs = ShaderSource.replaceMain(vs, \"gltf_silhouette_main\");\n  vs += \"uniform float gltf_silhouetteSize; \\n\" + \"void main() \\n\" + \"{ \\n\" + \"    gltf_silhouette_main(); \\n\" + \"    vec3 n = normalize(czm_normal3D * \" + normalAttributeName + \"); \\n\" + \"    n.x *= czm_projection[0][0]; \\n\" + \"    n.y *= czm_projection[1][1]; \\n\" + \"    vec4 clip = gl_Position; \\n\" + \"    clip.xy += n.xy * clip.w * gltf_silhouetteSize * czm_pixelRatio / czm_viewport.z; \\n\" + \"    gl_Position = clip; \\n\" + \"}\";\n  var fs = \"uniform vec4 gltf_silhouetteColor; \\n\" + \"void main() \\n\" + \"{ \\n\" + \"    gl_FragColor = czm_gammaCorrect(gltf_silhouetteColor); \\n\" + \"}\";\n  return ShaderProgram.fromCache({\n    context: frameState.context,\n    vertexShaderSource: vs,\n    fragmentShaderSource: fs,\n    attributeLocations: attributeLocations\n  });\n}\n\nfunction hasSilhouette(model, frameState) {\n  return silhouetteSupported(frameState.context) && model.silhouetteSize > 0.0 && model.silhouetteColor.alpha > 0.0 && defined(model._normalAttributeName);\n}\n\nfunction hasTranslucentCommands(model) {\n  var nodeCommands = model._nodeCommands;\n  var length = nodeCommands.length;\n\n  for (var i = 0; i < length; ++i) {\n    var nodeCommand = nodeCommands[i];\n    var command = nodeCommand.command;\n\n    if (command.pass === Pass.TRANSLUCENT) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isTranslucent(model) {\n  return model.color.alpha > 0.0 && model.color.alpha < 1.0;\n}\n\nfunction isInvisible(model) {\n  return model.color.alpha === 0.0;\n}\n\nfunction alphaDirty(currAlpha, prevAlpha) {\n  // Returns whether the alpha state has changed between invisible, translucent, or opaque\n  return Math.floor(currAlpha) !== Math.floor(prevAlpha) || Math.ceil(currAlpha) !== Math.ceil(prevAlpha);\n}\n\nvar silhouettesLength = 0;\n\nfunction createSilhouetteCommands(model, frameState) {\n  // Wrap around after exceeding the 8-bit stencil limit.\n  // The reference is unique to each model until this point.\n  var stencilReference = ++silhouettesLength % 255; // If the model is translucent the silhouette needs to be in the translucent pass.\n  // Otherwise the silhouette would be rendered before the model.\n\n  var silhouetteTranslucent = hasTranslucentCommands(model) || isTranslucent(model) || model.silhouetteColor.alpha < 1.0;\n  var silhouettePrograms = model._rendererResources.silhouettePrograms;\n  var scene3DOnly = frameState.scene3DOnly;\n  var nodeCommands = model._nodeCommands;\n  var length = nodeCommands.length;\n\n  for (var i = 0; i < length; ++i) {\n    var nodeCommand = nodeCommands[i];\n    var command = nodeCommand.command; // Create model command\n\n    var modelCommand = isTranslucent(model) ? nodeCommand.translucentCommand : command;\n    var silhouetteModelCommand = DrawCommand.shallowClone(modelCommand);\n    var renderState = clone(modelCommand.renderState); // Write the reference value into the stencil buffer.\n\n    renderState.stencilTest = {\n      enabled: true,\n      frontFunction: WebGLConstants.ALWAYS,\n      backFunction: WebGLConstants.ALWAYS,\n      reference: stencilReference,\n      mask: ~0,\n      frontOperation: {\n        fail: WebGLConstants.KEEP,\n        zFail: WebGLConstants.KEEP,\n        zPass: WebGLConstants.REPLACE\n      },\n      backOperation: {\n        fail: WebGLConstants.KEEP,\n        zFail: WebGLConstants.KEEP,\n        zPass: WebGLConstants.REPLACE\n      }\n    };\n\n    if (isInvisible(model)) {\n      // When the model is invisible disable color and depth writes but still write into the stencil buffer\n      renderState.colorMask = {\n        red: false,\n        green: false,\n        blue: false,\n        alpha: false\n      };\n      renderState.depthMask = false;\n    }\n\n    renderState = RenderState.fromCache(renderState);\n    silhouetteModelCommand.renderState = renderState;\n    nodeCommand.silhouetteModelCommand = silhouetteModelCommand; // Create color command\n\n    var silhouetteColorCommand = DrawCommand.shallowClone(command);\n    renderState = clone(command.renderState, true);\n    renderState.depthTest.enabled = true;\n    renderState.cull.enabled = false;\n\n    if (silhouetteTranslucent) {\n      silhouetteColorCommand.pass = Pass.TRANSLUCENT;\n      renderState.depthMask = false;\n      renderState.blending = BlendingState.ALPHA_BLEND;\n    } // Only render silhouette if the value in the stencil buffer equals the reference\n\n\n    renderState.stencilTest = {\n      enabled: true,\n      frontFunction: WebGLConstants.NOTEQUAL,\n      backFunction: WebGLConstants.NOTEQUAL,\n      reference: stencilReference,\n      mask: ~0,\n      frontOperation: {\n        fail: WebGLConstants.KEEP,\n        zFail: WebGLConstants.KEEP,\n        zPass: WebGLConstants.KEEP\n      },\n      backOperation: {\n        fail: WebGLConstants.KEEP,\n        zFail: WebGLConstants.KEEP,\n        zPass: WebGLConstants.KEEP\n      }\n    };\n    renderState = RenderState.fromCache(renderState); // If the silhouette program has already been cached use it\n\n    var program = command.shaderProgram;\n    var id = getProgramId(model, program);\n    var silhouetteProgram = silhouettePrograms[id];\n\n    if (!defined(silhouetteProgram)) {\n      silhouetteProgram = createSilhouetteProgram(model, program, frameState);\n      silhouettePrograms[id] = silhouetteProgram;\n    }\n\n    var silhouetteUniformMap = combine(command.uniformMap, {\n      gltf_silhouetteColor: createSilhouetteColorFunction(model),\n      gltf_silhouetteSize: createSilhouetteSizeFunction(model)\n    });\n    silhouetteColorCommand.renderState = renderState;\n    silhouetteColorCommand.shaderProgram = silhouetteProgram;\n    silhouetteColorCommand.uniformMap = silhouetteUniformMap;\n    silhouetteColorCommand.castShadows = false;\n    silhouetteColorCommand.receiveShadows = false;\n    nodeCommand.silhouetteColorCommand = silhouetteColorCommand;\n\n    if (!scene3DOnly) {\n      var command2D = nodeCommand.command2D;\n      var silhouetteModelCommand2D = DrawCommand.shallowClone(silhouetteModelCommand);\n      silhouetteModelCommand2D.boundingVolume = command2D.boundingVolume;\n      silhouetteModelCommand2D.modelMatrix = command2D.modelMatrix;\n      nodeCommand.silhouetteModelCommand2D = silhouetteModelCommand2D;\n      var silhouetteColorCommand2D = DrawCommand.shallowClone(silhouetteColorCommand);\n      silhouetteModelCommand2D.boundingVolume = command2D.boundingVolume;\n      silhouetteModelCommand2D.modelMatrix = command2D.modelMatrix;\n      nodeCommand.silhouetteColorCommand2D = silhouetteColorCommand2D;\n    }\n  }\n}\n\nfunction modifyShaderForClippingPlanes(shader, clippingPlaneCollection, context) {\n  shader = ShaderSource.replaceMain(shader, \"gltf_clip_main\");\n  shader += Model._getClippingFunction(clippingPlaneCollection, context) + \"\\n\";\n  shader += \"uniform highp sampler2D gltf_clippingPlanes; \\n\" + \"uniform mat4 gltf_clippingPlanesMatrix; \\n\" + \"uniform vec4 gltf_clippingPlanesEdgeStyle; \\n\" + \"void main() \\n\" + \"{ \\n\" + \"    gltf_clip_main(); \\n\" + getClipAndStyleCode(\"gltf_clippingPlanes\", \"gltf_clippingPlanesMatrix\", \"gltf_clippingPlanesEdgeStyle\") + \"} \\n\";\n  return shader;\n}\n\nfunction updateSilhouette(model, frameState, force) {\n  // Generate silhouette commands when the silhouette size is greater than 0.0 and the alpha is greater than 0.0\n  // There are two silhouette commands:\n  //     1. silhouetteModelCommand : render model normally while enabling stencil mask\n  //     2. silhouetteColorCommand : render enlarged model with a solid color while enabling stencil tests\n  if (!hasSilhouette(model, frameState)) {\n    return;\n  }\n\n  var nodeCommands = model._nodeCommands;\n  var dirty = nodeCommands.length > 0 && (alphaDirty(model.color.alpha, model._colorPreviousAlpha) || alphaDirty(model.silhouetteColor.alpha, model._silhouetteColorPreviousAlpha) || !defined(nodeCommands[0].silhouetteModelCommand));\n  model._colorPreviousAlpha = model.color.alpha;\n  model._silhouetteColorPreviousAlpha = model.silhouetteColor.alpha;\n\n  if (dirty || force) {\n    createSilhouetteCommands(model, frameState);\n  }\n}\n\nfunction updateClippingPlanes(model, frameState) {\n  var clippingPlanes = model._clippingPlanes;\n\n  if (defined(clippingPlanes) && clippingPlanes.owner === model) {\n    if (clippingPlanes.enabled) {\n      clippingPlanes.update(frameState);\n    }\n  }\n}\n\nvar scratchBoundingSphere = new BoundingSphere();\n\nfunction scaleInPixels(positionWC, radius, frameState) {\n  scratchBoundingSphere.center = positionWC;\n  scratchBoundingSphere.radius = radius;\n  return frameState.camera.getPixelSize(scratchBoundingSphere, frameState.context.drawingBufferWidth, frameState.context.drawingBufferHeight);\n}\n\nvar scratchPosition = new Cartesian3();\nvar scratchCartographic = new Cartographic();\n\nfunction getScale(model, frameState) {\n  var scale = model.scale;\n\n  if (model.minimumPixelSize !== 0.0) {\n    // Compute size of bounding sphere in pixels\n    var context = frameState.context;\n    var maxPixelSize = Math.max(context.drawingBufferWidth, context.drawingBufferHeight);\n    var m = defined(model._clampedModelMatrix) ? model._clampedModelMatrix : model.modelMatrix;\n    scratchPosition.x = m[12];\n    scratchPosition.y = m[13];\n    scratchPosition.z = m[14];\n\n    if (defined(model._rtcCenter)) {\n      Cartesian3.add(model._rtcCenter, scratchPosition, scratchPosition);\n    }\n\n    if (model._mode !== SceneMode.SCENE3D) {\n      var projection = frameState.mapProjection;\n      var cartographic = projection.ellipsoid.cartesianToCartographic(scratchPosition, scratchCartographic);\n      projection.project(cartographic, scratchPosition);\n      Cartesian3.fromElements(scratchPosition.z, scratchPosition.x, scratchPosition.y, scratchPosition);\n    }\n\n    var radius = model.boundingSphere.radius;\n    var metersPerPixel = scaleInPixels(scratchPosition, radius, frameState); // metersPerPixel is always > 0.0\n\n    var pixelsPerMeter = 1.0 / metersPerPixel;\n    var diameterInPixels = Math.min(pixelsPerMeter * (2.0 * radius), maxPixelSize); // Maintain model's minimum pixel size\n\n    if (diameterInPixels < model.minimumPixelSize) {\n      scale = model.minimumPixelSize * metersPerPixel / (2.0 * model._initialRadius);\n    }\n  }\n\n  return defined(model.maximumScale) ? Math.min(model.maximumScale, scale) : scale;\n}\n\nfunction releaseCachedGltf(model) {\n  if (defined(model._cacheKey) && defined(model._cachedGltf) && --model._cachedGltf.count === 0) {\n    delete gltfCache[model._cacheKey];\n  }\n\n  model._cachedGltf = undefined;\n} ///////////////////////////////////////////////////////////////////////////\n\n\nfunction CachedRendererResources(context, cacheKey) {\n  this.buffers = undefined;\n  this.vertexArrays = undefined;\n  this.programs = undefined;\n  this.sourceShaders = undefined;\n  this.silhouettePrograms = undefined;\n  this.textures = undefined;\n  this.samplers = undefined;\n  this.renderStates = undefined;\n  this.ready = false;\n  this.context = context;\n  this.cacheKey = cacheKey;\n  this.count = 0;\n}\n\nfunction destroy(property) {\n  for (var name in property) {\n    if (property.hasOwnProperty(name)) {\n      property[name].destroy();\n    }\n  }\n}\n\nfunction destroyCachedRendererResources(resources) {\n  destroy(resources.buffers);\n  destroy(resources.vertexArrays);\n  destroy(resources.programs);\n  destroy(resources.silhouettePrograms);\n  destroy(resources.textures);\n}\n\nCachedRendererResources.prototype.release = function () {\n  if (--this.count === 0) {\n    if (defined(this.cacheKey)) {\n      // Remove if this was cached\n      delete this.context.cache.modelRendererResourceCache[this.cacheKey];\n    }\n\n    destroyCachedRendererResources(this);\n    return destroyObject(this);\n  }\n\n  return undefined;\n}; ///////////////////////////////////////////////////////////////////////////\n\n\nfunction getUpdateHeightCallback(model, ellipsoid, cartoPosition) {\n  return function (clampedPosition) {\n    if (model.heightReference === HeightReference.RELATIVE_TO_GROUND) {\n      var clampedCart = ellipsoid.cartesianToCartographic(clampedPosition, scratchCartographic);\n      clampedCart.height += cartoPosition.height;\n      ellipsoid.cartographicToCartesian(clampedCart, clampedPosition);\n    }\n\n    var clampedModelMatrix = model._clampedModelMatrix; // Modify clamped model matrix to use new height\n\n    Matrix4.clone(model.modelMatrix, clampedModelMatrix);\n    clampedModelMatrix[12] = clampedPosition.x;\n    clampedModelMatrix[13] = clampedPosition.y;\n    clampedModelMatrix[14] = clampedPosition.z;\n    model._heightChanged = true;\n  };\n}\n\nfunction updateClamping(model) {\n  if (defined(model._removeUpdateHeightCallback)) {\n    model._removeUpdateHeightCallback();\n\n    model._removeUpdateHeightCallback = undefined;\n  }\n\n  var scene = model._scene;\n\n  if (!defined(scene) || !defined(scene.globe) || model.heightReference === HeightReference.NONE) {\n    //>>includeStart('debug', pragmas.debug);\n    if (model.heightReference !== HeightReference.NONE) {\n      throw new DeveloperError(\"Height reference is not supported without a scene and globe.\");\n    } //>>includeEnd('debug');\n\n\n    model._clampedModelMatrix = undefined;\n    return;\n  }\n\n  var globe = scene.globe;\n  var ellipsoid = globe.ellipsoid; // Compute cartographic position so we don't recompute every update\n\n  var modelMatrix = model.modelMatrix;\n  scratchPosition.x = modelMatrix[12];\n  scratchPosition.y = modelMatrix[13];\n  scratchPosition.z = modelMatrix[14];\n  var cartoPosition = ellipsoid.cartesianToCartographic(scratchPosition);\n\n  if (!defined(model._clampedModelMatrix)) {\n    model._clampedModelMatrix = Matrix4.clone(modelMatrix, new Matrix4());\n  } // Install callback to handle updating of terrain tiles\n\n\n  var surface = globe._surface;\n  model._removeUpdateHeightCallback = surface.updateHeight(cartoPosition, getUpdateHeightCallback(model, ellipsoid, cartoPosition)); // Set the correct height now\n\n  var height = globe.getHeight(cartoPosition);\n\n  if (defined(height)) {\n    // Get callback with cartoPosition being the non-clamped position\n    var cb = getUpdateHeightCallback(model, ellipsoid, cartoPosition); // Compute the clamped cartesian and call updateHeight callback\n\n    Cartographic.clone(cartoPosition, scratchCartographic);\n    scratchCartographic.height = height;\n    ellipsoid.cartographicToCartesian(scratchCartographic, scratchPosition);\n    cb(scratchPosition);\n  }\n}\n\nvar scratchDisplayConditionCartesian = new Cartesian3();\nvar scratchDistanceDisplayConditionCartographic = new Cartographic();\n\nfunction distanceDisplayConditionVisible(model, frameState) {\n  var distance2;\n  var ddc = model.distanceDisplayCondition;\n  var nearSquared = ddc.near * ddc.near;\n  var farSquared = ddc.far * ddc.far;\n\n  if (frameState.mode === SceneMode.SCENE2D) {\n    var frustum2DWidth = frameState.camera.frustum.right - frameState.camera.frustum.left;\n    distance2 = frustum2DWidth * 0.5;\n    distance2 = distance2 * distance2;\n  } else {\n    // Distance to center of primitive's reference frame\n    var position = Matrix4.getTranslation(model.modelMatrix, scratchDisplayConditionCartesian);\n\n    if (frameState.mode === SceneMode.COLUMBUS_VIEW) {\n      var projection = frameState.mapProjection;\n      var ellipsoid = projection.ellipsoid;\n      var cartographic = ellipsoid.cartesianToCartographic(position, scratchDistanceDisplayConditionCartographic);\n      position = projection.project(cartographic, position);\n      Cartesian3.fromElements(position.z, position.x, position.y, position);\n    }\n\n    distance2 = Cartesian3.distanceSquared(position, frameState.camera.positionWC);\n  }\n\n  return distance2 >= nearSquared && distance2 <= farSquared;\n}\n\nvar scratchClippingPlanesMatrix = new Matrix4();\nvar scratchIBLReferenceFrameMatrix4 = new Matrix4();\nvar scratchIBLReferenceFrameMatrix3 = new Matrix3();\n/**\n * Called when {@link Viewer} or {@link CesiumWidget} render the scene to\n * get the draw commands needed to render this primitive.\n * <p>\n * Do not call this function directly.  This is documented just to\n * list the exceptions that may be propagated when the scene is rendered:\n * </p>\n *\n * @exception {RuntimeError} Failed to load external reference.\n */\n\nModel.prototype.update = function (frameState) {\n  if (frameState.mode === SceneMode.MORPHING) {\n    return;\n  }\n\n  if (!FeatureDetection.supportsWebP.initialized) {\n    FeatureDetection.supportsWebP.initialize();\n    return;\n  }\n\n  var context = frameState.context;\n  this._defaultTexture = context.defaultTexture;\n  var supportsWebP = FeatureDetection.supportsWebP();\n\n  if (this._state === ModelState.NEEDS_LOAD && defined(this.gltf)) {\n    // Use renderer resources from cache instead of loading/creating them?\n    var cachedRendererResources;\n    var cacheKey = this.cacheKey;\n\n    if (defined(cacheKey)) {\n      // cache key given? this model will pull from or contribute to context level cache\n      context.cache.modelRendererResourceCache = defaultValue(context.cache.modelRendererResourceCache, {});\n      var modelCaches = context.cache.modelRendererResourceCache;\n      cachedRendererResources = modelCaches[this.cacheKey];\n\n      if (defined(cachedRendererResources)) {\n        if (!cachedRendererResources.ready) {\n          // Cached resources for the model are not loaded yet.  We'll\n          // try again every frame until they are.\n          return;\n        }\n\n        ++cachedRendererResources.count;\n        this._loadRendererResourcesFromCache = true;\n      } else {\n        cachedRendererResources = new CachedRendererResources(context, cacheKey);\n        cachedRendererResources.count = 1;\n        modelCaches[this.cacheKey] = cachedRendererResources;\n      }\n\n      this._cachedRendererResources = cachedRendererResources;\n    } else {\n      // cache key not given? this model doesn't care about context level cache at all. Cache is here to simplify freeing on destroy.\n      cachedRendererResources = new CachedRendererResources(context);\n      cachedRendererResources.count = 1;\n      this._cachedRendererResources = cachedRendererResources;\n    }\n\n    this._state = ModelState.LOADING;\n\n    if (this._state !== ModelState.FAILED) {\n      var extensions = this.gltf.extensions;\n\n      if (defined(extensions) && defined(extensions.CESIUM_RTC)) {\n        var center = Cartesian3.fromArray(extensions.CESIUM_RTC.center);\n\n        if (!Cartesian3.equals(center, Cartesian3.ZERO)) {\n          this._rtcCenter3D = center;\n          var projection = frameState.mapProjection;\n          var ellipsoid = projection.ellipsoid;\n          var cartographic = ellipsoid.cartesianToCartographic(this._rtcCenter3D);\n          var projectedCart = projection.project(cartographic);\n          Cartesian3.fromElements(projectedCart.z, projectedCart.x, projectedCart.y, projectedCart);\n          this._rtcCenter2D = projectedCart;\n          this._rtcCenterEye = new Cartesian3();\n          this._rtcCenter = this._rtcCenter3D;\n        }\n      }\n\n      addPipelineExtras(this.gltf);\n      this._loadResources = new ModelLoadResources();\n\n      if (!this._loadRendererResourcesFromCache) {\n        // Buffers are required to updateVersion\n        ModelUtility.parseBuffers(this, bufferLoad);\n      }\n    }\n  }\n\n  var loadResources = this._loadResources;\n  var incrementallyLoadTextures = this._incrementallyLoadTextures;\n  var justLoaded = false;\n\n  if (this._state === ModelState.LOADING) {\n    // Transition from LOADING -> LOADED once resources are downloaded and created.\n    // Textures may continue to stream in while in the LOADED state.\n    if (loadResources.pendingBufferLoads === 0) {\n      if (!loadResources.initialized) {\n        frameState.brdfLutGenerator.update(frameState);\n        ModelUtility.checkSupportedExtensions(this.extensionsRequired, supportsWebP);\n        ModelUtility.updateForwardAxis(this); // glTF pipeline updates, not needed if loading from cache\n\n        if (!defined(this.gltf.extras.sourceVersion)) {\n          var gltf = this.gltf; // Add the original version so it remains cached\n\n          gltf.extras.sourceVersion = ModelUtility.getAssetVersion(gltf);\n          gltf.extras.sourceKHRTechniquesWebGL = defined(ModelUtility.getUsedExtensions(gltf).KHR_techniques_webgl);\n          this._sourceVersion = gltf.extras.sourceVersion;\n          this._sourceKHRTechniquesWebGL = gltf.extras.sourceKHRTechniquesWebGL;\n          updateVersion(gltf);\n          addDefaults(gltf);\n          var options = {\n            addBatchIdToGeneratedShaders: this._addBatchIdToGeneratedShaders\n          };\n          processModelMaterialsCommon(gltf, options);\n          processPbrMaterials(gltf, options);\n        }\n\n        this._sourceVersion = this.gltf.extras.sourceVersion;\n        this._sourceKHRTechniquesWebGL = this.gltf.extras.sourceKHRTechniquesWebGL; // Skip dequantizing in the shader if not encoded\n\n        this._dequantizeInShader = this._dequantizeInShader && DracoLoader.hasExtension(this); // We do this after to make sure that the ids don't change\n\n        addBuffersToLoadResources(this);\n        parseArticulations(this);\n        parseTechniques(this);\n\n        if (!this._loadRendererResourcesFromCache) {\n          parseBufferViews(this);\n          parseShaders(this);\n          parsePrograms(this);\n          parseTextures(this, context, supportsWebP);\n        }\n\n        parseMaterials(this);\n        parseMeshes(this);\n        parseNodes(this); // Start draco decoding\n\n        DracoLoader.parse(this, context);\n        loadResources.initialized = true;\n      }\n\n      if (!loadResources.finishedDecoding()) {\n        DracoLoader.decodeModel(this, context).otherwise(ModelUtility.getFailedLoadFunction(this, \"model\", this.basePath));\n      }\n\n      if (loadResources.finishedDecoding() && !loadResources.resourcesParsed) {\n        this._boundingSphere = ModelUtility.computeBoundingSphere(this);\n        this._initialRadius = this._boundingSphere.radius;\n        DracoLoader.cacheDataForModel(this);\n        loadResources.resourcesParsed = true;\n      }\n\n      if (loadResources.resourcesParsed && loadResources.pendingShaderLoads === 0) {\n        if (this.showOutline) {\n          ModelOutlineLoader.outlinePrimitives(this);\n        }\n\n        createResources(this, frameState);\n      }\n    }\n\n    if (loadResources.finished() || incrementallyLoadTextures && loadResources.finishedEverythingButTextureCreation()) {\n      this._state = ModelState.LOADED;\n      justLoaded = true;\n    }\n  } // Incrementally stream textures.\n\n\n  if (defined(loadResources) && this._state === ModelState.LOADED) {\n    if (incrementallyLoadTextures && !justLoaded) {\n      createResources(this, frameState);\n    }\n\n    if (loadResources.finished()) {\n      this._loadResources = undefined; // Clear CPU memory since WebGL resources were created.\n\n      var resources = this._rendererResources;\n      var cachedResources = this._cachedRendererResources;\n      cachedResources.buffers = resources.buffers;\n      cachedResources.vertexArrays = resources.vertexArrays;\n      cachedResources.programs = resources.programs;\n      cachedResources.sourceShaders = resources.sourceShaders;\n      cachedResources.silhouettePrograms = resources.silhouettePrograms;\n      cachedResources.textures = resources.textures;\n      cachedResources.samplers = resources.samplers;\n      cachedResources.renderStates = resources.renderStates;\n      cachedResources.ready = true; // The normal attribute name is required for silhouettes, so get it before the gltf JSON is released\n\n      this._normalAttributeName = ModelUtility.getAttributeOrUniformBySemantic(this.gltf, \"NORMAL\"); // Vertex arrays are unique to this model, do not store in cache.\n\n      if (defined(this._precreatedAttributes)) {\n        cachedResources.vertexArrays = {};\n      }\n\n      if (this.releaseGltfJson) {\n        releaseCachedGltf(this);\n      }\n    }\n  }\n\n  var iblSupported = OctahedralProjectedCubeMap.isSupported(context);\n\n  if (this._shouldUpdateSpecularMapAtlas && iblSupported) {\n    this._shouldUpdateSpecularMapAtlas = false;\n    this._specularEnvironmentMapAtlas = this._specularEnvironmentMapAtlas && this._specularEnvironmentMapAtlas.destroy();\n    this._specularEnvironmentMapAtlas = undefined;\n\n    if (defined(this._specularEnvironmentMaps)) {\n      this._specularEnvironmentMapAtlas = new OctahedralProjectedCubeMap(this._specularEnvironmentMaps);\n      var that = this;\n\n      this._specularEnvironmentMapAtlas.readyPromise.then(function () {\n        that._shouldRegenerateShaders = true;\n      }).otherwise(function (error) {\n        console.error(\"Error loading specularEnvironmentMaps: \" + error);\n      });\n    } // Regenerate shaders to not use an environment map. Will be set to true again if there was a new environment map and it is ready.\n\n\n    this._shouldRegenerateShaders = true;\n  }\n\n  if (defined(this._specularEnvironmentMapAtlas)) {\n    this._specularEnvironmentMapAtlas.update(frameState);\n  }\n\n  var recompileWithDefaultAtlas = !defined(this._specularEnvironmentMapAtlas) && defined(frameState.specularEnvironmentMaps) && !this._useDefaultSpecularMaps;\n  var recompileWithoutDefaultAtlas = !defined(frameState.specularEnvironmentMaps) && this._useDefaultSpecularMaps;\n  var recompileWithDefaultSHCoeffs = !defined(this._sphericalHarmonicCoefficients) && defined(frameState.sphericalHarmonicCoefficients) && !this._useDefaultSphericalHarmonics;\n  var recompileWithoutDefaultSHCoeffs = !defined(frameState.sphericalHarmonicCoefficients) && this._useDefaultSphericalHarmonics;\n  this._shouldRegenerateShaders = this._shouldRegenerateShaders || recompileWithDefaultAtlas || recompileWithoutDefaultAtlas || recompileWithDefaultSHCoeffs || recompileWithoutDefaultSHCoeffs;\n  this._useDefaultSpecularMaps = !defined(this._specularEnvironmentMapAtlas) && defined(frameState.specularEnvironmentMaps);\n  this._useDefaultSphericalHarmonics = !defined(this._sphericalHarmonicCoefficients) && defined(frameState.sphericalHarmonicCoefficients);\n  var silhouette = hasSilhouette(this, frameState);\n  var translucent = isTranslucent(this);\n  var invisible = isInvisible(this);\n  var backFaceCulling = this.backFaceCulling;\n  var displayConditionPassed = defined(this.distanceDisplayCondition) ? distanceDisplayConditionVisible(this, frameState) : true;\n  var show = this.show && displayConditionPassed && this.scale !== 0.0 && (!invisible || silhouette);\n\n  if (show && this._state === ModelState.LOADED || justLoaded) {\n    var animated = this.activeAnimations.update(frameState) || this._cesiumAnimationsDirty;\n\n    this._cesiumAnimationsDirty = false;\n    this._dirty = false;\n    var modelMatrix = this.modelMatrix;\n    var modeChanged = frameState.mode !== this._mode;\n    this._mode = frameState.mode; // Model's model matrix needs to be updated\n\n    var modelTransformChanged = !Matrix4.equals(this._modelMatrix, modelMatrix) || this._scale !== this.scale || this._minimumPixelSize !== this.minimumPixelSize || this.minimumPixelSize !== 0.0 || // Minimum pixel size changed or is enabled\n    this._maximumScale !== this.maximumScale || this._heightReference !== this.heightReference || this._heightChanged || modeChanged;\n\n    if (modelTransformChanged || justLoaded) {\n      Matrix4.clone(modelMatrix, this._modelMatrix);\n      updateClamping(this);\n\n      if (defined(this._clampedModelMatrix)) {\n        modelMatrix = this._clampedModelMatrix;\n      }\n\n      this._scale = this.scale;\n      this._minimumPixelSize = this.minimumPixelSize;\n      this._maximumScale = this.maximumScale;\n      this._heightReference = this.heightReference;\n      this._heightChanged = false;\n      var scale = getScale(this, frameState);\n      var computedModelMatrix = this._computedModelMatrix;\n      Matrix4.multiplyByUniformScale(modelMatrix, scale, computedModelMatrix);\n\n      if (this._upAxis === Axis.Y) {\n        Matrix4.multiplyTransformation(computedModelMatrix, Axis.Y_UP_TO_Z_UP, computedModelMatrix);\n      } else if (this._upAxis === Axis.X) {\n        Matrix4.multiplyTransformation(computedModelMatrix, Axis.X_UP_TO_Z_UP, computedModelMatrix);\n      }\n\n      if (this.forwardAxis === Axis.Z) {\n        // glTF 2.0 has a Z-forward convention that must be adapted here to X-forward.\n        Matrix4.multiplyTransformation(computedModelMatrix, Axis.Z_UP_TO_X_UP, computedModelMatrix);\n      }\n    } // Update modelMatrix throughout the graph as needed\n\n\n    if (animated || modelTransformChanged || justLoaded) {\n      updateNodeHierarchyModelMatrix(this, modelTransformChanged, justLoaded, frameState.mapProjection);\n      this._dirty = true;\n\n      if (animated || justLoaded) {\n        // Apply skins if animation changed any node transforms\n        applySkins(this);\n      }\n    }\n\n    if (this._perNodeShowDirty) {\n      this._perNodeShowDirty = false;\n      updatePerNodeShow(this);\n    }\n\n    updatePickIds(this, context);\n    updateWireframe(this);\n    updateShowBoundingVolume(this);\n    updateShadows(this);\n    updateClippingPlanes(this, frameState); // Regenerate shaders if ClippingPlaneCollection state changed or it was removed\n\n    var clippingPlanes = this._clippingPlanes;\n    var currentClippingPlanesState = 0; // If defined, use the reference matrix to transform miscellaneous properties like\n    // clipping planes and IBL instead of the modelMatrix. This is so that when\n    // models are part of a tileset these properties get transformed relative to\n    // a common reference (such as the root).\n\n    var referenceMatrix = defaultValue(this.referenceMatrix, modelMatrix);\n\n    if (isClippingEnabled(this)) {\n      var clippingPlanesMatrix = scratchClippingPlanesMatrix;\n      clippingPlanesMatrix = Matrix4.multiply(context.uniformState.view3D, referenceMatrix, clippingPlanesMatrix);\n      clippingPlanesMatrix = Matrix4.multiply(clippingPlanesMatrix, clippingPlanes.modelMatrix, clippingPlanesMatrix);\n      this._clippingPlanesMatrix = Matrix4.inverseTranspose(clippingPlanesMatrix, this._clippingPlanesMatrix);\n      currentClippingPlanesState = clippingPlanes.clippingPlanesState;\n    }\n\n    var usesSH = defined(this._sphericalHarmonicCoefficients) || this._useDefaultSphericalHarmonics;\n\n    var usesSM = defined(this._specularEnvironmentMapAtlas) && this._specularEnvironmentMapAtlas.ready || this._useDefaultSpecularMaps;\n\n    if (usesSH || usesSM) {\n      var iblReferenceFrameMatrix3 = scratchIBLReferenceFrameMatrix3;\n      var iblReferenceFrameMatrix4 = scratchIBLReferenceFrameMatrix4;\n      iblReferenceFrameMatrix4 = Matrix4.multiply(context.uniformState.view3D, referenceMatrix, iblReferenceFrameMatrix4);\n      iblReferenceFrameMatrix3 = Matrix4.getMatrix3(iblReferenceFrameMatrix4, iblReferenceFrameMatrix3);\n      iblReferenceFrameMatrix3 = Matrix3.getRotation(iblReferenceFrameMatrix3, iblReferenceFrameMatrix3);\n      this._iblReferenceFrameMatrix = Matrix3.transpose(iblReferenceFrameMatrix3, this._iblReferenceFrameMatrix);\n    }\n\n    var shouldRegenerateShaders = this._shouldRegenerateShaders;\n    shouldRegenerateShaders = shouldRegenerateShaders || this._clippingPlanesState !== currentClippingPlanesState;\n    this._clippingPlanesState = currentClippingPlanesState; // Regenerate shaders if color shading changed from last update\n\n    var currentlyColorShadingEnabled = isColorShadingEnabled(this);\n\n    if (currentlyColorShadingEnabled !== this._colorShadingEnabled) {\n      this._colorShadingEnabled = currentlyColorShadingEnabled;\n      shouldRegenerateShaders = true;\n    }\n\n    if (shouldRegenerateShaders) {\n      regenerateShaders(this, frameState);\n    } else {\n      updateColor(this, frameState, false);\n      updateBackFaceCulling(this, frameState, false);\n      updateSilhouette(this, frameState, false);\n    }\n  }\n\n  if (justLoaded) {\n    // Called after modelMatrix update.\n    var model = this;\n    frameState.afterRender.push(function () {\n      model._ready = true;\n\n      model._readyPromise.resolve(model);\n    });\n    return;\n  } // We don't check show at the top of the function since we\n  // want to be able to progressively load models when they are not shown,\n  // and then have them visible immediately when show is set to true.\n\n\n  if (show && !this._ignoreCommands) {\n    // PERFORMANCE_IDEA: This is terrible\n    var commandList = frameState.commandList;\n    var passes = frameState.passes;\n    var nodeCommands = this._nodeCommands;\n    var length = nodeCommands.length;\n    var i;\n    var nc;\n    var idl2D = frameState.mapProjection.ellipsoid.maximumRadius * CesiumMath.PI;\n    var boundingVolume;\n\n    if (passes.render || passes.pick && this.allowPicking) {\n      for (i = 0; i < length; ++i) {\n        nc = nodeCommands[i];\n\n        if (nc.show) {\n          var command = nc.command;\n\n          if (silhouette) {\n            command = nc.silhouetteModelCommand;\n          } else if (translucent) {\n            command = nc.translucentCommand;\n          } else if (!backFaceCulling) {\n            command = nc.disableCullingCommand;\n          }\n\n          commandList.push(command);\n          boundingVolume = nc.command.boundingVolume;\n\n          if (frameState.mode === SceneMode.SCENE2D && (boundingVolume.center.y + boundingVolume.radius > idl2D || boundingVolume.center.y - boundingVolume.radius < idl2D)) {\n            var command2D = nc.command2D;\n\n            if (silhouette) {\n              command2D = nc.silhouetteModelCommand2D;\n            } else if (translucent) {\n              command2D = nc.translucentCommand2D;\n            } else if (!backFaceCulling) {\n              command2D = nc.disableCullingCommand2D;\n            }\n\n            commandList.push(command2D);\n          }\n        }\n      }\n\n      if (silhouette && !passes.pick) {\n        // Render second silhouette pass\n        for (i = 0; i < length; ++i) {\n          nc = nodeCommands[i];\n\n          if (nc.show) {\n            commandList.push(nc.silhouetteColorCommand);\n            boundingVolume = nc.command.boundingVolume;\n\n            if (frameState.mode === SceneMode.SCENE2D && (boundingVolume.center.y + boundingVolume.radius > idl2D || boundingVolume.center.y - boundingVolume.radius < idl2D)) {\n              commandList.push(nc.silhouetteColorCommand2D);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  var credit = this._credit;\n\n  if (defined(credit)) {\n    frameState.creditDisplay.addCredit(credit);\n  }\n\n  var resourceCredits = this._resourceCredits;\n  var creditCount = resourceCredits.length;\n\n  for (var c = 0; c < creditCount; c++) {\n    frameState.creditDisplay.addCredit(resourceCredits[c]);\n  }\n};\n\nfunction destroyIfNotCached(rendererResources, cachedRendererResources) {\n  if (rendererResources.programs !== cachedRendererResources.programs) {\n    destroy(rendererResources.programs);\n  }\n\n  if (rendererResources.silhouettePrograms !== cachedRendererResources.silhouettePrograms) {\n    destroy(rendererResources.silhouettePrograms);\n  }\n} // Run from update iff:\n// - everything is loaded\n// - clipping planes state change OR color state set\n// Run this from destructor after removing color state and clipping plane state\n\n\nfunction regenerateShaders(model, frameState) {\n  // In regards to _cachedRendererResources:\n  // Fair to assume that this is data that should just never get modified due to clipping planes or model color.\n  // So if clipping planes or model color active:\n  // - delink _rendererResources.*programs and create new dictionaries.\n  // - do NOT destroy any programs - might be used by copies of the model or by might be needed in the future if clipping planes/model color is deactivated\n  // If clipping planes and model color inactive:\n  // - destroy _rendererResources.*programs\n  // - relink _rendererResources.*programs to _cachedRendererResources\n  // In both cases, need to mark commands as dirty, re-run derived commands (elsewhere)\n  var rendererResources = model._rendererResources;\n  var cachedRendererResources = model._cachedRendererResources;\n  destroyIfNotCached(rendererResources, cachedRendererResources);\n  var programId;\n\n  if (isClippingEnabled(model) || isColorShadingEnabled(model) || model._shouldRegenerateShaders) {\n    model._shouldRegenerateShaders = false;\n    rendererResources.programs = {};\n    rendererResources.silhouettePrograms = {};\n    var visitedPrograms = {};\n    var techniques = model._sourceTechniques;\n    var technique;\n\n    for (var techniqueId in techniques) {\n      if (techniques.hasOwnProperty(techniqueId)) {\n        technique = techniques[techniqueId];\n        programId = technique.program;\n\n        if (!visitedPrograms[programId]) {\n          visitedPrograms[programId] = true;\n          recreateProgram({\n            programId: programId,\n            techniqueId: techniqueId\n          }, model, frameState.context);\n        }\n      }\n    }\n  } else {\n    rendererResources.programs = cachedRendererResources.programs;\n    rendererResources.silhouettePrograms = cachedRendererResources.silhouettePrograms;\n  } // Fix all the commands, marking them as dirty so everything that derives will re-derive\n\n\n  var rendererPrograms = rendererResources.programs;\n  var nodeCommands = model._nodeCommands;\n  var commandCount = nodeCommands.length;\n\n  for (var i = 0; i < commandCount; ++i) {\n    var nodeCommand = nodeCommands[i];\n    programId = nodeCommand.programId;\n    var renderProgram = rendererPrograms[programId];\n    nodeCommand.command.shaderProgram = renderProgram;\n\n    if (defined(nodeCommand.command2D)) {\n      nodeCommand.command2D.shaderProgram = renderProgram;\n    }\n  } // Force update silhouette commands/shaders\n\n\n  updateColor(model, frameState, true);\n  updateBackFaceCulling(model, frameState, true);\n  updateSilhouette(model, frameState, true);\n}\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see Model#destroy\n */\n\n\nModel.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * model = model && model.destroy();\n *\n * @see Model#isDestroyed\n */\n\n\nModel.prototype.destroy = function () {\n  // Vertex arrays are unique to this model, destroy here.\n  if (defined(this._precreatedAttributes)) {\n    destroy(this._rendererResources.vertexArrays);\n  }\n\n  if (defined(this._removeUpdateHeightCallback)) {\n    this._removeUpdateHeightCallback();\n\n    this._removeUpdateHeightCallback = undefined;\n  }\n\n  if (defined(this._terrainProviderChangedCallback)) {\n    this._terrainProviderChangedCallback();\n\n    this._terrainProviderChangedCallback = undefined;\n  } // Shaders modified for clipping and for color don't get cached, so destroy these manually\n\n\n  if (defined(this._cachedRendererResources)) {\n    destroyIfNotCached(this._rendererResources, this._cachedRendererResources);\n  }\n\n  this._rendererResources = undefined;\n  this._cachedRendererResources = this._cachedRendererResources && this._cachedRendererResources.release();\n  DracoLoader.destroyCachedDataForModel(this);\n  var pickIds = this._pickIds;\n  var length = pickIds.length;\n\n  for (var i = 0; i < length; ++i) {\n    pickIds[i].destroy();\n  }\n\n  releaseCachedGltf(this);\n  this._quantizedVertexShaders = undefined; // Only destroy the ClippingPlaneCollection if this is the owner - if this model is part of a Cesium3DTileset,\n  // _clippingPlanes references a ClippingPlaneCollection that this model does not own.\n\n  var clippingPlaneCollection = this._clippingPlanes;\n\n  if (defined(clippingPlaneCollection) && !clippingPlaneCollection.isDestroyed() && clippingPlaneCollection.owner === this) {\n    clippingPlaneCollection.destroy();\n  }\n\n  this._clippingPlanes = undefined;\n  this._specularEnvironmentMapAtlas = this._specularEnvironmentMapAtlas && this._specularEnvironmentMapAtlas.destroy();\n  return destroyObject(this);\n}; // exposed for testing\n\n\nModel._getClippingFunction = getClippingFunction;\nModel._modifyShaderForColor = modifyShaderForColor;\nexport default Model;"],"names":["boundingSphereCartesian3Scratch","ModelState","articulationEpsilon","setCachedGltf","model","cachedGltf","_cachedGltf","CachedGltf","options","this","_gltf","gltf","ready","modelsToLoad","count","Object","defineProperties","prototype","set","value","get","makeReady","gltfJson","models","length","i","m","isDestroyed","undefined","gltfCache","uriToGuid","Model","cacheKey","_cacheKey","_releaseGltfJson","releaseGltfJson","ArrayBuffer","Uint8Array","basePath","_resource","credit","_credit","_resourceCredits","show","silhouetteColor","_silhouetteColor","_silhouetteColorPreviousAlpha","_normalAttributeName","silhouetteSize","modelMatrix","_modelMatrix","_clampedModelMatrix","scale","_scale","minimumPixelSize","_minimumPixelSize","maximumScale","_maximumScale","id","_id","heightReference","_heightReference","_heightChanged","_removeUpdateHeightCallback","scene","_scene","terrainProviderChanged","_terrainProviderChangedCallback","addEventListener","_pickObject","pickObject","_allowPicking","allowPicking","_ready","_readyPromise","activeAnimations","clampAnimations","_defaultTexture","_incrementallyLoadTextures","incrementallyLoadTextures","_asynchronous","asynchronous","shadows","_shadows","color","_colorPreviousAlpha","colorBlendMode","colorBlendAmount","_colorShadingEnabled","_clippingPlanes","clippingPlanes","_clippingPlanesState","referenceMatrix","backFaceCulling","showOutline","debugShowBoundingVolume","_debugShowBoundingVolume","debugWireframe","_debugWireframe","_distanceDisplayCondition","distanceDisplayCondition","_addBatchIdToGeneratedShaders","addBatchIdToGeneratedShaders","_precreatedAttributes","precreatedAttributes","_vertexShaderLoaded","vertexShaderLoaded","_fragmentShaderLoaded","fragmentShaderLoaded","_uniformMapLoaded","uniformMapLoaded","_pickIdLoaded","pickIdLoaded","_ignoreCommands","ignoreCommands","_requestType","requestType","_upAxis","upAxis","_gltfForwardAxis","_forwardAxis","forwardAxis","cull","opaquePass","_computedModelMatrix","_clippingPlanesMatrix","_iblReferenceFrameMatrix","_initialRadius","_boundingSphere","_scaledBoundingSphere","_state","NEEDS_LOAD","_loadResources","_mode","_perNodeShowDirty","_cesiumAnimationsDirty","_dirty","_maxDirtyNumber","_runtime","animations","articulationsByName","articulationsByStageKey","stagesByKey","rootNodes","nodes","nodesByName","skinnedNodes","meshesByName","materialsByName","materialsById","_uniformMaps","_extensionsUsed","_extensionsRequired","_quantizedUniforms","_programPrimitives","_rendererResources","buffers","vertexArrays","programs","sourceShaders","silhouettePrograms","textures","samplers","renderStates","_cachedRendererResources","_loadRendererResourcesFromCache","_dequantizeInShader","dequantizeInShader","_decodedData","_cachedGeometryByteLength","_cachedTexturesByteLength","_geometryByteLength","_texturesByteLength","_trianglesLength","_pointsLength","_sourceTechniques","_sourcePrograms","_quantizedVertexShaders","_nodeCommands","_pickIds","_rtcCenter","_rtcCenterEye","_rtcCenter3D","_rtcCenter2D","_sourceVersion","_sourceKHRTechniquesWebGL","_imageBasedLightingFactor","imageBasedLightingFactor","_lightColor","lightColor","_luminanceAtZenith","luminanceAtZenith","_sphericalHarmonicCoefficients","sphericalHarmonicCoefficients","_specularEnvironmentMaps","specularEnvironmentMaps","_shouldUpdateSpecularMapAtlas","_specularEnvironmentMapAtlas","_useDefaultSphericalHarmonics","_useDefaultSpecularMaps","_shouldRegenerateShaders","silhouetteSupported","context","stencilBuffer","isColorShadingEnabled","isClippingEnabled","enabled","getRuntime","runtimeName","name","LOADED","url","boundingSphere","nonUniformScale","Math","min","scaledBoundingSphere","center","radius","readyPromise","promise","pendingTextureLoads","dirty","far","near","extensionsUsed","extensionsRequired","trianglesLength","pointsLength","geometryByteLength","texturesByteLength","cachedGeometryByteLength","cachedTexturesByteLength","pickIds","x","y","lum","Array","isArray","fromGltf","modelResource","clone","resource","push","headers","Accept","fetchArrayBuffer","then","arrayBuffer","uint8Array","array","parsedGltf","json","resourceCredits","credits","otherwise","_gltfCache","getNode","node","publicNode","getMesh","getMaterial","setArticulationStage","articulationStageKey","stage","articulation","minimumValue","maximumValue","currentValue","isDirty","scratchArticulationCartesian","scratchArticulationRotation","applyArticulationStageMatrix","result","rotation","cartesian","type","z","scratchApplyArticulationTransform","bufferLoad","loadResources","buffer","pendingBufferLoads","extras","_pipeline","source","imageLoad","textureId","image","mipLevels","slice","map","mipLevel","bufferView","texturesToCreate","enqueue","width","height","internalFormat","applyArticulations","articulationName","hasOwnProperty","numNodes","n","transform","originalMatrix","numStages","stages","s","matrix","ktx2Regex","scratchArticulationStageInitialTransform","CreateVertexBufferJob","createVertexBuffer","bufferViewId","bufferViews","createdBufferViews","vertexBuffer","typedArray","getBuffer","usage","vertexArrayDestroyable","sizeInBytes","execute","CreateIndexBufferJob","componentType","createIndexBuffer","indexBuffer","indexDatatype","scratchVertexBufferJob","scratchIndexBufferJob","getProgramForPrimitive","primitive","material","_program","modifyShaderForQuantizedAttributes","shader","programName","primitiveId","primitives","WEB3D_quantized_attributes","uniforms","decodedData","attributes","modifyShader","callback","CreateProgramJob","programToCreate","createProgram","programId","techniqueId","program","shaders","vs","vertexShader","fs","fragmentShader","quantizedVertexShaders","quantizedVS","drawVS","drawFS","useIBL","usesSH","usesSM","createAttributesAndProgram","recreateProgram","clippingPlaneCollection","addClippingPlaneCode","finalFS","_modifyShaderForColor","_getClippingFunction","modifyShaderForClippingPlanes","technique","attributeLocations","vertexShaderSource","fragmentShaderSource","scratchCreateProgramJob","getOnImageCreatedFromTypedArray","gltfTexture","pendingBufferViewToImage","CreateTextureJob","createTexture","texture","sampler","wrapS","wrapT","usesTextureTransform","materials","materialsLength","extensions","KHR_techniques_webgl","values","valueName","indexOf","index","KHR_texture_transform","minFilter","minificationFilter","magnificationFilter","npot","tx","mipmap","requiresNpot","webgl2","console","warn","arrayBufferView","pixelFormat","canvas","document","createElement","getContext","drawImage","pixelDatatype","flipY","skipColorSpaceConversion","generateMipmap","scratchCreateTextureJob","getChannelEvaluator","runtimeNode","targetPath","spline","localAnimationTime","clampTime","wrapTime","evaluate","dirtyNumber","createVertexArrays","finishedBuffersCreation","finishedProgramCreation","rendererBuffers","rendererVertexArrays","accessors","mesh","meshId","attributeLocation","attribute","attributeName","location","techniques","_technique","programAttributeLocations","_attributeLocations","semantic","getAttributeLocations","accessorId","decodedAttributes","decodedAttribute","componentsPerAttribute","componentDatatype","normalize","normalized","offsetInBytes","byteOffset","strideInBytes","byteStride","a","indices","createRenderStates","materialId","rendererRenderStates","blendEquationSeparate","blendFuncSeparate","KHR_blend","blendEquation","blendFactors","enableCulling","doubleSided","blendingEnabled","alphaMode","depthTest","func","depthMask","blending","equationRgb","equationAlpha","functionSourceRgb","functionDestinationRgb","functionSourceAlpha","functionDestinationAlpha","createRenderStateForMaterial","gltfUniformsFromNode","MODEL","uniformState","computedMatrix","VIEW","view","PROJECTION","projection","MODELVIEW","mv","CESIUM_RTC_MODELVIEW","mvRtc","MODELVIEWPROJECTION","mvp","_projection","MODELINVERSE","mInverse","VIEWINVERSE","inverseView","PROJECTIONINVERSE","inverseProjection","MODELVIEWINVERSE","mvInverse","MODELVIEWPROJECTIONINVERSE","mvpInverse","MODELINVERSETRANSPOSE","mInverseTranspose","MODELVIEWINVERSETRANSPOSE","mvInverseTranspose","VIEWPORT","viewportCartesian4","createUniformsForMaterial","instanceValues","defaultTexture","jointMatrixUniformName","morphWeightsUniformName","uniformMap","uniformValues","uniform","uniformName","uv","getUniformFunctionFromSource","alphaCutoffValue","alphaCutoff","uv2","createUniformsForDracoQuantizedAttributes","createUniformsForQuantizedAttributes","quantizedUniforms","createPickColorFunction","createJointMatricesFunction","computedJointMatrices","createMorphWeightsFunction","weights","createSilhouetteColorFunction","createSilhouetteSizeFunction","createColorFunction","createClippingPlanesMatrixFunction","createIBLReferenceFrameMatrixFunction","createClippingPlanesFunction","createClippingPlanesEdgeStyleFunction","style","edgeColor","alpha","edgeWidth","createColorBlendFunction","createIBLFactorFunction","createLightColorFunction","createLuminanceAtZenithFunction","createSphericalHarmonicCoefficientsFunction","createSpecularEnvironmentMapFunction","createSpecularEnvironmentMapSizeFunction","dimensions","createSpecularEnvironmentMapLOD","maximumMipmapLevel","triangleCountFromPrimitiveIndices","indicesCount","mode","max","createCommand","gltfNode","scene3DOnly","nodeCommands","runtimeMeshesByName","resources","rendererPrograms","uniformMaps","gltfMeshes","meshes","ix","positionAccessor","POSITION","minMax","vertexArray","offset","numberOfIndices","um","jointUniformMap","morphWeightsUniformMap","gltf_color","gltf_colorBlend","gltf_clippingPlanes","gltf_clippingPlanesEdgeStyle","gltf_clippingPlanesMatrix","gltf_iblReferenceFrameMatrix","gltf_iblFactor","gltf_lightColor","gltf_sphericalHarmonicCoefficients","gltf_specularMap","gltf_specularMapSize","gltf_maxSpecularLOD","gltf_luminanceAtZenith","quantizedUniformMap","rs","_isTranslucent","owner","castShadows","receiveShadows","pickId","createPickId","pickUniforms","czm_pickColor","command","boundingVolume","primitiveType","shaderProgram","renderState","pass","command2D","nodeCommand","silhouetteModelCommand","silhouetteModelCommand2D","silhouetteColorCommand","silhouetteColorCommand2D","translucentCommand","translucentCommand2D","disableCullingCommand","disableCullingCommand2D","commands","createResources","frameState","glExtensions","cachedResources","memory","getGeometryByteLength","getTexturesByteLength","vertexBuffersToCreate","indexBuffersToCreate","peek","jobScheduler","dequeue","createBuffers","programsToCreate","pendingShaderLoads","createPrograms","createSamplers","rendererSamplers","samplerId","magFilter","texturesToCreateFromBufferView","onerror","mimeType","ktxBuffer","onload","format","loadTexturesFromBufferViews","createTextures","createSkins","runtimeSkins","skin","bindShapeMatrix","accessor","inverseBindMatrices","skins","runtimeNodes","skinnedNodesIds","j","skinnedNode","runtimeSkin","gltfJoints","joints","jointsLength","jointNode","createJoints","finishedPendingBufferLoads","createRuntimeAnimations","animation","channels","startTime","Number","MAX_VALUE","stopTime","channelsLength","channelEvaluators","channel","target","path","input","output","createUniformMaps","modelMaterial","_values","u","a_outlineCoordinates","outlineTexture","u_outlineTexture","finishedEverythingButTextureCreation","createRuntimeNodes","sceneNodes","scenes","stack","seen","parentRuntimeNode","pop","parents","translation","children","childrenLength","childId","getNodeMatrix","publicMatrix","useMatrix","setMatrix","scratchNodeStack","scratchComputedTranslation","scratchComputedMatrixIn2D","scratchObjectSpace","deriveTranslucentCommand","stencilTest","stencilMask","getTranslucentRenderState","updateColor","forceDerive","deriveDisableCullingCommand","updateBackFaceCulling","getProgramId","createSilhouetteProgram","sources","normalAttributeName","hasSilhouette","isTranslucent","isInvisible","alphaDirty","currAlpha","prevAlpha","floor","ceil","silhouettesLength","createSilhouetteCommands","stencilReference","silhouetteTranslucent","hasTranslucentCommands","modelCommand","frontFunction","backFunction","reference","mask","frontOperation","fail","zFail","zPass","backOperation","colorMask","red","green","blue","silhouetteProgram","silhouetteUniformMap","gltf_silhouetteColor","gltf_silhouetteSize","updateSilhouette","force","scratchBoundingSphere","scratchPosition","scratchCartographic","getScale","maxPixelSize","drawingBufferWidth","drawingBufferHeight","mapProjection","cartographic","ellipsoid","cartesianToCartographic","project","metersPerPixel","positionWC","camera","getPixelSize","scaleInPixels","pixelsPerMeter","releaseCachedGltf","CachedRendererResources","destroy","property","getUpdateHeightCallback","cartoPosition","clampedPosition","clampedCart","cartographicToCartesian","clampedModelMatrix","release","cache","modelRendererResourceCache","scratchDisplayConditionCartesian","scratchDistanceDisplayConditionCartographic","scratchClippingPlanesMatrix","scratchIBLReferenceFrameMatrix4","scratchIBLReferenceFrameMatrix3","destroyIfNotCached","rendererResources","cachedRendererResources","update","supportsWebP","modelCaches","LOADING","FAILED","CESIUM_RTC","projectedCart","justLoaded","initialized","brdfLutGenerator","sourceVersion","sourceKHRTechniquesWebGL","addBuffersToLoadResources","runtimeStagesByKey","AGI_articulations","gltfArticulations","articulations","numArticulations","initialValue","stageKey","parseArticulations","sourcePrograms","sourceTechniques","parseTechniques","indexBufferIds","parseBufferViews","bufferId","byteLength","shaderResource","getDerivedResource","uri","fetchText","shaderLoad","parseShaders","parsePrograms","images","imageId","EXT_texture_webp","KHR_texture_basisu","supportsBasis","gltfImage","imageResource","test","fetchImage","preferImageBitmap","parseTextures","runtimeMaterialsByName","runtimeMaterialsById","parseMaterials","programPrimitives","parseMeshes","runtimeNodesByName","computedShow","transformToRoot","jointName","parseNodes","finishedDecoding","resourcesParsed","finished","iblSupported","that","error","recompileWithDefaultAtlas","recompileWithoutDefaultAtlas","recompileWithDefaultSHCoeffs","recompileWithoutDefaultSHCoeffs","silhouette","translucent","invisible","displayConditionPassed","distance2","ddc","nearSquared","farSquared","frustum","right","left","position","distanceDisplayConditionVisible","animated","modeChanged","modelTransformChanged","globe","surface","_surface","updateHeight","getHeight","cb","updateClamping","computedModelMatrix","maxDirtyNumber","nodeStack","to2D","nodeMatrix","commandsLength","primitiveCommand","maximumRadius","k","child","updateNodeHierarchyModelMatrix","inverseBindMatricesLength","applySkins","nodeCommandsLength","updatePerNodeShow","object","updatePickIds","updateWireframe","updateShowBoundingVolume","updateShadows","updateClippingPlanes","currentClippingPlanesState","clippingPlanesMatrix","view3D","clippingPlanesState","iblReferenceFrameMatrix3","iblReferenceFrameMatrix4","shouldRegenerateShaders","currentlyColorShadingEnabled","visitedPrograms","commandCount","renderProgram","regenerateShaders","afterRender","resolve","nc","commandList","passes","idl2D","render","pick","creditDisplay","addCredit","creditCount","c"],"sourceRoot":""}