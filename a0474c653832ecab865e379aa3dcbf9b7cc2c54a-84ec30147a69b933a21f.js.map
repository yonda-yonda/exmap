{"version":3,"file":"a0474c653832ecab865e379aa3dcbf9b7cc2c54a-84ec30147a69b933a21f.js","mappings":"oLAmBO,SAASA,EAASC,GACvB,IAEIC,EAAGC,EAFHC,EAAYC,OAAOC,KAAKL,EAAMM,MAC9BC,EAAMJ,EAAUK,OAGpB,IAAKP,EAAI,EAAGA,EAAIM,IAAON,EAAG,CACxB,IAAIQ,EAAON,EAAUF,GAErB,KAAK,QAAIQ,GAAO,CACd,IAAIC,EAAMV,EAAMM,KAAKG,GACjBE,EAAQD,EAAIC,MAEXA,GAA0B,YAAjBD,EAAIE,WAChBD,EAAQ,eAGV,QAAc,IAAI,IAAW,CAC3BF,KAAMA,EACNI,gBAAiBH,EAAII,KACrBC,cAAeL,EAAIM,SACnBL,MAAOA,MAKb,IAAKV,EAAI,EAAGA,EAAIM,IAAON,EAAG,CACxB,IAAIgB,EAAQd,EAAUF,GAClBiB,GAAQ,QAAID,GAEhB,IAAKf,EAAI,EAAGA,EAAIK,IAAOL,EAAG,CACxB,IAAIiB,EAAQhB,EAAUD,GAClBkB,GAAQ,QAAID,GAEhB,KAAK,QAAaF,EAAOE,GACvB,GAAInB,EAAMM,KAAKW,KAAWjB,EAAMM,KAAKa,IACnC,QAAyB,CAACD,EAAOE,QAC5B,CACL,IAAIC,EAAYrB,EAAMiB,EAAOE,IAC7B,QAAwBD,EAAOE,GAAO,QAA8BF,EAAOE,EAAOC,EAAUC,UAAU,QAA8BF,EAAOF,EAAOG,EAAUE,e,oECzD/J,IAOIC,EAAsB,QAItBC,EAAqB,qBAErBC,EAAa,oBACbC,EAAUC,KAAKC,GAAK,EASpBC,EAAQ,MAGRC,EAAM,oBACNC,EAAM,kBACNC,EAASL,KAAKC,GAAK,EACnBK,EAAmB,EAAVN,KAAKC,GAKdM,EAAM,cClCb,EAAU,CAEd,UAAoB,EAEpB,QAAkB,eAElB,MAAgB,eAEhB,QAAkB,gBAElB,QAAkB,eAElB,KAAe,gBAEf,KAAe,eAEf,QAAkB,iBAElB,OAAiB,gBAEjB,SAAmB,SAEnB,UAAoB,gBAEpB,OAAiB,WAEjB,KAAe,iBC1Bf,GACEC,GAAI,CACFpB,SAAU,OAEZ,QAAS,CACPA,SAAU,KAAO,OCLjBqB,EAAc,iBACH,SAASC,EAAMC,EAAKC,GACjC,GAAID,EAAIC,GACN,OAAOD,EAAIC,GAQb,IALA,IAGIC,EAHApC,EAAOD,OAAOC,KAAKkC,GACnBG,EAAOF,EAAIG,cAAcC,QAAQP,EAAa,IAC9CpC,GAAK,IAGAA,EAAII,EAAKG,QAIhB,IAHAiC,EAAUpC,EAAKJ,IACQ0C,cAAcC,QAAQP,EAAa,MAErCK,EACnB,OAAOH,EAAIE,GCZF,SAAS,EAACI,GACvB,IAWIC,EAAWC,EAAUC,EAXrBC,EAAO,GACPC,EAAWL,EAAQM,MAAM,KAAKC,KAAI,SAAUC,GAC9C,OAAOA,EAAEC,UACRC,QAAO,SAAUC,GAClB,OAAOA,KACNC,QAAO,SAAUC,EAAGF,GACrB,IAAIL,EAAQK,EAAEL,MAAM,KAGpB,OAFAA,EAAMQ,MAAK,GACXD,EAAEP,EAAM,GAAGR,eAAiBQ,EAAM,GAC3BO,IACN,IAECE,EAAS,CACXC,KAAM,WACNC,MAAO,YACPC,GAAI,SAAYV,GACdJ,EAAKc,GAAKC,WAAWX,IAEvBY,MAAO,SAAeZ,GACpBJ,EAAKiB,KAAOb,EAAItB,GAElBoC,MAAO,SAAed,GACpBJ,EAAKmB,KAAOf,EAAItB,GAElBsC,MAAO,SAAehB,GACpBJ,EAAKqB,KAAOjB,EAAItB,GAElBwC,OAAQ,SAAgBlB,GACtBJ,EAAKsB,OAASlB,EAAItB,GAEpByC,MAAO,SAAenB,GACpBJ,EAAKwB,MAAQpB,EAAItB,GAEnB2C,MAAO,SAAerB,GACpBJ,EAAK0B,MAAQtB,EAAItB,GAEnB6C,MAAO,SAAevB,GACpBJ,EAAK4B,MAAQxB,EAAItB,GAEnB+C,MAAO,SAAezB,GACpBJ,EAAK6B,MAAQd,WAAWX,GAAKtB,GAE/BgD,MAAO,SAAe1B,GACpBJ,EAAK+B,qBAAuBhB,WAAWX,IAEzC4B,KAAM,SAAc5B,GAClBJ,EAAKiC,MAAQ7B,EAAItB,GAEnBoD,IAAK,SAAa9B,GAChBJ,EAAKmC,GAAKpB,WAAWX,IAEvBgC,IAAK,SAAahC,GAChBJ,EAAKqC,GAAKtB,WAAWX,IAEvBkC,IAAK,SAAalC,GAChBJ,EAAKuC,GAAKxB,WAAWX,IAEvBoC,EAAG,SAAWpC,GACZJ,EAAKuC,GAAKxB,WAAWX,IAEvBG,EAAG,SAAWH,GACZJ,EAAKO,EAAIQ,WAAWX,IAEtBqC,EAAG,SAAWrC,GACZJ,EAAKyC,EAAI1B,WAAWX,IAEtBsC,IAAK,WACH1C,EAAK2C,KAAM,GAEbC,KAAM,SAAcxC,GAClBJ,EAAK4C,KAAOC,SAASzC,EAAG,KAE1B0C,MAAO,WACL9C,EAAK+C,UAAW,GAElBC,QAAS,SAAiB5C,GACxBJ,EAAKiD,aAAe7C,EAAEF,MAAM,KAAKC,KAAI,SAAUI,GAC7C,OAAOQ,WAAWR,OAGtBxC,SAAU,SAAkBqC,GAC1BJ,EAAKjC,SAAWgD,WAAWX,IAE7B1C,MAAO,SAAe0C,GACpBJ,EAAKtC,MAAQ0C,EACb,IAAI8C,EAAO7D,EAAM,EAAQe,GAErB8C,IACFlD,EAAKjC,SAAWmF,EAAKnF,WAGzBoF,eAAgB,SAAwB/C,GACtCJ,EAAKmD,eAAiB/C,EAAItB,GAE5BsE,GAAI,SAAYhD,GACd,IAAIgD,EAAK/D,EAAM,EAAee,GAC9BJ,EAAKmD,gBAAkBC,GAAUrC,WAAWX,IAAMtB,GAEpDuE,SAAU,SAAkBjD,GAChB,UAANA,EACFJ,EAAKsD,UAAY,OAEjBtD,EAAKqD,SAAWjD,GAGpBvC,KAAM,SAAcuC,GAClB,IAAImD,EAAY,SAEC,IAAbnD,EAAE7C,SAAuD,IAAvCgG,EAAUC,QAAQpD,EAAEqD,OAAO,EAAG,MAAqD,IAAvCF,EAAUC,QAAQpD,EAAEqD,OAAO,EAAG,MAAqD,IAAvCF,EAAUC,QAAQpD,EAAEqD,OAAO,EAAG,MAC1IzD,EAAKnC,KAAOuC,IAGhBsD,OAAQ,WACN1D,EAAK0D,QAAS,IAIlB,IAAK7D,KAAaI,EAChBH,EAAWG,EAASJ,GAEhBA,KAAac,EAGa,mBAF5BZ,EAAeY,EAAOd,IAGpBE,EAAaD,GAEbE,EAAKD,GAAgBD,EAGvBE,EAAKH,GAAaC,EAQtB,MAJ8B,iBAAnBE,EAAKsD,WAA6C,UAAnBtD,EAAKsD,YAC7CtD,EAAKsD,UAAYtD,EAAKsD,UAAU5D,eAG3BM,EC9IT,MA0MA,SAAqB2D,GAEnB,OADa,IAAIC,EAAOD,GACVE,UArMZC,EAAa,KACbC,EAAQ,WACRC,EAAU,aACVC,EAAY,QACZC,EAAS,cAEb,SAASN,EAAOO,GACd,GAAoB,iBAATA,EACT,MAAM,IAAIC,MAAM,gBAGlBC,KAAKF,KAAOA,EAAK9D,OACjBgE,KAAKC,MAAQ,EACbD,KAAKE,MAAQ,EACbF,KAAKG,KAAO,KACZH,KAAKI,MAAQ,GACbJ,KAAKK,cAAgB,KACrBL,KAAKM,MAvBO,ECDd,SAASC,EAAMtF,EAAKC,EAAKsF,GACnBC,MAAMC,QAAQxF,KAChBsF,EAAMG,QAAQzF,GACdA,EAAM,MAGR,IAAI0F,EAAQ1F,EAAM,GAAKD,EACnB4F,EAAML,EAAMrE,QAAO,SAAU2E,EAAQC,GAEvC,OADAC,EAAMD,EAAMD,GACLA,IACNF,GAEC1F,IACFD,EAAIC,GAAO2F,GAIR,SAASG,EAAMjF,EAAGd,GACvB,GAAKwF,MAAMC,QAAQ3E,GAAnB,CAKA,IAAIb,EAAMa,EAAEkF,QAMZ,GAJY,cAAR/F,IACFA,EAAMa,EAAEkF,SAGO,IAAblF,EAAE7C,OACJ,OAAIuH,MAAMC,QAAQ3E,EAAE,KAClBd,EAAIC,GAAO,QACX8F,EAAMjF,EAAE,GAAId,EAAIC,UAIlBD,EAAIC,GAAOa,EAAE,IAIf,GAAKA,EAAE7C,OAKP,GAAY,YAARgC,EAAJ,CAKA,GAAY,SAARA,EAMF,OALMA,KAAOD,IACXA,EAAIC,GAAO,SAGbD,EAAIC,GAAKmB,KAAKN,GAQhB,IAAIpD,EAEJ,OANK8H,MAAMC,QAAQxF,KACjBD,EAAIC,GAAO,IAKLA,GACN,IAAK,OACL,IAAK,SACL,IAAK,aAUH,OATAD,EAAIC,GAAO,CACTgG,KAAMnF,EAAE,GAAGV,cACX8F,QAASpF,EAAE,SAGI,IAAbA,EAAE7C,QACJ8H,EAAMjF,EAAE,GAAId,EAAIC,KAKpB,IAAK,WACL,IAAK,YAWH,OAVAD,EAAIC,GAAO,CACTgG,KAAMnF,EAAE,GACRG,EAAGH,EAAE,GACLU,GAAIV,EAAE,SAGS,IAAbA,EAAE7C,QACJ8H,EAAMjF,EAAE,GAAId,EAAIC,KAKpB,IAAK,eACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,WACL,IAAK,UACL,IAAK,cACL,IAAK,gBACL,IAAK,SACL,IAAK,mBACL,IAAK,UACL,IAAK,UACL,IAAK,cACL,IAAK,WACL,IAAK,cACL,IAAK,iBACL,IAAK,SACL,IAAK,YACL,IAAK,cACL,IAAK,QAGH,OAFAa,EAAE,GAAK,CAAC,OAAQA,EAAE,SAClBwE,EAAMtF,EAAKC,EAAKa,GAGlB,QAGE,IAFApD,GAAK,IAEIA,EAAIoD,EAAE7C,QACb,IAAKuH,MAAMC,QAAQ3E,EAAEpD,IACnB,OAAOqI,EAAMjF,EAAGd,EAAIC,IAIxB,OAAOqF,EAAMtF,EAAKC,EAAKa,SAlFzBd,EAAIC,GAAOa,OALXd,EAAIC,IAAO,OAtBXD,EAAIc,IAAK,EDQbwD,EAAO6B,UAAUC,cAAgB,WAC/B,IAAIC,EAAOtB,KAAKF,KAAKE,KAAKE,SAE1B,GA1BW,IA0BPF,KAAKM,MACP,KAAOb,EAAW8B,KAAKD,IAAO,CAC5B,GAAItB,KAAKE,OAASF,KAAKF,KAAK5G,OAC1B,OAGFoI,EAAOtB,KAAKF,KAAKE,KAAKE,SAI1B,OAAQF,KAAKM,OACX,KAxCU,EAyCR,OAAON,KAAKwB,QAAQF,GAEtB,KA1CU,EA2CR,OAAOtB,KAAKL,QAAQ2B,GAEtB,KA3CS,EA4CP,OAAOtB,KAAKyB,OAAOH,GAErB,KA7Ca,EA8CX,OAAOtB,KAAK0B,WAAWJ,GAEzB,KAlDS,EAmDP,OAAOtB,KAAK2B,OAAOL,GAErB,KAlDQ,EAmDN,SAIN/B,EAAO6B,UAAUM,WAAa,SAAUJ,GACtC,GAAa,MAATA,EAGF,OAFAtB,KAAK4B,MAAQ,SACb5B,KAAKM,MA5DI,GAgEX,GAAIV,EAAU2B,KAAKD,GAGjB,OAFAtB,KAAK4B,KAAO5B,KAAK4B,KAAK5F,YACtBgE,KAAK6B,UAAUP,GAIjB,MAAM,IAAIvB,MAAM,oBAAsBuB,EAAO,8BAAgCtB,KAAKE,QAGpFX,EAAO6B,UAAUS,UAAY,SAAUP,GACrC,MAAa,MAATA,GACgB,OAAdtB,KAAK4B,MACP5B,KAAKK,cAAchE,KAAK2D,KAAK4B,MAG/B5B,KAAK4B,KAAO,UACZ5B,KAAKM,MAnFK,IAuFC,MAATgB,GACFtB,KAAKC,QAEa,OAAdD,KAAK4B,OACP5B,KAAKK,cAAchE,KAAK2D,KAAK4B,MAC7B5B,KAAK4B,KAAO,MAGd5B,KAAKM,MA/FK,EAgGVN,KAAKK,cAAgBL,KAAKI,MAAM0B,WAE3B9B,KAAKK,gBACRL,KAAKM,OA9FC,UAkFV,GAmBFf,EAAO6B,UAAUO,OAAS,SAAUL,GAClC,IAAIzB,EAAO0B,KAAKD,GAAhB,CAKA,GAAI1B,EAAU2B,KAAKD,GAGjB,OAFAtB,KAAK4B,KAAOlF,WAAWsD,KAAK4B,WAC5B5B,KAAK6B,UAAUP,GAIjB,MAAM,IAAIvB,MAAM,oBAAsBuB,EAAO,0BAA4BtB,KAAKE,OAV5EF,KAAK4B,MAAQN,GAajB/B,EAAO6B,UAAUK,OAAS,SAAUH,GACrB,MAATA,EAKJtB,KAAK4B,MAAQN,EAJXtB,KAAKM,MAvHQ,GA+HjBf,EAAO6B,UAAUzB,QAAU,SAAU2B,GACnC,GAAI3B,EAAQ4B,KAAKD,GACftB,KAAK4B,MAAQN,MADf,CAKA,GAAa,MAATA,EAAc,CAChB,IAAIS,EAAa,GAajB,OAZAA,EAAW1F,KAAK2D,KAAK4B,MACrB5B,KAAKC,QAEa,OAAdD,KAAKG,KACPH,KAAKG,KAAO4B,EAEZ/B,KAAKK,cAAchE,KAAK0F,GAG1B/B,KAAKI,MAAM/D,KAAK2D,KAAKK,eACrBL,KAAKK,cAAgB0B,OACrB/B,KAAKM,MAtJK,GA0JZ,IAAIV,EAAU2B,KAAKD,GAKnB,MAAM,IAAIvB,MAAM,oBAAsBuB,EAAO,2BAA6BtB,KAAKE,OAJ7EF,KAAK6B,UAAUP,KAOnB/B,EAAO6B,UAAUI,QAAU,SAAUF,GACnC,GAAI5B,EAAM6B,KAAKD,GAGb,OAFAtB,KAAK4B,KAAON,OACZtB,KAAKM,MApKK,GAwKZ,GAAa,MAATgB,EAGF,OAFAtB,KAAK4B,KAAO,QACZ5B,KAAKM,MAxKI,GA4KX,GAAIT,EAAO0B,KAAKD,GAGd,OAFAtB,KAAK4B,KAAON,OACZtB,KAAKM,MA/KI,GAmLX,IAAIV,EAAU2B,KAAKD,GAKnB,MAAM,IAAIvB,MAAM,oBAAsBuB,EAAO,2BAA6BtB,KAAKE,OAJ7EF,KAAK6B,UAAUP,IAOnB/B,EAAO6B,UAAU5B,OAAS,WACxB,KAAOQ,KAAKE,MAAQF,KAAKF,KAAK5G,QAC5B8G,KAAKqB,gBAGP,IA7LU,IA6LNrB,KAAKM,MACP,OAAON,KAAKG,KAGd,MAAM,IAAIJ,MAAM,2BAA6BC,KAAKF,KAAO,eAAiBE,KAAKM,QEtLjF,SAAS0B,EAAIC,GACX,MAlBQ,oBAkBDA,EAuKM,SAAS,EAACC,GACvB,IAAIC,EAAOC,EAAOF,GACdG,EAAOF,EAAKlB,QACZC,EAAOiB,EAAKlB,QAChBkB,EAAKxB,QAAQ,CAAC,OAAQO,IACtBiB,EAAKxB,QAAQ,CAAC,OAAQ0B,IACtB,IAAIpH,EAAM,GAGV,OAFA+F,EAAMmB,EAAMlH,GA3Kd,SAAkBiH,GAchB,GAbiB,WAAbA,EAAIG,KACNH,EAAI5I,SAAW,UACO,aAAb4I,EAAIG,MACbH,EAAI5I,SAAW,WACf4I,EAAII,OAAQ,GAEkB,iBAAnBJ,EAAIK,WACbL,EAAI5I,SAAWR,OAAOC,KAAKmJ,EAAIK,YAAY,GAE3CL,EAAI5I,SAAW4I,EAAIK,WAInBL,EAAIM,KAAM,CAGZ,IAFA,IAAIC,EAAY,GAEP9J,EAAI,EAAG+J,EAAKR,EAAIM,KAAKtJ,OAAQP,EAAI+J,IAAM/J,EAAG,CACjD,IAAIa,EAAO,CAAC0I,EAAIM,KAAK7J,GAAG,GAAG0C,cAAe6G,EAAIM,KAAK7J,GAAG,GAAG0C,gBAEvB,IAA9B7B,EAAK,GAAG2F,QAAQ,WAAgC,MAAZ3F,EAAK,IAA0B,QAAZA,EAAK,KAA6B,UAAZA,EAAK,GACpFiJ,GAAa,KAC0B,IAA9BjJ,EAAK,GAAG2F,QAAQ,WAAgC,MAAZ3F,EAAK,IAA0B,QAAZA,EAAK,KAA6B,UAAZA,EAAK,GAC3FiJ,GAAa,KACyB,IAA7BjJ,EAAK,GAAG2F,QAAQ,UAA+B,MAAZ3F,EAAK,IAA0B,QAAZA,EAAK,KAA6B,SAAZA,EAAK,GAC1FiJ,GAAa,KACyB,IAA7BjJ,EAAK,GAAG2F,QAAQ,UAA+B,MAAZ3F,EAAK,IAA0B,QAAZA,EAAK,IAA6B,SAAZA,EAAK,MAC1FiJ,GAAa,KAIQ,IAArBA,EAAUvJ,SACZuJ,GAAa,KAGU,IAArBA,EAAUvJ,SACZgJ,EAAI1I,KAAOiJ,GAIXP,EAAIS,OACNT,EAAI7I,MAAQ6I,EAAIS,KAAKzB,KAAK7F,cAER,UAAd6G,EAAI7I,QACN6I,EAAI7I,MAAQ,SAGV6I,EAAIS,KAAKxB,UACM,WAAbe,EAAIG,KACFH,EAAIU,OAASV,EAAIU,MAAMC,WACzBX,EAAIxI,SAAWwI,EAAIS,KAAKxB,QAAUe,EAAIU,MAAMC,SAAS3G,GAGvDgG,EAAIxI,SAAWwI,EAAIS,KAAKxB,UAK9B,IAAI2B,EAASZ,EAAIa,OAoFjB,SAASC,EAAQf,GAEf,OAAOA,GADKC,EAAIxI,UAAY,GAnFb,WAAbwI,EAAIG,OACNS,EAASZ,GAGPY,IAIEA,EAAOF,MACTV,EAAIjD,UAAY6D,EAAOF,MAAM1B,KAAK7F,cAElC6G,EAAIjD,UAAY6D,EAAO5B,KAAK7F,cAGI,OAA9B6G,EAAIjD,UAAUgE,MAAM,EAAG,KACzBf,EAAIjD,UAAYiD,EAAIjD,UAAUgE,MAAM,IAGhB,oCAAlBf,EAAIjD,WAAqE,qBAAlBiD,EAAIjD,YAC7DiD,EAAIjD,UAAY,UAGI,aAAlBiD,EAAIjD,WAA8C,+BAAlBiD,EAAIjD,YACf,8BAAnBiD,EAAIK,aACNL,EAAIgB,QAAS,GAGfhB,EAAIjD,UAAY,SAGc,WAA5BiD,EAAIjD,UAAUgE,OAAO,KACvBf,EAAIjD,UAAYiD,EAAIjD,UAAUgE,MAAM,GAAI,IAGV,aAA5Bf,EAAIjD,UAAUgE,OAAO,KACvBf,EAAIjD,UAAYiD,EAAIjD,UAAUgE,MAAM,GAAI,KAGrCf,EAAIjD,UAAUE,QAAQ,WACzB+C,EAAIjD,UAAY,SAGd6D,EAAOF,OAASE,EAAOF,MAAMC,WAC/BX,EAAIiB,MAAQL,EAAOF,MAAMC,SAAS3B,KAAK5F,QAAQ,MAAO,IAAIA,QAAQ,gBAAiB,QAEtC,kBAAzC4G,EAAIiB,MAAM9H,cAAc4H,MAAM,EAAG,MACnCf,EAAIiB,MAAQ,QAGdjB,EAAIhG,EAAI4G,EAAOF,MAAMC,SAAS3G,EAC9BgG,EAAIzF,GAAKC,WAAWoG,EAAOF,MAAMC,SAASpG,GAAI,KAG5CqG,EAAOF,OAASE,EAAOF,MAAMQ,UAC/BlB,EAAItD,aAAekE,EAAOF,MAAMQ,UAG7BlB,EAAIjD,UAAUE,QAAQ,eACzB+C,EAAIjD,UAAY,WAGbiD,EAAIjD,UAAUE,QAAQ,eACzB+C,EAAIjD,UAAY,YAGbiD,EAAIjD,UAAUE,QAAQ,UAAY+C,EAAIjD,UAAUE,QAAQ,6BAC3D+C,EAAIjD,UAAY,SAGI,YAAlBiD,EAAIjD,YACNiD,EAAIjD,UAAY,WAGbiD,EAAIjD,UAAUE,QAAQ,YACzB+C,EAAIjD,UAAY,UAIhBiD,EAAI9D,IAAMiF,SAASnB,EAAI9D,KACzB8D,EAAI9D,EAAI8D,EAAIhG,GAYH,CAAC,CAAC,sBAAuB,uBAAwB,CAAC,sBAAuB,qCAAsC,CAAC,sBAAuB,uBAAwB,CAAC,sBAAuB,qCAAsC,CAAC,gBAAiB,iBAAkB,CAAC,gBAAiB,iBAAkB,CAAC,gBAAiB,2BAA4B,CAAC,iBAAkB,kBAAmB,CAAC,iBAAkB,kBAAmB,CAAC,iBAAkB,4BAA6B,CAAC,mBAAoB,oBAAqB,CAAC,mBAAoB,+BAAgC,CAAC,mBAAoB,6BAA8B,CAAC,qBAAsB,sBAAuB,CAAC,qBAAsB,oBAAqB,CAAC,qBAAsB,8BAA+B,CAAC,qBAAsB,4BAA6B,CAAC,eAAgB,gBAAiB,CAAC,KAAM,gBAAiB,CAAC,qBAAsB,sBAAuB,CAAC,qBAAsB,sBAAuB,CAAC,OAAQ,qBAAsB8F,GAAM,CAAC,sBAAuB,uBAAwB,CAAC,sBAAuB,uBAAwB,CAAC,QAAS,sBAAuBA,GAAM,CAAC,KAAM,gBAAiBgB,GAAU,CAAC,KAAM,iBAAkBA,GAAU,CAAC,QAAS,mBAAoBhB,GAAM,CAAC,OAAQ,qBAAsBA,GAAM,CAAC,OAAQ,sBAAuBA,GAAM,CAAC,OAAQ,sBAAuBA,GAAM,CAAC,OAAQ,sBAAuBA,GAAM,CAAC,UAAW,WAAY,CAAC,QAAS,UAAWA,GAAM,CAAC,UAAW,SAC56CsB,SALS,SAAiBpH,GAC7B,OArKJ,SAAgBjB,EAAKqB,GACnB,IAAIiH,EAAUjH,EAAO,GACjBkH,EAASlH,EAAO,KAEdiH,KAAWtI,IAAQuI,KAAUvI,IACjCA,EAAIsI,GAAWtI,EAAIuI,GAEG,IAAlBlH,EAAOpD,SACT+B,EAAIsI,GAAWjH,EAAO,GAAGrB,EAAIsI,MA6JxBE,CAAOvB,EAAKhG,MAMhBgG,EAAI/E,QAAS+E,EAAItE,OAA2B,4BAAjBsE,EAAI5I,UAA2D,iCAAjB4I,EAAI5I,WAChF4I,EAAI/E,MAAQ+E,EAAItE,OAGbsE,EAAIjF,SAAUiF,EAAIpF,MAA0B,6BAAjBoF,EAAI5I,UAA4D,oCAAjB4I,EAAI5I,WACjF4I,EAAItF,KAAOoF,EAAIE,EAAIpF,KAAO,EAAI,IAAM,IACpCoF,EAAIjF,OAASiF,EAAIpF,MAYnB4G,CAASzI,GACFA,EC9LT,SAASjC,EAAKkI,GAEZ,IAAIyC,EAAO3D,KAEX,GAAyB,IAArB4D,UAAU1K,OAAc,CAC1B,IAAIE,EAAMwK,UAAU,GAED,iBAARxK,EACa,MAAlBA,EAAIyK,OAAO,GACb7K,EAAKkI,GAAQ,EAAU0C,UAAU,IAEjC5K,EAAKkI,GAAQ,EAAI0C,UAAU,IAG7B5K,EAAKkI,GAAQ9H,OAEV,GAAyB,IAArBwK,UAAU1K,OAAc,CACjC,GAAIuH,MAAMC,QAAQQ,GAChB,OAAOA,EAAKpF,KAAI,SAAUC,GACpB0E,MAAMC,QAAQ3E,GAChB/C,EAAK8K,MAAMH,EAAM5H,GAEjB/C,EAAK+C,MAGJ,GAAoB,iBAATmF,GAChB,GAAIA,KAAQlI,EACV,OAAOA,EAAKkI,OAEL,SAAUA,EACnBlI,EAAK,QAAUkI,EAAK6C,MAAQ7C,EACnB,SAAUA,EACnBlI,EAAK,QAAUkI,EAAK8C,MAAQ9C,EACnB,YAAaA,EACtBlI,EAAK,WAAakI,EAAK+C,SAAW/C,EAElCgD,QAAQC,IAAIjD,GAGd,SC3CW,SAAUlI,GACvBA,EAAK,YAAa,mFAClBA,EAAK,YAAa,mHAClBA,EAAK,YAAa,oJAClBA,EAAKoL,MAAQpL,EAAK,aAClBA,EAAK,aAAeA,EAAK,aAEzBA,EAAKqL,OAASrL,EAAK,aACnBA,EAAK,eAAiBA,EAAK,aAC3BA,EAAK,eAAiBA,EAAK,aDsC7BsL,CAAQtL,GACR,QEnCA,IAAIuL,EAAY,CAAC,eAAgB,UAAW,SAAU,SAAU,SAAU,WAAY,UAAW,cAAe,gBAAiB,SAAU,kBAQ3I,IAAIC,EAAQ,CAAC,OAAQ,SAAU,OAAQ,UA0DvC,MA/BA,SAAerL,GACb,IA5CF,SAAiBA,GACf,MAAuB,iBAATA,EA2CVsL,CAAQtL,GA0BV,OAAOA,EAxBP,GA1CJ,SAAiBA,GACf,OAAOA,KAAQ,EAyCTuL,CAAQvL,GACV,OAAO,EAAKA,GAGd,GAxCJ,SAAiBA,GACf,OAAOoL,EAAUI,MAAK,SAAU/C,GAC9B,OAAOzI,EAAKgG,QAAQyC,IAAS,KAsCzBgD,CAAQzL,GAAO,CACjB,IAAI0H,EAAM,EAAI1H,GAEd,GAnCN,SAAuB4H,GACrB,IAAI8D,EAAO7J,EAAM+F,EAAM,aAEvB,GAAK8D,EAAL,CAIA,IAAI1L,EAAO6B,EAAM6J,EAAM,QACvB,OAAO1L,GAAQqL,EAAMrF,QAAQhG,IAAS,GA2B9B2L,CAAcjE,GAChB,OAAO,eAGT,IAAIkE,EA5BV,SAAsBhE,GACpB,IAAIiE,EAAMhK,EAAM+F,EAAM,aAEtB,GAAKiE,EAIL,OAAOhK,EAAMgK,EAAK,SAqBKC,CAAapE,GAEhC,OAAIkE,EACK,EAAQA,GAGVlE,EAGT,OA3BJ,SAAkB1H,GAChB,MAAmB,MAAZA,EAAK,GA0BN+L,CAAS/L,GACJ,EAAQA,QADjB,GCvEW,SAAS,EAACgM,EAAaC,GAEpC,IAAI5E,EAAO6E,EAEX,GAHAF,EAAcA,GAAe,IAGxBC,EACH,OAAOD,EAGT,IAAKE,KAAYD,OAGDE,KAFd9E,EAAQ4E,EAAOC,MAGbF,EAAYE,GAAY7E,GAI5B,OAAO2E,EChBM,SAAS,EAACI,EAAQC,EAAQC,GACvC,IAAIC,EAAMH,EAASC,EACnB,OAAOC,EAASnL,KAAKqL,KAAK,EAAID,EAAMA,GCFvB,SAAS,EAACE,GACvB,OAAOA,EAAI,GAAK,EAAI,ECCP,SAAS,EAACA,GACvB,OAAOtL,KAAKuL,IAAID,IAAM/K,EAAM+K,EAAIA,EAAIE,EAAKF,GAAKhL,ECFjC,SAAS,EAAC2K,EAAQQ,EAAKP,GACpC,IAAIE,EAAMH,EAASC,EACfQ,EAAM,GAAMT,EAEhB,OADAG,EAAMpL,KAAK2L,KAAK,EAAIP,IAAQ,EAAIA,GAAMM,GAC/B1L,KAAK4L,IAAI,IAAO7L,EAAU0L,IAAQL,ECJ5B,SAAS,EAACH,EAAQY,GAK/B,IAJA,IACIT,EAAKU,EADLC,EAAS,GAAMd,EAEfQ,EAAM1L,EAAU,EAAIC,KAAKgM,KAAKH,GAEzBxN,EAAI,EAAGA,GAAK,GAAIA,IAKvB,GAJA+M,EAAMH,EAASjL,KAAKiM,IAAIR,GAExBA,GADAK,EAAO/L,EAAU,EAAIC,KAAKgM,KAAKH,EAAK7L,KAAK2L,KAAK,EAAIP,IAAQ,EAAIA,GAAMW,IAAWN,EAG3EzL,KAAKuL,IAAIO,IAAS,MACpB,OAAOL,EAKX,OAAQ,KCdV,SAASS,EAASC,GAChB,OAAOA,EAKF,ICPHC,EAAQ,CCyFZ,CACEC,KAvFK,WACL,IAAIjB,EAAM1F,KAAK5B,EAAI4B,KAAK9D,EACxB8D,KAAK4G,GAAK,EAAIlB,EAAMA,EAEd,OAAQ1F,OACZA,KAAKlC,GAAK,GAGN,OAAQkC,OACZA,KAAKhC,GAAK,GAGZgC,KAAK6G,EAAIvM,KAAKqL,KAAK3F,KAAK4G,IAEpB5G,KAAK/C,OACH+C,KAAKkD,OACPlD,KAAK9B,GAAK5D,KAAKwM,IAAI9G,KAAK/C,QAExB+C,KAAK9B,GAAK6I,EAAM/G,KAAK6G,EAAGvM,KAAKiM,IAAIvG,KAAK/C,QAAS3C,KAAKwM,IAAI9G,KAAK/C,SAG1D+C,KAAK9B,KACJ8B,KAAK7B,EACP6B,KAAK9B,GAAK8B,KAAK7B,EAEf6B,KAAK9B,GAAK,IA+DhBlE,QAvDK,SAAiBoC,GACtB,IAOIwJ,EAAGoB,EAPHC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAEZ,GAAIE,EAAMxM,EAAM,IAAMwM,EAAMxM,GAAO,IAAMuM,EAAMvM,EAAM,KAAOuM,EAAMvM,GAAO,IACvE,OAAO,KAKT,GAAIJ,KAAKuL,IAAIvL,KAAKuL,IAAIqB,GAAO7M,IAAYG,EACvC,OAAO,KAEP,GAAIwF,KAAKkD,OACP0C,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAI8D,KAAK9B,GAAKiJ,EAAWF,EAAMjH,KAAK7C,OACvD6J,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAI8D,KAAK9B,GAAK5D,KAAK6J,IAAI7J,KAAK4L,IAAIvL,EAAS,GAAMuM,QAC7D,CACL,IAAI1B,EAASlL,KAAKiM,IAAIW,GAClBf,EAAKiB,EAAMpH,KAAK6G,EAAGK,EAAK1B,GAC5BI,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAI8D,KAAK9B,GAAKiJ,EAAWF,EAAMjH,KAAK7C,OACvD6J,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAI8D,KAAK9B,GAAK5D,KAAK6J,IAAIgC,GAK5C,OAFA/J,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA+BTnC,QAzBK,SAAiBmC,GACtB,IAEI6K,EAAKC,EAFLtB,EAAIxJ,EAAEwJ,EAAI5F,KAAKlC,GACfkJ,EAAI5K,EAAE4K,EAAIhH,KAAKhC,GAGnB,GAAIgC,KAAKkD,OACPgE,EAAM7M,EAAU,EAAIC,KAAKgM,KAAKhM,KAAK+M,KAAKL,GAAKhH,KAAK9D,EAAI8D,KAAK9B,UACtD,CACL,IAAIiI,EAAK7L,KAAK+M,KAAKL,GAAKhH,KAAK9D,EAAI8D,KAAK9B,KAGtC,IAAa,QAFbgJ,EAAMI,EAAMtH,KAAK6G,EAAGV,IAGlB,OAAO,KAOX,OAHAc,EAAME,EAAWnH,KAAK7C,MAAQyI,GAAK5F,KAAK9D,EAAI8D,KAAK9B,KACjD9B,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,WAAY,wCAAyC,eAAgB,4BAA6B,SFhFtH,CACEZ,KAXK,aAYL3M,QAASwM,EACTvM,QAASuM,EACTe,MALiB,CAAC,UAAW,cCN3B,EAAQ,GACRC,EAAY,GAEhB,SAASC,EAAIlL,EAAM5D,GACjB,IAAIM,EAAMuO,EAAUtO,OAEpB,OAAKqD,EAAKgL,OAKVC,EAAUvO,GAAOsD,EACjBA,EAAKgL,MAAMjE,SAAQ,SAAUoE,GAC3B,EAAMA,EAAErM,eAAiBpC,KAEpB+G,OARLkE,QAAQC,IAAIxL,IACL,GAyBX,OACEgP,MAJK,WACLjB,EAAMpD,QAAQmE,IAIdA,IAAKA,EACLG,IAjBK,SAAa1G,GAClB,IAAKA,EACH,OAAO,EAGT,IAAIwG,EAAIxG,EAAK7F,cAEb,YAAwB,IAAb,EAAMqM,IAAsBF,EAAU,EAAME,IAC9CF,EAAU,EAAME,SADzB,IE7BE,EAAU,CAEd,MAAgB,CACdxL,EAAG,QACHO,GAAI,QACJoL,YAAa,cAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,QACJoL,YAAa,6BAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,cACJoL,YAAa,wBAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,QACJoL,YAAa,YAEf,KAAe,CACb3L,EAAG,YACHkC,EAAG,WACHyJ,YAAa,aAEf,KAAe,CACb3L,EAAG,QACHO,GAAI,OACJoL,YAAa,uBAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,OACJoL,YAAa,4BAEf,SAAmB,CACjB3L,EAAG,YACHkC,EAAG,YACHyJ,YAAa,iBAEf,OAAiB,CACf3L,EAAG,WACHO,GAAI,IACJoL,YAAa,8BAEf,QAAkB,CAChB3L,EAAG,QACHO,GAAI,OACJoL,YAAa,mCAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,cACJoL,YAAa,qBAEf,OAAiB,CACf3L,EAAG,YACHO,GAAI,YACJoL,YAAa,eAEf,SAAmB,CACjB3L,EAAG,YACHO,GAAI,YACJoL,YAAa,yBAEf,OAAiB,CACf3L,EAAG,UACHkC,EAAG,UACHyJ,YAAa,eAEf,OAAiB,CACf3L,EAAG,YACHO,GAAI,SACJoL,YAAa,oBAEf,OAAiB,CACf3L,EAAG,kBACHO,GAAI,kBACJoL,YAAa,eAEf,IAAc,CACZ3L,EAAG,UACHO,GAAI,OACJoL,YAAa,mCAEf,OAAiB,CACf3L,EAAG,QACHO,GAAI,MACJoL,YAAa,2BAEf,QAAkB,CAChB3L,EAAG,WACHO,GAAI,SACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,YACHO,GAAI,SACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,YACHO,GAAI,SACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,YACHO,GAAI,SACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,YACHO,GAAI,SACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,YACHO,GAAI,SACJoL,YAAa,6BAEf,QAAkB,CAChB3L,EAAG,QACHO,GAAI,MACJoL,YAAa,gCAEf,SAAmB,CACjB3L,EAAG,QACHO,GAAI,MACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,QACHO,GAAI,MACJoL,YAAa,gBAEf,QAAkB,CAChB3L,EAAG,QACHO,GAAI,MACJoL,YAAa,gBAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,IACJoL,YAAa,SAEf,KAAe,CACb3L,EAAG,QACHO,GAAI,IACJoL,YAAa,gCAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,OACJoL,YAAa,cAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,QACJoL,YAAa,cAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,IACJoL,YAAa,mBAEf,SAAmB,CACjB3L,EAAG,UACHkC,EAAG,UACHyJ,YAAa,0BAEf,QAAkB,CAChB3L,EAAG,QACHO,GAAI,QACJoL,YAAa,yBAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,MACJoL,YAAa,oBAEf,OAAiB,CACf3L,EAAG,QACHkC,EAAG,aACHyJ,YAAa,kBAEf,QAAkB,CAChB3L,EAAG,QACHkC,EAAG,aACHyJ,YAAa,WAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,MACJoL,YAAa,UAEf,MAAgB,CACd3L,EAAG,QACHO,GAAI,OACJoL,YAAa,UAEf,KAAe,CACb3L,EAAG,QACHO,GAAI,OACJoL,YAAa,WAEJzD,EAAQ,EAAQA,MAAQ,CACjClI,EAAG,QACHO,GAAI,cACJoL,YAAa,UAEf,EAAQ3E,OAAS,CACfhH,EAAG,QACHkC,EAAG,QACHyJ,YAAa,6BCvNf,IAAI,EAAU,GAEd,EAAQC,MAAQ,CACdnJ,QAAS,QACToJ,QAAS,QACTC,UAAW,SAEb,EAAQC,OAAS,CACftJ,QAAS,yBACToJ,QAAS,SACTC,UAAW,SAEb,EAAQE,OAAS,CACfvJ,QAAS,uBACToJ,QAAS,QACTC,UAAW,wCAEb,EAAQG,MAAQ,CACdxJ,QAAS,QACToJ,QAAS,QACTC,UAAW,6BAEb,EAAQI,MAAQ,CACdpJ,SAAU,2CACV+I,QAAS,SACTC,UAAW,6BAEb,EAAQK,QAAU,CAChB1J,QAAS,0CACToJ,QAAS,SACTC,UAAW,+BAEb,EAAQM,SAAW,CACjB3J,QAAS,mBACToJ,QAAS,UACTC,UAAW,yBAEb,EAAQO,cAAgB,CACtB5J,QAAS,kDACToJ,QAAS,SACTC,UAAW,iBAEb,EAAQQ,OAAS,CACf7J,QAAS,qDACToJ,QAAS,OACTC,UAAW,kBAEb,EAAQS,MAAQ,CACd9J,QAAS,qDACToJ,QAAS,WACTC,UAAW,gBAEb,EAAQU,WAAa,CACnB/J,QAAS,yBACToJ,QAAS,OACTC,UAAW,cAEb,EAAQW,OAAS,CACfhK,QAAS,6CACToJ,QAAS,OACTC,UAAW,mCAEb,EAAQY,OAAS,CACfjK,QAAS,yDACToJ,QAAS,OACTC,UAAW,aAEb,EAAQa,OAAS,CACflK,QAAS,aACToJ,QAAS,SACTC,UAAW,kBAEb,EAAQc,SAAW,CACjBnK,QAAS,eACToJ,QAAS,SACTC,UAAW,YAEb,EAAQe,cAAgB,CACtBpK,QAAS,cACToJ,QAAS,SACTC,UAAW,yBAEb,EAAQgB,MAAQ,CACdrK,QAAS,wDACToJ,QAAS,OACTC,UAAW,8BC3Cb,MAxCA,SAAe/I,EAAWL,EAAc1C,EAAGkC,EAAGwI,EAAIqC,EAAKjK,GACrD,IAAI6B,EAAM,GAoCV,OAjCEA,EAAIqI,gBADY5D,IAAdrG,GAAyC,SAAdA,EtBAR,EAFF,EsBQjBL,IACFiC,EAAIjC,aAAeA,EAAa9C,IAAIY,YAER,IAAxBmE,EAAIjC,aAAa,IAAoC,IAAxBiC,EAAIjC,aAAa,IAAoC,IAAxBiC,EAAIjC,aAAa,KAC7EiC,EAAIqI,WtBfc,GsBkBhBrI,EAAIjC,aAAa1F,OAAS,IACA,IAAxB2H,EAAIjC,aAAa,IAAoC,IAAxBiC,EAAIjC,aAAa,IAAoC,IAAxBiC,EAAIjC,aAAa,IAAoC,IAAxBiC,EAAIjC,aAAa,KAC1GiC,EAAIqI,WtBnBY,EsBoBhBrI,EAAIjC,aAAa,IAAMxE,EACvByG,EAAIjC,aAAa,IAAMxE,EACvByG,EAAIjC,aAAa,IAAMxE,EACvByG,EAAIjC,aAAa,GAAKiC,EAAIjC,aAAa,GAAK,IAAY,KAK1DI,IACF6B,EAAIqI,WtB5BmB,EsB6BvBrI,EAAIsI,MAAQnK,GAGd6B,EAAI3E,EAAIA,EAER2E,EAAIzC,EAAIA,EACRyC,EAAI+F,GAAKA,EACT/F,EAAIoI,IAAMA,EACHpI,GClCLuI,EAAiB,GAqCrB,SAASC,EAAmB7I,GAC1B,GAAqB,IAAjBA,EAAMtH,OACR,OAAO,KAGT,IAAIoQ,EAAwB,MAAb9I,EAAM,GAMrB,OAJI8I,IACF9I,EAAQA,EAAMyC,MAAM,IAGR,SAAVzC,EACK,CACLU,KAAM,OACNqI,WAAYD,EACZE,KAAM,KACNC,QAAQ,GAIL,CACLvI,KAAMV,EACN+I,WAAYD,EACZE,KAAMJ,EAAe5I,IAAU,KAC/BiJ,QAAQ,GAIZ,SAASC,EAAiBC,GACxB,OAAOA,EAAU,KAAOrP,KAAKC,GAAK,IAgCpC,SAASqP,EAAaC,EAAMlC,EAAOmC,GACjC,OAAOC,OAAOC,aAAalG,MAAM,KAAM,IAAImG,WAAWJ,EAAKK,OAAOjH,MAAM0E,EAAOmC,KAyBjF,SAASK,GAASC,GAChB,OAAOA,EAAMtO,KAAI,SAAUuO,GACzB,MAAO,CAACX,EAAiBW,EAAEC,gBAAiBZ,EAAiBW,EAAEE,mBAInE,SAASC,GAAeX,EAAMY,EAAQC,GACpC,MAAO,CACLxJ,KAAM0I,EAAaC,EAAMY,EAAS,EAAGA,EAAS,IAAIzO,OAClD2O,OAAQf,EAAaC,EAAMY,EAAS,GAAIA,EAAS,GAAK,GAAGzO,OACzD4O,cAAef,EAAKgB,WAAWJ,EAAS,GAAIC,GAC5CI,cAAejB,EAAKgB,WAAWJ,EAAS,GAAIC,GAC5CK,eAAgBlB,EAAKgB,WAAWJ,EAAS,IAAKC,GAC9CM,eAAgBnB,EAAKgB,WAAWJ,EAAS,IAAKC,GAC9CO,iBAAkBpB,EAAKgB,WAAWJ,EAAS,IAAKC,GAChDQ,kBAAmBrB,EAAKgB,WAAWJ,EAAS,IAAKC,GACjDS,cAAetB,EAAKuB,SAASX,EAAS,IAAKC,IAI/C,SAASW,GAAcxB,EAAMY,EAAQa,EAAYZ,GAK/C,IAJA,IAAIa,EAAcd,EAAS,IAEvBe,EAAmB,GAEd7S,EAAI,EAAGA,EAAI2S,EAAWH,cAAexS,IAAK,CACjD,IAAI8S,EAAS,CACXlB,cAAeV,EAAK6B,WAAWH,EALZ,GAK0B5S,EAAsB+R,GACnEJ,eAAgBT,EAAK6B,WAAWH,EANb,GAM2B5S,EAAuB,EAAG+R,GACxEiB,iBAAkB9B,EAAK6B,WAAWH,EAPf,GAO6B5S,EAAuB,EAAG+R,GAC1EkB,kBAAmB/B,EAAK6B,WAAWH,EARhB,GAQ8B5S,EAAuB,GAAI+R,IAE9Ec,EAAiBnP,KAAKoP,GAGxB,OAAOD,EC3JT,SAASK,GAAWC,EAASC,GAC3B,KAAM/L,gBAAgB6L,IACpB,OAAO,IAAIA,GAAWC,GAGxBC,EAAWA,GAAY,SAAUC,GAC/B,GAAIA,EACF,MAAMA,GAIV,IAAIC,EAAOC,EAAUJ,GAErB,GAAoB,iBAATG,EAAX,CAKA,IAAIE,EAAUN,GAAWO,YAAYxE,IAAIqE,EAAK3S,UAE9C,GAAK6S,EAAL,CAKA,GAAIF,EAAKhN,WAAgC,SAAnBgN,EAAKhN,UAAsB,CAC/C,IAAIoN,EAAWrR,EAAM,EAAOiR,EAAKhN,WAE7BoN,IACFJ,EAAKrN,aAAeqN,EAAKrN,eAAiByN,EAAS1N,QAAU0N,EAAS1N,QAAQ9C,MAAM,KAAO,MAC3FoQ,EAAK9I,MAAQkJ,EAAStE,QACtBkE,EAAKjE,UAAYqE,EAASrE,UAAYqE,EAASrE,UAAYiE,EAAKhN,WAIpEgN,EAAK/N,GAAK+N,EAAK/N,IAAM,EACrB+N,EAAKzS,KAAOyS,EAAKzS,MAAQ,MACzByS,EAAK9I,MAAQ8I,EAAK9I,OAAS,QAC3B8I,EAAKnP,KAAOmP,EAAKnP,MAAQmP,EAAKrP,KAE9B,IC9C2BV,EAAGkC,EAAOE,EACjCgO,EAEAC,EAEA3F,EAEAC,EDuCA2F,ECrBC,SAAgBtQ,EAAGkC,EAAG3B,EAAI0G,EAAOD,GACtC,IAAKhH,EAAG,CAEN,IAAI6L,EAAU/M,EAAM,EAAWmI,GAE1B4E,IACHA,EAAU3D,GAGZlI,EAAI6L,EAAQ7L,EACZkC,EAAI2J,EAAQ3J,EACZ3B,EAAKsL,EAAQtL,GAYf,OATIA,IAAO2B,IACTA,GAAK,EAAM,EAAM3B,GAAMP,IAGd,IAAPO,GAAYnC,KAAKuL,IAAI3J,EAAIkC,GAAK5D,KAChC0I,GAAS,EACT9E,EAAIlC,GAGC,CACLA,EAAGA,EACHkC,EAAGA,EACH3B,GAAIA,EACJyG,OAAQA,GDNI,CAAU+I,EAAK/P,EAAG+P,EAAK7N,EAAG6N,EAAKxP,GAAIwP,EAAK9I,MAAO8I,EAAK/I,QAC9DuJ,GC/CuBvQ,ED+CDsQ,EAAQtQ,EC/CJkC,ED+COoO,EAAQpO,EAAGoO,EAAQ/P,GC/CnB6B,ED+CuB2N,EAAK3N,IC1C7DsI,IAJA0F,EAAKpQ,EAAIA,IAETqQ,EAAKnO,EAAIA,IAEQkO,EAEjBzF,EAAI,EAEJvI,GAEFgO,GADApQ,GAAK,EAAI0K,GzBGM,mByBHQA,GzBMV,mBAGA,oByBTsBA,KAC1B1K,EACT0K,EAAK,GAELC,EAAIvM,KAAKqL,KAAKiB,GAKT,CACLA,GAAIA,EACJC,EAAGA,EACHoC,KALSqD,EAAKC,GAAMA,ID+BlBvN,EDnBC,SAAqBA,GAE1B,YAAiBsG,IAAbtG,EACK,KAGGA,EAASnD,MAAM,KACdC,IAAIuN,GCYFqD,CAAYT,EAAKjN,UAC5B2N,EAAWV,EAAKzP,OAAS,EAAMyP,EAAKhN,UAAWgN,EAAKrN,aAAc4N,EAAQtQ,EAAGsQ,EAAQpO,EAAGqO,EAAI7F,GAAI6F,EAAIxD,IAAKjK,GAC7G4N,EAAO5M,KAAMiM,GAEbW,EAAO5M,KAAMmM,GAGbnM,KAAK9D,EAAIsQ,EAAQtQ,EACjB8D,KAAK5B,EAAIoO,EAAQpO,EACjB4B,KAAKvD,GAAK+P,EAAQ/P,GAClBuD,KAAKkD,OAASsJ,EAAQtJ,OAEtBlD,KAAK4G,GAAK6F,EAAI7F,GACd5G,KAAK6G,EAAI4F,EAAI5F,EACb7G,KAAKiJ,IAAMwD,EAAIxD,IAEfjJ,KAAKxD,MAAQmQ,EAEb3M,KAAK2G,OAELoF,EAAS,KAAM/L,WAzCb+L,EAASD,QAPTC,EAASD,GAmDbD,GAAWO,YAAcA,EACzBP,GAAWO,YAAYzE,QACvB,UE3CO,SAASkF,GAAqBzQ,EAAGwK,EAAI1K,GAC1C,IAII4Q,EAGAC,EAGAC,EAGAC,EAbAC,EAAY9Q,EAAEwJ,EACduH,EAAW/Q,EAAE4K,EACboG,EAAShR,EAAEiR,EAAIjR,EAAEiR,EAAI,EAoBzB,GAAIF,GAAY9S,GAAW8S,GAAY,MAAQ9S,EAC7C8S,GAAY9S,OACP,GAAI8S,EAAW9S,GAAW8S,EAAW,MAAQ9S,EAClD8S,EAAW9S,MACN,IAAI8S,GAAY9S,EAGrB,MAAO,CACLuL,GAAI0H,EAAAA,EACJtG,GAAIsG,EAAAA,EACJD,EAAGjR,EAAEiR,GAEF,GAAIF,EAAW9S,EAEpB,MAAO,CACLuL,EAAG0H,EAAAA,EACHtG,EAAGsG,EAAAA,EACHD,EAAGjR,EAAEiR,GAYT,OARIH,EAAY5S,KAAKC,KACnB2S,GAAa,EAAI5S,KAAKC,IAGxBwS,EAAUzS,KAAKiM,IAAI4G,GACnBF,EAAU3S,KAAKwM,IAAIqG,GACnBH,EAAWD,EAAUA,EAEd,CACLnH,IAFFkH,EAAK5Q,EAAI5B,KAAKqL,KAAK,EAAQiB,EAAKoG,IAErBI,GAAUH,EAAU3S,KAAKwM,IAAIoG,GACtClG,GAAI8F,EAAKM,GAAUH,EAAU3S,KAAKiM,IAAI2G,GACtCG,GAAIP,GAAM,EAAIlG,GAAMwG,GAAUL,GAI3B,SAASQ,GAAqBnR,EAAGwK,EAAI1K,EAAGkC,GAI7C,IAGIoP,EAGAC,EAGAC,EAGAC,EAGAC,EACAC,EACAC,EAGAC,EAGAC,EAGAC,EAGAC,EAGAC,EAGAC,EAOAlB,EAEAE,EA5CAiB,EAAQ,MAsCRC,EAAIlS,EAAEwJ,EACN2I,EAAInS,EAAE4K,EACNwH,EAAIpS,EAAEiR,EAAIjR,EAAEiR,EAAI,EASpB,GAJAG,EAAIlT,KAAKqL,KAAK2I,EAAIA,EAAIC,EAAIA,GAC1Bd,EAAKnT,KAAKqL,KAAK2I,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAG/BhB,EAAItR,EAAImS,GAMV,GAJAnB,EAAY,EAIRO,EAAKvR,EAAImS,EAGX,OAFWhU,EACX+S,GAAUhP,EACH,CACLwH,EAAGxJ,EAAEwJ,EACLoB,EAAG5K,EAAE4K,EACLqG,EAAGjR,EAAEiR,QAMTH,EAAY5S,KAAKmU,MAAMF,EAAGD,GAa5BZ,EAAKc,EAAIf,EAGTM,GAFAJ,EAAKH,EAAIC,IAEK,EAAM7G,IADpBgH,EAAK,EAAMtT,KAAKqL,KAAK,EAAMiB,GAAM,EAAMA,GAAM+G,EAAKA,IAElDK,EAAQN,EAAKE,EACbQ,EAAO,EAIP,GACEA,IAKAP,EAAKjH,GAJLkH,EAAK5R,EAAI5B,KAAKqL,KAAK,EAAMiB,EAAKoH,EAAQA,KAItBF,GADhBV,EAASI,EAAIO,EAAQS,EAAIR,EAAQF,GAAM,EAAMlH,EAAKoH,EAAQA,KAK1DG,GADAD,EAAOR,GAFPE,EAAK,EAAMtT,KAAKqL,KAAK,EAAMkI,GAAM,EAAMA,GAAMF,EAAKA,KAGnCI,GAFfE,EAAON,GAAM,EAAME,GAAMD,GAEKI,EAC9BD,EAAQE,EACRD,EAAQE,QACDC,EAAQA,EArGJE,OAqGsBD,EApGrB,IAyGd,MAAO,CACLxI,EAAGsH,EACHlG,EAHS1M,KAAKgM,KAAK4H,EAAO5T,KAAKuL,IAAIoI,IAInCZ,EAAGD,GC1MP,SAASsB,GAAYrM,GACnB,O3BLsB,I2BKfA,G3BJe,I2BIQA,EAGjB,SAAS,GAAC+C,EAAQuJ,EAAMC,GAErC,GDPK,SAAuBxJ,EAAQuJ,GACpC,OAAIvJ,EAAO8D,aAAeyF,EAAKzF,cAEpB9D,EAAOlJ,IAAMyS,EAAKzS,GAAK5B,KAAKuL,IAAIT,EAAOwB,GAAK+H,EAAK/H,IAAM,S1BN5C,I0BUXxB,EAAO8D,WACT9D,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,G1BVtI,I0BWXwG,EAAO8D,YACT9D,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,IAAMwG,EAAOxG,aAAa,KAAO+P,EAAK/P,aAAa,ICHpWiQ,CAAczJ,EAAQuJ,GACxB,OAAOC,EAMT,G3BZuB,I2BYnBxJ,EAAO8D,Y3BZY,I2BYkByF,EAAKzF,WAC5C,OAAO0F,EAIT,IAAIE,EAAW1J,EAAOlJ,EAClB6S,EAAY3J,EAAOwB,GAEvB,G3BvByB,I2BuBrBxB,EAAO8D,WAA8B,CAGvC,GAAsB,IAFF8F,GAAe5J,GAAQ,EAAOwJ,GAGhD,OAGFE,EAAW5U,EACX6U,EAAY5U,EAGd,IAAI8U,EAASN,EAAKzS,EACdgT,EAASP,EAAKvQ,EACd+Q,EAAUR,EAAK/H,GASnB,G3B7CyB,I2BsCrB+H,EAAKzF,aACP+F,EAAS/U,EACTgV,E3BjC6B,Y2BkC7BC,EAAUhV,GAIR4U,IAAcI,GAAWL,IAAaG,IAAWP,GAAYtJ,EAAO8D,cAAgBwF,GAAYC,EAAKzF,YACvG,OAAO0F,EAgBT,IAZAA,EAAQ/B,GAAqB+B,EAAOG,EAAWD,GAE3CJ,GAAYtJ,EAAO8D,cACrB0F,EDqKG,SAA2BxS,EAAG8M,EAAYtK,GAC/C,G1B7NsB,I0B6NlBsK,EAGF,MAAO,CACLtD,EAAGxJ,EAAEwJ,EAAIhH,EAAa,GACtBoI,EAAG5K,EAAE4K,EAAIpI,EAAa,GACtByO,EAAGjR,EAAEiR,EAAIzO,EAAa,IAEnB,G1BpOe,I0BoOXsK,EAA2B,CACpC,IAAIkG,EAAQxQ,EAAa,GACrByQ,EAAQzQ,EAAa,GACrB0Q,EAAQ1Q,EAAa,GACrB2Q,EAAQ3Q,EAAa,GACrB4Q,EAAQ5Q,EAAa,GACrB6Q,EAAQ7Q,EAAa,GACrB8Q,EAAO9Q,EAAa,GAGxB,MAAO,CACLgH,EAAG8J,GAAQtT,EAAEwJ,EAAI6J,EAAQrT,EAAE4K,EAAIwI,EAAQpT,EAAEiR,GAAK+B,EAC9CpI,EAAG0I,GAAQD,EAAQrT,EAAEwJ,EAAIxJ,EAAE4K,EAAIuI,EAAQnT,EAAEiR,GAAKgC,EAC9ChC,EAAGqC,IAASF,EAAQpT,EAAEwJ,EAAI2J,EAAQnT,EAAE4K,EAAI5K,EAAEiR,GAAKiC,IC3LzCK,CAAkBf,EAAOxJ,EAAO8D,WAAY9D,EAAOxG,eAGzD8P,GAAYC,EAAKzF,cACnB0F,EDiMG,SAA6BxS,EAAG8M,EAAYtK,GACjD,G1B7PsB,I0B6PlBsK,EAGF,MAAO,CACLtD,EAAGxJ,EAAEwJ,EAAIhH,EAAa,GACtBoI,EAAG5K,EAAE4K,EAAIpI,EAAa,GACtByO,EAAGjR,EAAEiR,EAAIzO,EAAa,IAEnB,G1BpQe,I0BoQXsK,EAA2B,CACpC,IAAIkG,EAAQxQ,EAAa,GACrByQ,EAAQzQ,EAAa,GACrB0Q,EAAQ1Q,EAAa,GACrB2Q,EAAQ3Q,EAAa,GACrB4Q,EAAQ5Q,EAAa,GACrB6Q,EAAQ7Q,EAAa,GACrB8Q,EAAO9Q,EAAa,GACpBgR,GAASxT,EAAEwJ,EAAIwJ,GAASM,EACxBG,GAASzT,EAAE4K,EAAIqI,GAASK,EACxBI,GAAS1T,EAAEiR,EAAIiC,GAASI,EAG5B,MAAO,CACL9J,EAAGgK,EAAQH,EAAQI,EAAQL,EAAQM,EACnC9I,GAAIyI,EAAQG,EAAQC,EAAQN,EAAQO,EACpCzC,EAAGmC,EAAQI,EAAQL,EAAQM,EAAQC,IC1N7BC,CAAoBnB,EAAOD,EAAKzF,WAAYyF,EAAK/P,eAG3DgQ,EAAQrB,GAAqBqB,EAAOO,EAASF,EAAQC,G3B5D5B,I2B8DrBP,EAAKzF,aAGqB,IAFF8F,GAAeL,GAAM,EAAMC,GAGnD,OAIJ,OAAOA,EAEF,SAASI,GAAe5J,EAAQnL,EAAS2U,GAC9C,GAAqB,OAAjBxJ,EAAO+D,OAA0C,IAAxB/D,EAAO+D,MAAMjQ,OAExC,OADAgL,QAAQC,IAAI,+BACJ,EAcV,IAXA,IAAIlC,EAAQ,CACV2D,GAAIgJ,EAAMhJ,EACVoB,EAAG4H,EAAM5H,GAEPxH,EAAS,CACXoG,EAAGoK,OAAOC,IACVjJ,EAAGgJ,OAAOC,KAGRC,EAAiB,GAEZvX,EAAI,EAAGA,EAAIyM,EAAO+D,MAAMjQ,OAAQP,IAAK,CAC5C,IAAI6Q,EAAOpE,EAAO+D,MAAMxQ,GAGxB,GAFAuX,EAAe7T,KAAKmN,EAAKtI,MAErBsI,EAAKC,OAAQ,CACfjK,EAASyC,EACT,MAKF,GAFqBuH,EAAKD,UAER,OAAdC,EAAKA,KAAT,CASA,IAAI2G,EAAU3G,EAAKA,KAAK4G,SAAS,GAE7BC,GAAW/V,KAAKuL,IAAIsK,EAAQG,IAAI,IAAMhW,KAAKuL,IAAIsK,EAAQG,IAAI,KAAO,IAClEC,EAAOJ,EAAQK,GAAG,GAAKH,EACvBI,EAAON,EAAQK,GAAG,GAAKH,EACvBK,EAAOP,EAAQK,GAAG,IAAML,EAAQQ,IAAI,GAAK,GAAKR,EAAQG,IAAI,GAAKD,EAC/DO,EAAOT,EAAQK,GAAG,IAAML,EAAQQ,IAAI,GAAK,GAAKR,EAAQG,IAAI,GAAKD,EAEnE,KAAII,EAAOxO,EAAM+E,GAAKuJ,EAAOtO,EAAM2D,GAAKgL,EAAO3O,EAAM+E,GAAK0J,EAAOzO,EAAM2D,IAIvEpG,EAASqR,GAAkB5O,EAAOhI,EAASkW,GAEtCW,MAAMtR,EAAOoG,KAChB,WAvBA,GAAI4D,EAAKD,UAEP,OADArF,QAAQC,IAAI,kCAAoCqF,EAAKtI,KAAO,MACpD,EAyBd,OAAI4P,MAAMtR,EAAOoG,IACf1B,QAAQC,IAAI,oDAAsDlC,EAAM2D,EAAIlL,EAAM,IAAMuH,EAAM+E,EAAItM,EAAM,YAAcwV,EAAiB,MAC/H,IAGVtB,EAAMhJ,GAAKpG,EAAOoG,EAClBgJ,EAAM5H,EAAIxH,EAAOwH,EACV,GAGT,SAAS6J,GAAkBE,EAAK9W,EAAS+W,GACvC,IAAIC,EAAM,CACRrL,EAAGoK,OAAOC,IACVjJ,EAAGgJ,OAAOC,KAGZ,GAAIa,MAAMC,EAAInL,GACZ,OAAOqL,EAGT,IAAIC,EAAK,CACPtL,EAAGmL,EAAInL,EACPoB,EAAG+J,EAAI/J,GAETkK,EAAGtL,GAAKoL,EAAGR,GAAG,GACdU,EAAGlK,GAAKgK,EAAGR,GAAG,GACdU,EAAGtL,EAAIuB,EAAW+J,EAAGtL,EAAItL,KAAKC,IAAMD,KAAKC,GACzC,IAAI4W,EAAIC,GAAeF,EAAIF,GAE3B,GAAI/W,EAAS,CACX,GAAI6W,MAAMK,EAAEvL,GACV,OAAOqL,EAGTE,EAAEvL,EAAIsL,EAAGtL,EAAIuL,EAAEvL,EACfuL,EAAEnK,EAAIkK,EAAGlK,EAAImK,EAAEnK,EACf,IAEIqK,EAAKf,EAFL3X,EAAI,EAIR,EAAG,CAGD,GAFA2X,EAAMc,GAAeD,EAAGH,GAEpBF,MAAMR,EAAI1K,GAAI,CAChB1B,QAAQC,IAAI,6FACZ,MAGFkN,EAAM,CACJzL,EAAGsL,EAAGtL,GAAK0K,EAAI1K,EAAIuL,EAAEvL,GACrBoB,EAAGkK,EAAGlK,GAAKsJ,EAAItJ,EAAImK,EAAEnK,IAEvBmK,EAAEvL,GAAKyL,EAAIzL,EACXuL,EAAEnK,GAAKqK,EAAIrK,QACJrO,KAAO2B,KAAKuL,IAAIwL,EAAIzL,GAjBnB,OAiB+BtL,KAAKuL,IAAIwL,EAAIrK,GAjB5C,OAmBV,GAAIrO,EAAI,EAEN,OADAuL,QAAQC,IAAI,mDACL8M,EAGTA,EAAIrL,EAAIuB,EAAWgK,EAAEvL,EAAIoL,EAAGR,GAAG,IAC/BS,EAAIjK,EAAImK,EAAEnK,EAAIgK,EAAGR,GAAG,QAEfM,MAAMK,EAAEvL,KACXqL,EAAIrL,EAAImL,EAAInL,EAAIuL,EAAEvL,EAClBqL,EAAIjK,EAAI+J,EAAI/J,EAAImK,EAAEnK,GAItB,OAAOiK,EAGT,SAASG,GAAeL,EAAKC,GAC3B,IAgBIM,EAhBAH,EAAI,CACNvL,EAAGmL,EAAInL,EAAIoL,EAAGV,IAAI,GAClBtJ,EAAG+J,EAAI/J,EAAIgK,EAAGV,IAAI,IAEhBiB,EACCjX,KAAKkX,MAAML,EAAEvL,GADd2L,EAECjX,KAAKkX,MAAML,EAAEnK,GAEdyK,EACCN,EAAEvL,EAAI,EAAM2L,EADbE,EAECN,EAAEnK,EAAI,EAAMuK,EAEbN,EAAM,CACRrL,EAAGoK,OAAOC,IACVjJ,EAAGgJ,OAAOC,KAIZ,GAAIsB,EAAS,GAAKA,GAAUP,EAAGL,IAAI,GACjC,OAAOM,EAGT,GAAIM,EAAS,GAAKA,GAAUP,EAAGL,IAAI,GACjC,OAAOM,EAGTK,EAAMC,EAASP,EAAGL,IAAI,GAAKY,EAC3B,IAAIG,EACCV,EAAGW,IAAIL,GAAK,GADbI,EAECV,EAAGW,IAAIL,GAAK,GAEjBA,IACA,IAAIM,EACCZ,EAAGW,IAAIL,GAAK,GADbM,EAECZ,EAAGW,IAAIL,GAAK,GAEjBA,GAAON,EAAGL,IAAI,GACd,IAAIkB,EACCb,EAAGW,IAAIL,GAAK,GADbO,EAECb,EAAGW,IAAIL,GAAK,GAEjBA,IACA,IAAIQ,EACCd,EAAGW,IAAIL,GAAK,GADbQ,EAECd,EAAGW,IAAIL,GAAK,GAEbS,EAAMN,EAASA,EACfO,EAAMP,GAAU,EAAMA,GACtBQ,GAAO,EAAMR,IAAW,EAAMA,GAC9BS,GAAO,EAAMT,GAAUA,EAG3B,OAFAR,EAAIrL,EAAIqM,EAAMP,EAAQM,EAAMJ,EAAQM,EAAMJ,EAAQC,EAAMF,EACxDZ,EAAIjK,EAAIiL,EAAMP,EAAQM,EAAMJ,EAAQM,EAAMJ,EAAQC,EAAMF,EACjDZ,EChQM,SAAS,GAACkB,EAAKC,EAAQxD,GACpC,IAGI7S,EAAGoV,EAAGxY,EAHN0Z,EAAMzD,EAAMhJ,EACZ0M,EAAM1D,EAAM5H,EACZuL,EAAM3D,EAAMvB,GAAK,EAEjBxM,EAAM,GAEV,IAAKlI,EAAI,EAAGA,EAAI,EAAGA,IACjB,IAAIyZ,GAAgB,IAANzZ,QAAuB2M,IAAZsJ,EAAMvB,EAyB/B,OArBU,IAAN1U,GACFoD,EAAIsW,EAGFlB,GADiC,IAA/B,KAAKhS,QAAQgT,EAAI3Y,KAAKb,IACpB,IAEA,KAES,IAANA,GACToD,EAAIuW,EAGFnB,GADiC,IAA/B,KAAKhS,QAAQgT,EAAI3Y,KAAKb,IACpB,IAEA,MAGNoD,EAAIwW,EACJpB,EAAI,KAGEgB,EAAI3Y,KAAKb,IACf,IAAK,IAQL,IAAK,IACHkI,EAAIsQ,GAAKpV,EACT,MANF,IAAK,IAQL,IAAK,IACH8E,EAAIsQ,IAAMpV,EACV,MAEF,IAAK,SACcuJ,IAAbsJ,EAAMuC,KACRtQ,EAAIwM,EAAItR,GAGV,MAEF,IAAK,SACcuJ,IAAbsJ,EAAMuC,KACRtQ,EAAIwM,GAAKtR,GAGX,MAEF,QAEE,OAAO,KAIb,OAAO8E,ECtEM,SAAS,GAAC2R,GACvB,IAAI3R,EAAM,CACR+E,EAAG4M,EAAM,GACTxL,EAAGwL,EAAM,IAWX,OARIA,EAAMtZ,OAAS,IACjB2H,EAAIwM,EAAImF,EAAM,IAGZA,EAAMtZ,OAAS,IACjB2H,EAAI4R,EAAID,EAAM,IAGT3R,ECTT,SAAS6R,GAAWC,GAClB,GAA+B,mBAApB3C,OAAO3M,SAAyB,CACzC,GAAI2M,OAAO3M,SAASsP,GAClB,OAGF,MAAM,IAAIC,UAAU,sCAGtB,GAAmB,iBAARD,GAAoBA,GAAQA,IAAQtP,SAASsP,GACtD,MAAM,IAAIC,UAAU,sCCJT,SAAS7Y,GAAUqL,EAAQuJ,EAAMC,EAAOiE,GACrD,IAAI/K,EAoBJ,GAlBIrH,MAAMC,QAAQkO,KAChBA,EAAQkE,GAAQlE,IDfL,SAAUA,GACvB8D,GAAW9D,EAAMhJ,GACjB8M,GAAW9D,EAAM5H,GCgBjB+L,CAAYnE,GAERxJ,EAAO5I,OAASmS,EAAKnS,OAb3B,SAAqB4I,EAAQuJ,GAC3B,O/BRsB,I+BQdvJ,EAAO5I,MAAM0M,Y/BPC,I+BO4B9D,EAAO5I,MAAM0M,aAAiD,UAAnByF,EAAK1P,Y/BR5E,I+BQsG0P,EAAKnS,MAAM0M,Y/BPjH,I+BO8IyF,EAAKnS,MAAM0M,aAAmD,UAArB9D,EAAOnG,UAYlL+T,CAAY5N,EAAQuJ,KAEpDC,EAAQ7U,GAAUqL,EADlB0C,EAAQ,IAAI,GAAK,SACgB8G,EAAOiE,GACxCzN,EAAS0C,GAIP+K,GAA+B,QAAhBzN,EAAO5L,OACxBoV,EAAQqE,GAAY7N,GAAQ,EAAOwJ,IAIb,YAApBxJ,EAAO9L,SACTsV,EAAQ,CACNhJ,EAAGgJ,EAAMhJ,EAAInL,EACbuM,EAAG4H,EAAM5H,EAAIvM,EACb4S,EAAGuB,EAAMvB,GAAK,QAahB,GAVIjI,EAAO1L,WACTkV,EAAQ,CACNhJ,EAAGgJ,EAAMhJ,EAAIR,EAAO1L,SACpBsN,EAAG4H,EAAM5H,EAAI5B,EAAO1L,SACpB2T,EAAGuB,EAAMvB,GAAK,MAIlBuB,EAAQxJ,EAAOnL,QAAQ2U,IAGrB,OAYJ,GAPIxJ,EAAOtG,iBACT8P,EAAMhJ,GAAKR,EAAOtG,gBAIpB8P,EAAQsE,GAAgB9N,EAAO5I,MAAOmS,EAAKnS,MAAOoS,GAoClD,OA7BID,EAAK7P,iBACP8P,EAAQ,CACNhJ,EAAGgJ,EAAMhJ,EAAI+I,EAAK7P,eAClBkI,EAAG4H,EAAM5H,EACTqG,EAAGuB,EAAMvB,GAAK,IAII,YAAlBsB,EAAKrV,SAEPsV,EAAQ,CACNhJ,EAAGgJ,EAAMhJ,EAAIlL,EACbsM,EAAG4H,EAAM5H,EAAItM,EACb2S,EAAGuB,EAAMvB,GAAK,IAIhBuB,EAAQD,EAAK3U,QAAQ4U,GAEjBD,EAAKjV,WACPkV,EAAQ,CACNhJ,EAAGgJ,EAAMhJ,EAAI+I,EAAKjV,SAClBsN,EAAG4H,EAAM5H,EAAI2H,EAAKjV,SAClB2T,EAAGuB,EAAMvB,GAAK,KAMhBwF,GAA6B,QAAdlE,EAAKnV,KACfyZ,GAAYtE,GAAM,EAAMC,GAG1BA,EClGT,IAAI9G,GAAQ,GAAK,SAEjB,SAASqL,GAAYC,EAAMC,EAAIC,EAAQT,GACrC,IAAIU,EAAkB1S,EAAK9H,EAE3B,OAAI0H,MAAMC,QAAQ4S,IAChBC,EAAmBxZ,GAAUqZ,EAAMC,EAAIC,EAAQT,IAAgB,CAC7DjN,EAAGqK,IACHjJ,EAAGiJ,KAGDqD,EAAOpa,OAAS,OACO,IAAdka,EAAKlS,MAAsC,YAAdkS,EAAKlS,WAAyC,IAAZmS,EAAGnS,MAAoC,YAAZmS,EAAGnS,KACpE,iBAAvBqS,EAAiBlG,EACnB,CAACkG,EAAiB3N,EAAG2N,EAAiBvM,EAAGuM,EAAiBlG,GAAGmG,OAAOF,EAAOG,OAAO,IAElF,CAACF,EAAiB3N,EAAG2N,EAAiBvM,EAAGsM,EAAO,IAAIE,OAAOF,EAAOG,OAAO,IAG3E,CAACF,EAAiB3N,EAAG2N,EAAiBvM,GAAGwM,OAAOF,EAAOG,OAAO,IAGhE,CAACF,EAAiB3N,EAAG2N,EAAiBvM,KAG/CnG,EAAM9G,GAAUqZ,EAAMC,EAAIC,EAAQT,GAGd,KAFpB9Z,EAAOD,OAAOC,KAAKua,IAEVpa,QAITH,EAAKuK,SAAQ,SAAUpI,GACrB,QAAyB,IAAdkY,EAAKlS,MAAsC,YAAdkS,EAAKlS,WAAyC,IAAZmS,EAAGnS,MAAoC,YAAZmS,EAAGnS,MACtG,GAAY,MAARhG,GAAuB,MAARA,GAAuB,MAARA,EAChC,YAGF,GAAY,MAARA,GAAuB,MAARA,EACjB,OAIJ2F,EAAI3F,GAAOoY,EAAOpY,MAdX2F,GAoBb,SAAS6S,GAAU3S,GACjB,OAAIA,aAAgB,GACXA,EAGLA,EAAK4S,MACA5S,EAAK4S,MAGP,GAAK5S,GAyCd,OAtCA,SAAe6S,EAAUC,EAAQC,GAC/BF,EAAWF,GAAUE,GACrB,IACI3Y,EADA8Y,GAAS,EAgBb,YAbsB,IAAXF,GACTA,EAASD,EACTA,EAAW9L,GACXiM,GAAS,SACoB,IAAbF,EAAOjO,GAAqBnF,MAAMC,QAAQmT,MAC1DC,EAAQD,EACRA,EAASD,EACTA,EAAW9L,GACXiM,GAAS,GAGXF,EAASH,GAAUG,GAEfC,EACKX,GAAYS,EAAUC,EAAQC,IAErC7Y,EAAM,CACJjB,QAAS,SAAiBsZ,EAAQT,GAChC,OAAOM,GAAYS,EAAUC,EAAQP,EAAQT,IAE/C5Y,QAAS,SAAiBqZ,EAAQT,GAChC,OAAOM,GAAYU,EAAQD,EAAUN,EAAQT,KAI7CkB,IACF9Y,EAAI0Y,MAAQE,GAGP5Y,ICnFP+Y,GAA4B,SAQ5BC,GAAyB,SACzBC,GAAI,GAEJC,GAAI,GAEJC,GAAI,GAEJC,GAAI,GAEJ7F,GAAI,GAER,IACExU,QAAS,GACTC,QA+BK,SAAiBqa,GACtB,IAAIC,EAAOC,GAAQC,GAAOH,EAAKI,gBAE/B,GAAIH,EAAKrN,KAAOqN,EAAKtN,IACnB,MAAO,CAACsN,EAAKtN,IAAKsN,EAAKrN,IAAKqN,EAAKtN,IAAKsN,EAAKrN,KAG7C,MAAO,CAACqN,EAAKI,KAAMJ,EAAKK,OAAQL,EAAKM,MAAON,EAAKO,MArCjDhC,QAAS,IAYJ,SAAS,GAAQtC,EAAIuE,GAG1B,OAFAA,EAAWA,GAAY,EA6SzB,SAAgBC,EAAKD,GAEnB,IAAIE,EAAW,QAAUD,EAAIE,QACzBC,EAAY,QAAUH,EAAII,SAC9B,OAAOJ,EAAIK,WAAaL,EAAIM,YAcXJ,EAdkCF,EAAIE,QAc7BE,EAdsCJ,EAAII,SAchCC,EAd0CL,EAAIK,WAe9EE,EAAUC,GAAkBH,GAC5BI,EAAYnb,KAAKkX,MAAM0D,EAAU,KACjCQ,EAASpb,KAAKkX,MAAM4D,EAAW,KAAU,GAuCtBO,EAtCAF,EAsCQG,EAtCGF,EAsCEG,EAtCMN,EAwCtCO,EAAQD,EAAO,EACfE,EAAY/B,GAA0BgC,WAAWF,GACjDG,EAAYhC,GAAuB+B,WAAWF,GAE9CI,EAASH,EAAYJ,EAAS,EAC9BQ,EAASF,EAAYL,EACrBQ,GAAW,EAEXF,EAAS1H,KACX0H,EAASA,EAAS1H,GAAI0F,GAAI,EAC1BkC,GAAW,IAGTF,IAAW/B,IAAK4B,EAAY5B,IAAK+B,EAAS/B,KAAM+B,EAAS/B,IAAK4B,EAAY5B,KAAMiC,IAClFF,KAGEA,IAAW9B,IAAK2B,EAAY3B,IAAK8B,EAAS9B,KAAM8B,EAAS9B,IAAK2B,EAAY3B,KAAMgC,MAClFF,IAEe/B,IACb+B,IAIAA,EAAS1H,KACX0H,EAASA,EAAS1H,GAAI0F,GAAI,GAGxBiC,EAAS9B,IACX8B,EAASA,EAAS9B,GAAIH,GAAI,EAC1BkC,GAAW,GAEXA,GAAW,GAGTD,IAAWhC,IAAK8B,EAAY9B,IAAKgC,EAAShC,KAAMgC,EAAShC,IAAK8B,EAAY9B,KAAMiC,IAClFD,KAGEA,IAAW/B,IAAK6B,EAAY7B,IAAK+B,EAAS/B,KAAM+B,EAAS/B,IAAK6B,EAAY7B,KAAMgC,MAClFD,IAEehC,IACbgC,IAIAA,EAAS9B,KACX8B,EAASA,EAAS9B,GAAIH,GAAI,GAGZnK,OAAOC,aAAakM,GAAUnM,OAAOC,aAAamM,IA9G8BlB,EAAS7V,OAAO6V,EAAS/b,OAAS,EAAG6b,GAAYI,EAAU/V,OAAO+V,EAAUjc,OAAS,EAAG6b,GAwD1L,IAAyBY,EAAQC,EAAKC,EAEhCC,EACAC,EACAE,EAEAC,EACAC,EACAC,EAlDN,IAAmBlB,EAASE,EAAUC,EAChCE,EACAE,EACAC,EAhUGW,CAuET,SAAiB7F,GACf,IAQI8F,EACAC,EAAGC,EAAGC,EAAGvC,EAAGwC,EAGZC,EACAC,EAbAC,EAAMrG,EAAGtJ,IACT4P,EAAOtG,EAAGvJ,IACV/K,EAAI,QAEJ6a,EAAa,UAEb7Y,EAAK,MAIL8Y,EAASC,GAASJ,GAClBK,EAAUD,GAASH,GAIvBF,EAAatc,KAAKkX,OAAOsF,EAAO,KAAO,GAAK,EAE/B,MAATA,IACFF,EAAa,IAIXC,GAAO,IAAQA,EAAM,IAAQC,GAAQ,GAAOA,EAAO,KACrDF,EAAa,IAIXC,GAAO,IAAQA,EAAM,KACnBC,GAAQ,GAAOA,EAAO,EACxBF,EAAa,GACJE,GAAQ,GAAOA,EAAO,GAC/BF,EAAa,GACJE,GAAQ,IAAQA,EAAO,GAChCF,EAAa,GACJE,GAAQ,IAAQA,EAAO,KAChCF,EAAa,KAQjBD,EAAgBM,GAJgB,GAAlBL,EAAa,GAAS,IAAM,GAK1CN,EAAkBS,GAAc,EAAIA,GACpCR,EAAIra,EAAI5B,KAAKqL,KAAK,EAAIoR,EAAazc,KAAKiM,IAAIyQ,GAAU1c,KAAKiM,IAAIyQ,IAC/DR,EAAIlc,KAAK4L,IAAI8Q,GAAU1c,KAAK4L,IAAI8Q,GAChCP,EAAIH,EAAkBhc,KAAKwM,IAAIkQ,GAAU1c,KAAKwM,IAAIkQ,GAClD9C,EAAI5Z,KAAKwM,IAAIkQ,IAAWE,EAAUP,GAClCD,EAAIxa,IAAM,EAAI6a,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,EAAIA,EAAaA,EAAaA,EAAa,KAAOC,GAAU,EAAID,EAAa,EAAI,EAAIA,EAAaA,EAAa,GAAK,GAAKA,EAAaA,EAAaA,EAAa,MAAQzc,KAAKiM,IAAI,EAAIyQ,IAAW,GAAKD,EAAaA,EAAa,IAAM,GAAKA,EAAaA,EAAaA,EAAa,MAAQzc,KAAKiM,IAAI,EAAIyQ,GAAU,GAAKD,EAAaA,EAAaA,EAAa,KAAOzc,KAAKiM,IAAI,EAAIyQ,IAClb,IAAIG,EAAajZ,EAAKqY,GAAKrC,GAAK,EAAIsC,EAAIC,GAAKvC,EAAIA,EAAIA,EAAI,GAAO,EAAI,GAAKsC,EAAIA,EAAIA,EAAI,GAAKC,EAAI,GAAKH,GAAmBpC,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAS,IAC/IkD,EAAclZ,GAAMwY,EAAIH,EAAIjc,KAAK4L,IAAI8Q,IAAW9C,EAAIA,EAAI,GAAK,EAAIsC,EAAI,EAAIC,EAAI,EAAIA,EAAIA,GAAKvC,EAAIA,EAAIA,EAAIA,EAAI,IAAQ,GAAK,GAAKsC,EAAIA,EAAIA,EAAI,IAAMC,EAAI,IAAMH,GAAmBpC,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,MAEnM2C,EAAM,IACRO,GAAe,KAIjB,MAAO,CACLhC,SAAU9a,KAAK+c,MAAMD,GACrBlC,QAAS5a,KAAK+c,MAAMF,GACpB9B,WAAYuB,EACZtB,WAAYgC,GAAoBT,IAtIpBU,CAAQ,CACpBrQ,IAAKsJ,EAAG,GACRvJ,IAAKuJ,EAAG,KACNuE,GAsBC,SAAS,GAAQT,GACtB,IAAIC,EAAOC,GAAQC,GAAOH,EAAKI,gBAE/B,OAAIH,EAAKrN,KAAOqN,EAAKtN,IACZ,CAACsN,EAAKtN,IAAKsN,EAAKrN,KAGlB,EAAEqN,EAAKI,KAAOJ,EAAKM,OAAS,GAAIN,EAAKO,IAAMP,EAAKK,QAAU,GAWnE,SAASqC,GAASO,GAChB,OAAOA,GAAOld,KAAKC,GAAK,KAW1B,SAASkd,GAASC,GAChB,OAAgBA,EAAMpd,KAAKC,GAApB,IAkGT,SAASia,GAAQQ,GACf,IAAIoC,EAAcpC,EAAII,SAClB+B,EAAanC,EAAIE,QACjBI,EAAaN,EAAIM,WACjBD,EAAaL,EAAIK,WAErB,GAAIA,EAAa,GAAKA,EAAa,GACjC,OAAO,KAGT,IAKIiB,EAEAqB,EAAIC,EAAIC,EAAIC,EAAIC,EAChBC,EACAC,EAAIC,EATJha,EAAK,MACLhC,EAAI,QAEJ6a,EAAa,UAGboB,GAAM,EAAI7d,KAAKqL,KAAK,aAAoB,EAAIrL,KAAKqL,KAAK,YAKtDC,EAAIuR,EAAa,IACjBnQ,EAAIoQ,EAKJ9B,EAAa,MACftO,GAAK,KAKPgR,EAAgC,GAAlB3C,EAAa,GAAS,IAAM,EAI1CiB,EAAkBS,oBAGlBmB,GADAD,EADIjR,EAAI9I,EACC,oBACO,EAAIia,EAAK,EAAI,GAAKA,EAAKA,EAAKA,EAAK,IAAM7d,KAAKiM,IAAI,EAAI0R,IAAO,GAAKE,EAAKA,EAAK,GAAK,GAAKA,EAAKA,EAAKA,EAAKA,EAAK,IAAM7d,KAAKiM,IAAI,EAAI0R,GAAM,IAAME,EAAKA,EAAKA,EAAK,GAAK7d,KAAKiM,IAAI,EAAI0R,GAExLN,EAAKzb,EAAI5B,KAAKqL,KAAK,EAAIoR,EAAazc,KAAKiM,IAAI2R,GAAW5d,KAAKiM,IAAI2R,IACjEN,EAAKtd,KAAK4L,IAAIgS,GAAW5d,KAAK4L,IAAIgS,GAClCL,EAAKvB,EAAkBhc,KAAKwM,IAAIoR,GAAW5d,KAAKwM,IAAIoR,GACpDJ,EAAS,UAAJ5b,EAAuB5B,KAAK2L,IAAI,EAAI8Q,EAAazc,KAAKiM,IAAI2R,GAAW5d,KAAKiM,IAAI2R,GAAU,KAC7FH,EAAInS,GAAK+R,EAAKzZ,GACd,IAAIgJ,EAAMgR,EAAUP,EAAKrd,KAAK4L,IAAIgS,GAAWJ,GAAMC,EAAIA,EAAI,GAAK,EAAI,EAAIH,EAAK,GAAKC,EAAK,EAAIA,EAAKA,EAAK,EAAIvB,GAAmByB,EAAIA,EAAIA,EAAIA,EAAI,IAAM,GAAK,GAAKH,EAAK,IAAMC,EAAK,GAAKD,EAAKA,EAAK,mBAAwB,EAAIC,EAAKA,GAAME,EAAIA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAC1P7Q,EAAMuQ,GAASvQ,GACf,IAEIkR,EAFAnR,GAAO8Q,GAAK,EAAI,EAAIH,EAAKC,GAAME,EAAIA,EAAIA,EAAI,GAAK,EAAI,EAAIF,EAAK,GAAKD,EAAK,EAAIC,EAAKA,EAAK,EAAIvB,EAAkB,GAAKsB,EAAKA,GAAMG,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,KAAOzd,KAAKwM,IAAIoR,GAInK,GAHAjR,EAAM+Q,EAAaP,GAASxQ,GAGxB+N,EAAID,SAAU,CAChB,IAAIsD,EAAW7D,GAAQ,CACrBY,SAAUJ,EAAII,SAAWJ,EAAID,SAC7BG,QAASF,EAAIE,QAAUF,EAAID,SAC3BO,WAAYN,EAAIM,WAChBD,WAAYL,EAAIK,aAElB+C,EAAS,CACPtD,IAAKuD,EAASnR,IACd2N,MAAOwD,EAASpR,IAChB2N,OAAQ1N,EACRyN,KAAM1N,QAGRmR,EAAS,CACPlR,IAAKA,EACLD,IAAKA,GAIT,OAAOmR,EAYT,SAASd,GAAoBpQ,GAG3B,IAAIoR,EAAmB,IA4CvB,OA1CI,IAAMpR,GAAOA,GAAO,GACtBoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,GAC5BoR,EAAmB,IACV,GAAKpR,GAAOA,GAAO,EAC5BoR,EAAmB,IACV,EAAIpR,GAAOA,GAAO,EAC3BoR,EAAmB,IACV,EAAIpR,GAAOA,IAAQ,EAC5BoR,EAAmB,KACT,EAAIpR,GAAOA,IAAQ,GAC7BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,GAC9BoR,EAAmB,KACT,GAAKpR,GAAOA,IAAQ,KAC9BoR,EAAmB,KAGdA,EA8CT,SAAS9C,GAAkB7c,GACzB,IAAI4c,EAAU5c,EA1XI,EAgYlB,OAJgB,IAAZ4c,IACFA,EA7XgB,GAgYXA,EAuFT,SAASd,GAAO8D,GACd,GAAIA,GAAoC,IAAtBA,EAAWrf,OAC3B,KAAM,mCASR,IANA,IAGIsf,EAHAtf,EAASqf,EAAWrf,OACpBuf,EAAO,KACPC,EAAK,GAEL/f,EAAI,GAEA,QAAQ4I,KAAKiX,EAAWD,EAAW1U,OAAOlL,KAAK,CACrD,GAAIA,GAAK,EACP,KAAM,kCAAoC4f,EAG5CG,GAAMF,EACN7f,IAGF,IAAI0c,EAAa7W,SAASka,EAAI,IAE9B,GAAU,IAAN/f,GAAWA,EAAI,EAAIO,EAGrB,KAAM,kCAAoCqf,EAG5C,IAAIjD,EAAaiD,EAAW1U,OAAOlL,KAEnC,GAAI2c,GAAc,KAAsB,MAAfA,GAAqC,MAAfA,GAAsBA,GAAc,KAAsB,MAAfA,GAAqC,MAAfA,EAC9G,KAAM,yBAA2BA,EAAa,iBAAmBiD,EAGnEE,EAAOF,EAAWI,UAAUhgB,EAAGA,GAAK,GAOpC,IANA,IAAIigB,EAAMpD,GAAkBH,GACxBwD,EAmDN,SAA4BhS,EAAG+R,GAG7B,IAAIE,EAAS9E,GAA0BgC,WAAW4C,EAAM,GACpDG,EAAe,IACfC,GAAe,EAEnB,KAAOF,IAAWjS,EAAEmP,WAAW,IAAI,CAWjC,KAVA8C,IAEe3E,IACb2E,IAGEA,IAAW1E,IACb0E,IAGEA,EAAStK,GAAG,CACd,GAAIwK,EACF,KAAM,kBAAoBnS,EAG5BiS,EAAS5E,GACT8E,GAAe,EAGjBD,GAAgB,IAGlB,OAAOA,EAjFQE,CAAmBR,EAAK5U,OAAO,GAAI+U,GAC9CM,EAoGN,SAA6BxR,EAAGkR,GAC9B,GAAIlR,EAAI,IACN,KAAM,oCAAsCA,EAK9C,IAAIyR,EAASlF,GAAuB+B,WAAW4C,EAAM,GACjDQ,EAAgB,EAChBJ,GAAe,EAEnB,KAAOG,IAAWzR,EAAEsO,WAAW,IAAI,CAajC,KAZAmD,IAEehF,IACbgF,IAGEA,IAAW/E,IACb+E,IAKEA,EAAS9E,GAAG,CACd,GAAI2E,EAEF,KAAM,kBAAoBtR,EAG5ByR,EAASjF,GACT8E,GAAe,EAGjBI,GAAiB,IAGnB,OAAOA,EAzISC,CAAoBZ,EAAK5U,OAAO,GAAI+U,GAI7CM,EAAYI,GAAehE,IAChC4D,GAAa,IAIf,IAAIK,EAAYrgB,EAASP,EAEzB,GAAI4gB,EAAY,GAAM,EACpB,KAAM,oKAAsKhB,EAG9K,IAGIiB,EAAeC,EAAkBC,EAHjCC,EAAMJ,EAAY,EAClBK,EAAa,EACbC,EAAc,EAalB,OAVIF,EAAM,IACRH,EAAgB,IAAWlf,KAAK2L,IAAI,GAAI0T,GACxCF,EAAmBlB,EAAWI,UAAUhgB,EAAGA,EAAIghB,GAC/CC,EAAald,WAAW+c,GAAoBD,EAC5CE,EAAoBnB,EAAWI,UAAUhgB,EAAIghB,GAC7CE,EAAcnd,WAAWgd,GAAqBF,GAKzC,CACLtE,QAHQ0E,EAAaf,EAIrBzD,SAHSyE,EAAcX,EAIvB5D,WAAYA,EACZD,WAAYA,EACZN,SAAUyE,GAoHd,SAASF,GAAehE,GACtB,IAAIF,EAEJ,OAAQE,GACN,IAAK,IACHF,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,EACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,IAAK,IACHA,EAAW,IACX,MAEF,IAAK,IACHA,EAAW,KACX,MAEF,QACEA,GAAY,EAGhB,GAAIA,GAAY,EACd,OAAOA,EAEP,KAAM,wBAA0BE,EClvBpC,SAASwE,GAAMlU,EAAGoB,EAAGqG,GACnB,KAAMrN,gBAAgB8Z,IACpB,OAAO,IAAIA,GAAMlU,EAAGoB,EAAGqG,GAGzB,GAAI5M,MAAMC,QAAQkF,GAChB5F,KAAK4F,EAAIA,EAAE,GACX5F,KAAKgH,EAAIpB,EAAE,GACX5F,KAAKqN,EAAIzH,EAAE,IAAM,OACZ,GAAiB,iBAANA,EAChB5F,KAAK4F,EAAIA,EAAEA,EACX5F,KAAKgH,EAAIpB,EAAEoB,EACXhH,KAAKqN,EAAIzH,EAAEyH,GAAK,OACX,GAAiB,iBAANzH,QAA+B,IAANoB,EAAmB,CAC5D,IAAIsM,EAAS1N,EAAE/J,MAAM,KACrBmE,KAAK4F,EAAIlJ,WAAW4W,EAAO,GAAI,IAC/BtT,KAAKgH,EAAItK,WAAW4W,EAAO,GAAI,IAC/BtT,KAAKqN,EAAI3Q,WAAW4W,EAAO,GAAI,KAAO,OAEtCtT,KAAK4F,EAAIA,EACT5F,KAAKgH,EAAIA,EACThH,KAAKqN,EAAIA,GAAK,EAGhBnJ,QAAQ6V,KAAK,+DAGfD,GAAME,SAAW,SAAUC,GACzB,OAAO,IAAIH,GAAM,GAAQG,KAG3BH,GAAM1Y,UAAU8Y,OAAS,SAAUnF,GACjC,OAAO,GAAQ,CAAC/U,KAAK4F,EAAG5F,KAAKgH,GAAI+N,IAGnC,UCnCIoF,GAAM,QACNC,GAAM,UACNC,GAAM,gBAQK,SAAS,GAACzT,GACvB,IAAI0T,EAAK,GACTA,EAAG,GAdK,EAcM1T,GAbN,IAakBA,GAAMuT,GAAMvT,GAAMwT,GAAMxT,EAAKyT,MACvDC,EAAG,GAAK1T,GAVA,IAUYA,GAAMuT,GAAMvT,GAAMwT,GAAMxT,EAAKyT,MACjD,IAAIlJ,EAAIvK,EAAKA,EAKb,OAJA0T,EAAG,GAAKnJ,GAXA,OAWWvK,GAVX,oBACA,oBASuBA,IAC/BuK,GAAKvK,EACL0T,EAAG,GAAKnJ,GAVA,kBACA,oBASWvK,GACnB0T,EAAG,GAAKnJ,EAAIvK,EATJ,YAUD0T,ECrBM,SAAS,GAACvU,EAAKwU,EAAMC,EAAMF,GAGxC,OAFAE,GAAQD,EACRA,GAAQA,EACDD,EAAG,GAAKvU,EAAMyU,GAAQF,EAAG,GAAKC,GAAQD,EAAG,GAAKC,GAAQD,EAAG,GAAKC,EAAOD,EAAG,MCAlE,SAAS,GAACG,EAAK7T,EAAI0T,GAIhC,IAHA,IAAInc,EAAI,GAAK,EAAIyI,GACbb,EAAM0U,EAED9hB,EALI,GAKUA,IAAKA,EAAG,CAE7B,IAAI+hB,EAAIpgB,KAAKiM,IAAIR,GACboL,EAAI,EAAIvK,EAAK8T,EAAIA,EAMrB,GAFA3U,GADAoL,GAAKwJ,GAAQ5U,EAAK2U,EAAGpgB,KAAKwM,IAAIf,GAAMuU,GAAMG,IAAQtJ,EAAI7W,KAAKqL,KAAKwL,IAAMhT,EAGlE7D,KAAKuL,IAAIsL,GAAK3W,EAChB,OAAOuL,EAKX,OAAOA,ECgHF,IACP,IACEY,KAhIK,WACL3G,KAAKlC,QAAiBwH,IAAZtF,KAAKlC,GAAmBkC,KAAKlC,GAAK,EAC5CkC,KAAKhC,QAAiBsH,IAAZtF,KAAKhC,GAAmBgC,KAAKhC,GAAK,EAC5CgC,KAAK7C,WAAuBmI,IAAftF,KAAK7C,MAAsB6C,KAAK7C,MAAQ,EACrD6C,KAAKpD,UAAqB0I,IAAdtF,KAAKpD,KAAqBoD,KAAKpD,KAAO,EAE9CoD,KAAK4G,KACP5G,KAAKsa,GAAKM,GAAQ5a,KAAK4G,IACvB5G,KAAK6a,IAAMF,GAAQ3a,KAAKpD,KAAMtC,KAAKiM,IAAIvG,KAAKpD,MAAOtC,KAAKwM,IAAI9G,KAAKpD,MAAOoD,KAAKsa,MAyH/EtgB,QAjHK,SAAiBoC,GACtB,IAGIsJ,EACAE,EAAGoB,EAJHC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACR8T,EAAY3T,EAAWF,EAAMjH,KAAK7C,OAGlC4d,EAAUzgB,KAAKiM,IAAIW,GACnB8T,EAAU1gB,KAAKwM,IAAII,GAEvB,GAAKlH,KAAK4G,GA0BH,CACL,IAAIqU,EAAKD,EAAUF,EACfI,EAAM5gB,KAAK2L,IAAIgV,EAAI,GACnBE,EAAInb,KAAKiJ,IAAM3O,KAAK2L,IAAI+U,EAAS,GACjCI,EAAK9gB,KAAK2L,IAAIkV,EAAG,GACjBE,EAAK/gB,KAAKuL,IAAImV,GAAWxgB,EAAQF,KAAK4L,IAAIgB,GAAO,EACjDiK,EAAI7W,KAAK2L,IAAIoV,EAAI,GACjBlV,EAAK7L,KAAK2L,IAAIkL,EAAG,GACrBzL,EAAM,EAAI1F,KAAK4G,GAAKtM,KAAK2L,IAAI8U,EAAS,GACtCE,GAAU3gB,KAAKqL,KAAKD,GACpB,IAAI4V,EAAKX,GAAQzT,EAAK6T,EAASC,EAAShb,KAAKsa,IAC7C1U,EAAI5F,KAAK9D,GAAK8D,KAAK9B,GAAK+c,GAAM,EAAIC,EAAM,GAAK,EAAI/J,EAAIgK,EAAID,EAAM,IAAM,EAAI,GAAK/J,EAAIhL,EAAK,GAAKgV,EAAI,GAAKhK,EAAIgK,EAAID,EAAM,IAAM,GAAK,IAAM/U,EAAKA,EAAKgL,EAAI,IAAMA,OAASnR,KAAKlC,GACtKkJ,EAAIhH,KAAK9D,GAAK8D,KAAK9B,IAAMod,EAAKtb,KAAK6a,IAAME,EAAUD,EAAYG,EAAK,GAAK,EAAIC,EAAM,IAAM,EAAI/J,EAAI,EAAIgK,EAAI,EAAIC,EAAKF,EAAM,IAAM,GAAK/U,EAAK,GAAKgL,EAAI,IAAMgK,EAAI,IAAMhK,EAAIgK,EAAID,EAAM,IAAM,KAAO,IAAM/U,EAAKA,EAAKgL,EAAI,KAAOA,QAAUnR,KAAKhC,OAtC1N,CACZ,IAAII,EAAI4c,EAAU1gB,KAAKiM,IAAIuU,GAE3B,GAAIxgB,KAAKuL,IAAIvL,KAAKuL,IAAIzH,GAAK,GAAK5D,EAC9B,OAAO,GAMP,GAJAoL,EAAI,GAAM5F,KAAK9D,EAAI8D,KAAK9B,GAAK5D,KAAK6J,KAAK,EAAI/F,IAAM,EAAIA,IAAM4B,KAAKlC,GAChEkJ,EAAIgU,EAAU1gB,KAAKwM,IAAIgU,GAAaxgB,KAAKqL,KAAK,EAAIrL,KAAK2L,IAAI7H,EAAG,KAC9DA,EAAI9D,KAAKuL,IAAImB,KAEJ,EAAG,CACV,GAAI5I,EAAI,EAAI5D,EACV,OAAO,GAEPwM,EAAI,OAGNA,EAAI1M,KAAKihB,KAAKvU,GAGZE,EAAM,IACRF,GAAKA,GAGPA,EAAIhH,KAAK9D,EAAI8D,KAAK9B,IAAM8I,EAAIhH,KAAKpD,MAAQoD,KAAKhC,GAmBlD,OAFA5B,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA8DPnC,QAxDK,SAAiBmC,GACtB,IAAIsJ,EAAKK,EACLmB,EAAKD,EACLrB,GAAKxJ,EAAEwJ,EAAI5F,KAAKlC,KAAO,EAAIkC,KAAK9D,GAChC8K,GAAK5K,EAAE4K,EAAIhH,KAAKhC,KAAO,EAAIgC,KAAK9D,GAEpC,GAAK8D,KAAK4G,GAsBR,GAFAb,EAAMyV,GADN9V,EAAM1F,KAAK6a,IAAM7T,EAAIhH,KAAK9B,GACH8B,KAAK4G,GAAI5G,KAAKsa,IAEjChgB,KAAKuL,IAAIE,GAAO1L,EAAS,CAC3B,IAAI0gB,EAAUzgB,KAAKiM,IAAIR,GACnBiV,EAAU1gB,KAAKwM,IAAIf,GACnB0V,EAAUnhB,KAAKuL,IAAImV,GAAWxgB,EAAQF,KAAK4L,IAAIH,GAAO,EACtDoV,EAAInb,KAAKiJ,IAAM3O,KAAK2L,IAAI+U,EAAS,GACjCI,EAAK9gB,KAAK2L,IAAIkV,EAAG,GACjBhK,EAAI7W,KAAK2L,IAAIwV,EAAS,GACtBtV,EAAK7L,KAAK2L,IAAIkL,EAAG,GACrBzL,EAAM,EAAI1F,KAAK4G,GAAKtM,KAAK2L,IAAI8U,EAAS,GACtC,IAAIW,EAAI9V,EAAItL,KAAKqL,KAAKD,GAAO1F,KAAK9B,GAC9Byd,EAAKrhB,KAAK2L,IAAIyV,EAAG,GAErBxU,EAAMnB,GADNL,GAAY+V,GACME,GAAM,EAAI3b,KAAK4G,IAAM,IAAO,EAAI+U,EAAK,IAAM,EAAI,EAAIxK,EAAI,EAAIgK,EAAIhK,EAAIgK,EAAI,EAAIC,EAAKO,EAAK,IAAM,GAAK,GAAKxK,EAAI,IAAMgK,EAAIhK,EAAI,GAAKhL,EAAK,GAAKgV,EAAIQ,EAAK,IAAM,KAAO,KAAOxK,EAAI,KAAOhL,EAAK,KAAOA,EAAKgL,MACjNlK,EAAME,EAAWnH,KAAK7C,MAAQue,GAAK,EAAIC,EAAK,GAAK,EAAI,EAAIxK,EAAIgK,EAAIQ,EAAK,IAAM,EAAI,GAAKxK,EAAI,GAAKhL,EAAK,EAAIgV,EAAIhK,EAAI,EAAIgK,EAAIQ,EAAK,IAAM,GAAK,IAAMxK,EAAI,KAAOhL,EAAK,IAAMA,EAAKgL,MAAQ6J,QAEhL9T,EAAM7M,EAAUyL,EAAKkB,GACrBC,EAAM,MAtCI,CACZ,IAAI2U,EAAIthB,KAAK+M,IAAIzB,EAAI5F,KAAK9B,IACtB2d,EAAI,IAAOD,EAAI,EAAIA,GACnBE,EAAO9b,KAAKpD,KAAOoK,EAAIhH,KAAK9B,GAC5B6d,EAAIzhB,KAAKwM,IAAIgV,GACjBpW,EAAMpL,KAAKqL,MAAM,EAAIrL,KAAK2L,IAAI8V,EAAG,KAAO,EAAIzhB,KAAK2L,IAAI4V,EAAG,KACxD3U,EAAM5M,KAAK0hB,KAAKtW,GAEZsB,EAAI,IACNE,GAAOA,GAIPD,EADQ,IAAN4U,GAAiB,IAANE,EACP,EAEA5U,EAAW7M,KAAKmU,MAAMoN,EAAGE,GAAK/b,KAAK7C,OA6B7C,OAFAf,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,2BAA4B,6BCtIjC,SAAS,GAAC3B,GACvB,IAAIyE,EAAI/P,KAAK+M,IAAIzB,GAEjB,OADAyE,GAAKA,EAAI,EAAIA,GAAK,ECFL,SAAS,GAACzE,EAAGoB,GAC1BpB,EAAItL,KAAKuL,IAAID,GACboB,EAAI1M,KAAKuL,IAAImB,GACb,IAAI9K,EAAI5B,KAAK2hB,IAAIrW,EAAGoB,GAChB5I,EAAI9D,KAAK4hB,IAAItW,EAAGoB,IAAM9K,GAAQ,GAClC,OAAOA,EAAI5B,KAAKqL,KAAK,EAAIrL,KAAK2L,IAAI7H,EAAG,ICHxB,SAAS,GAACwH,GACvB,IAAIoB,EAAI1M,KAAKuL,IAAID,GAEjB,OADAoB,ECJa,SAAUpB,GACvB,IAAIoB,EAAI,EAAIpB,EACRyH,EAAIrG,EAAI,EACZ,OAAa,IAANqG,EAAUzH,EAAIA,EAAItL,KAAK6J,IAAI6C,GAAKqG,EDCnC8O,CAAOnV,GAAK,EAAIA,GAAKoV,GAAM,EAAGpV,GAAK,KAChCpB,EAAI,GAAKoB,EAAIA,EELP,SAAS,GAACqV,EAAIC,GAO3B,IANA,IAIIP,EAJAQ,EAAS,EAAIjiB,KAAKwM,IAAI,EAAIwV,GAC1B3jB,EAAI0jB,EAAGnjB,OAAS,EAChBsjB,EAAKH,EAAG1jB,GACR8jB,EAAK,IAGA9jB,GAAK,GACZojB,EAAUQ,EAASC,EAAdC,EAAmBJ,EAAG1jB,GAC3B8jB,EAAKD,EACLA,EAAKT,EAGP,OAAOO,EAAIP,EAAIzhB,KAAKiM,IAAI,EAAI+V,GCXf,SAAS,GAACD,EAAIK,EAAOC,GAelC,IAdA,IAWIC,EACAC,EAZAC,EAAYxiB,KAAKiM,IAAImW,GACrBK,EAAYziB,KAAKwM,IAAI4V,GACrBM,EAAaC,GAAKN,GAClBO,ECNS,SAAUtX,GACvB,IAAIyE,EAAI/P,KAAK+M,IAAIzB,GAEjB,OADKyE,EAAI,EAAIA,GAAK,EDID8S,CAAKR,GAClBtS,EAAI,EAAI0S,EAAYG,EACpBvkB,GAAK,EAAImkB,EAAYE,EACrBpkB,EAAIyjB,EAAGnjB,OAAS,EAChBkkB,EAAKf,EAAGzjB,GACRykB,EAAM,EACNC,EAAM,EACNC,EAAK,IAIA3kB,GAAK,GACZgkB,EAAMU,EACNT,EAAMQ,EAGND,EAAY/S,GAFZiT,EAAMF,GAEAR,EAAgBjkB,GADtB0kB,EAAME,GAC0BlB,EAAGzjB,GACnC2kB,EAAY5kB,EAAI2kB,EAAVT,EAAgBxS,EAAIgT,EAK5B,MAAO,EAFPhT,EAAIyS,EAAYI,GAEJE,GADZzkB,EAAIokB,EAAYC,GACKO,EAAIlT,EAAIkT,EAAK5kB,EAAIykB,GEsGjC,IACP,IACEzW,KA1HK,WACL,IAAK3G,KAAKX,SAAWyR,MAAM9Q,KAAK4G,KAAO5G,KAAK4G,IAAM,GAChD,MAAM,IAAI7G,MAAM,sIAGdC,KAAKX,SAEPme,GAAM7W,KAAK7C,MAAM9D,MACjBA,KAAKhG,QAAUwjB,GAAMxjB,QACrBgG,KAAK/F,QAAUujB,GAAMvjB,SAGvB+F,KAAKlC,QAAiBwH,IAAZtF,KAAKlC,GAAmBkC,KAAKlC,GAAK,EAC5CkC,KAAKhC,QAAiBsH,IAAZtF,KAAKhC,GAAmBgC,KAAKhC,GAAK,EAC5CgC,KAAK7C,WAAuBmI,IAAftF,KAAK7C,MAAsB6C,KAAK7C,MAAQ,EACrD6C,KAAKpD,UAAqB0I,IAAdtF,KAAKpD,KAAqBoD,KAAKpD,KAAO,EAClDoD,KAAKyd,IAAM,GACXzd,KAAK0d,IAAM,GACX1d,KAAK2d,IAAM,GACX3d,KAAK4d,IAAM,GACX,IAAIhC,EAAI5b,KAAK4G,IAAM,EAAItM,KAAKqL,KAAK,EAAI3F,KAAK4G,KACtCc,EAAIkU,GAAK,EAAIA,GACbiC,EAAKnW,EACT1H,KAAKyd,IAAI,GAAK/V,GAAK,EAAIA,IAAM,EAAI,EAAIA,GAAUA,GAAK,IAAM,GAAKA,GAAK,GAAK,GAAKA,IAAM,KAAO,OAAhD,KAC3C1H,KAAK0d,IAAI,GAAKhW,GAAUA,GAAK,EAAI,EAAIA,GAAK,EAAI,EAAIA,IAAM,GAAK,GAAKA,GAAK,GAAK,GAAKA,GAAK,KAAO,UAAzE,GACpBmW,GAAUnW,EACV1H,KAAKyd,IAAI,GAAKI,GAAM,EAAI,EAAInW,GAAcA,IAAM,IAAM,GAAKA,GAAK,KAAO,IAAMA,GAAK,KAAO,OAAxD,MACjC1H,KAAK0d,IAAI,GAAKG,GAAM,EAAI,EAAInW,IAAM,GAAK,GAAKA,IAAM,GAAK,EAAIA,GAAK,IAAM,IAAMA,IAAM,KAAO,SACzFmW,GAAUnW,EACV1H,KAAKyd,IAAI,GAAKI,GAAM,GAAK,GAAKnW,IAAM,IAAM,GAAKA,IAAM,KAAO,IAAMA,GAAK,MAAQ,SAC/E1H,KAAK0d,IAAI,GAAKG,IAAO,GAAK,GAAKnW,GAAK,GAAK,GAAKA,GAAK,IAAQA,IAAM,MAAQ,SACzEmW,GAAUnW,EACV1H,KAAKyd,IAAI,GAAKI,GAAM,KAAO,IAAMnW,IAAM,IAAM,GAAKA,IAAM,OAAS,SACjE1H,KAAK0d,IAAI,GAAKG,GAAM,KAAO,IAAMnW,GAAeA,IAAM,MAAQ,OAAxB,MACtCmW,GAAUnW,EACV1H,KAAKyd,IAAI,GAAKI,GAAM,KAAO,IAAMnW,IAAM,OAAS,OAChD1H,KAAK0d,IAAI,GAAKG,IAAO,IAAM,IAAMnW,GAAK,OAAS,QAC/CmW,GAAUnW,EACV1H,KAAKyd,IAAI,GAAKI,GAAM,OAAS,OAC7B7d,KAAK0d,IAAI,GAAKG,GAAM,OAAS,QAC7BA,EAAKvjB,KAAK2L,IAAIyB,EAAG,GACjB1H,KAAK8d,GAAK9d,KAAK9B,IAAM,EAAIwJ,IAAM,EAAImW,GAAM,EAAI,EAAIA,GAAM,EAAI,GAAKA,EAAK,OACrE7d,KAAK2d,IAAI,GAAKjW,GAAYA,GAAK,EAAI,EAAIA,IAAM,GAAK,GAAKA,GAAK,EAAI,IAAMA,GAAK,GAAK,IAAMA,IAAM,MAAQ,YAAhF,IACpB1H,KAAK4d,IAAI,GAAKlW,GAAK,GAAMA,IAAM,EAAI,EAAIA,GAAK,EAAI,GAAKA,GAAK,GAAK,IAAMA,IAAM,IAAM,IAAMA,GAAK,KAAO,YACnG1H,KAAK2d,IAAI,GAAKE,IAAO,EAAI,GAAKnW,IAAM,EAAI,GAAKA,GAAK,IAAM,KAAOA,IAAM,GAAK,IAAMA,GAAK,QAAU,aAC/F1H,KAAK4d,IAAI,GAAKC,GAAM,GAAK,GAAKnW,GAAcA,GAAK,IAAM,KAAOA,GAAK,IAAM,IAAMA,IAAM,QAAU,WAA5D,KACnCmW,GAAUnW,EACV1H,KAAK2d,IAAI,GAAKE,IAAO,GAAK,IAAMnW,GAAK,GAAK,IAAMA,GAAK,IAAM,KAAOA,IAAM,KAAO,UAC/E1H,KAAK4d,IAAI,GAAKC,GAAM,GAAK,IAAMnW,IAAM,IAAM,IAAMA,GAAK,MAAQ,MAAQA,GAAK,OAAS,WACpFmW,GAAUnW,EACV1H,KAAK2d,IAAI,GAAKE,IAAO,KAAO,OAASnW,GAAK,GAAK,IAAMA,GAAK,OAAS,WACnE1H,KAAK4d,IAAI,GAAKC,GAAM,MAAQ,OAASnW,IAAM,IAAM,IAAMA,GAAK,QAAU,WACtEmW,GAAUnW,EACV1H,KAAK2d,IAAI,GAAKE,IAAO,KAAO,OAASnW,GAAK,OAAS,UACnD1H,KAAK4d,IAAI,GAAKC,GAAM,MAAQ,MAAQnW,IAAM,QAAU,UACpDmW,GAAUnW,EACV1H,KAAK2d,IAAI,GAAKE,IAAO,SAAW,WAChC7d,KAAK4d,IAAI,GAAU,kBAALC,EACd,IAAIrP,EAAIuP,GAAK/d,KAAK0d,IAAK1d,KAAKpD,MAC5BoD,KAAKge,IAAMhe,KAAK8d,IAAMtP,ECrET,SAAU6N,EAAIK,GAO3B,IANA,IAIIU,EAJA/S,EAAI,EAAI/P,KAAKwM,IAAI4V,GACjB/jB,EAAI0jB,EAAGnjB,OAAS,EAChBokB,EAAMjB,EAAG1jB,GACTikB,EAAM,IAGDjkB,GAAK,GACZykB,EAAY/S,EAAIiT,EAAVV,EAAgBP,EAAG1jB,GACzBikB,EAAMU,EACNA,EAAMF,EAGR,OAAO9iB,KAAKiM,IAAImW,GAASU,EDwDCa,CAAMje,KAAK4d,IAAK,EAAIpP,KAgE9CxU,QA9DK,SAAiBoC,GACtB,IAAI8hB,EAAK/W,EAAW/K,EAAEwJ,EAAI5F,KAAK7C,OAC3BghB,EAAK/hB,EAAE4K,EACXmX,EAAKJ,GAAK/d,KAAK0d,IAAKS,GACpB,IAAIC,EAAS9jB,KAAKiM,IAAI4X,GAClBE,EAAS/jB,KAAKwM,IAAIqX,GAClBG,EAAShkB,KAAKiM,IAAI2X,GAClBK,EAASjkB,KAAKwM,IAAIoX,GACtBC,EAAK7jB,KAAKmU,MAAM2P,EAAQG,EAASF,GACjCH,EAAK5jB,KAAKmU,MAAM6P,EAASD,EAAQjC,GAAMgC,EAAQC,EAASE,IACxDL,EAAKM,GAAOlkB,KAAK4L,IAAIgY,IACrB,IAGItY,EACAoB,EAJAyX,EAAMC,GAAY1e,KAAK4d,IAAK,EAAIO,EAAI,EAAID,GAgB5C,OAfAC,GAAUM,EAAI,GACdP,GAAUO,EAAI,GAIVnkB,KAAKuL,IAAIqY,IAAO,gBAClBtY,EAAI5F,KAAK9D,GAAK8D,KAAK8d,GAAKI,GAAMle,KAAKlC,GACnCkJ,EAAIhH,KAAK9D,GAAK8D,KAAK8d,GAAKK,EAAKne,KAAKge,IAAMhe,KAAKhC,KAE7C4H,EAAI0H,EAAAA,EACJtG,EAAIsG,EAAAA,GAGNlR,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GAoCPnC,QAlCK,SAAiBmC,GACtB,IAII6K,EACAC,EALAgX,GAAM9hB,EAAEwJ,EAAI5F,KAAKlC,KAAO,EAAIkC,KAAK9D,GACjCiiB,GAAM/hB,EAAE4K,EAAIhH,KAAKhC,KAAO,EAAIgC,KAAK9D,GAMrC,GALAiiB,GAAMA,EAAKne,KAAKge,IAAMhe,KAAK8d,GAC3BI,GAAUle,KAAK8d,GAIXxjB,KAAKuL,IAAIqY,IAAO,eAAgB,CAClC,IAAIO,EAAMC,GAAY1e,KAAK2d,IAAK,EAAIQ,EAAI,EAAID,GAC5CC,GAAUM,EAAI,GACdP,GAAUO,EAAI,GACdP,EAAK5jB,KAAKgM,KAAK2W,GAAKiB,IACpB,IAAIE,EAAS9jB,KAAKiM,IAAI4X,GAClBE,EAAS/jB,KAAKwM,IAAIqX,GAClBG,EAAShkB,KAAKiM,IAAI2X,GAClBK,EAASjkB,KAAKwM,IAAIoX,GACtBC,EAAK7jB,KAAKmU,MAAM2P,EAASG,EAAQnC,GAAMkC,EAAQC,EAASF,IAExDpX,EAAME,GADN+W,EAAK5jB,KAAKmU,MAAM6P,EAAQC,EAASF,IACXre,KAAK7C,OAC3B+J,EAAM6W,GAAK/d,KAAKyd,IAAKU,QAErBlX,EAAMqG,EAAAA,EACNpG,EAAMoG,EAAAA,EAKR,OAFAlR,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,+BAAgC,+BAAgC,SAAU,sBAAuB,sBAAuB,UE9GrI,IACP,IACEZ,KAlBK,WACL,IAAIpI,ECJS,SAAUA,EAAM0I,GAC7B,QAAa3B,IAAT/G,EAAoB,CAGtB,IAFAA,EAAOjE,KAAKkX,MAAoC,IAA7BrK,EAAWF,GAAO3M,KAAKC,IAAWD,KAAKC,IAAM,GAErD,EACT,OAAO,EACF,GAAIgE,EAAO,GAChB,OAAO,GAIX,OAAOA,EDPIogB,CAAY3e,KAAKzB,KAAMyB,KAAK7C,OAEvC,QAAamI,IAAT/G,EACF,MAAM,IAAIwB,MAAM,oBAGlBC,KAAKpD,KAAO,EACZoD,KAAK7C,OAAS,EAAI7C,KAAKuL,IAAItH,GAAQ,KAAO9D,EAC1CuF,KAAKlC,GAAK,IACVkC,KAAKhC,GAAKgC,KAAKtB,SAAW,IAAW,EACrCsB,KAAK9B,GAAK,MACV0gB,GAAOjY,KAAK7C,MAAM9D,MAClBA,KAAKhG,QAAU4kB,GAAO5kB,QACtBgG,KAAK/F,QAAU2kB,GAAO3kB,SAKtBsN,MAHiB,CAAC,uCAAwC,OAI1DsX,UAtBqB,UEFR,SAAS,GAACC,EAAOzX,GAC9B,OAAO/M,KAAK2L,KAAK,EAAI6Y,IAAU,EAAIA,GAAQzX,GC6CtC,IACP,IACEV,KA7CK,WACL,IAAI4T,EAAOjgB,KAAKiM,IAAIvG,KAAKpD,MACrB4d,EAAOlgB,KAAKwM,IAAI9G,KAAKpD,MACzB4d,GAAQA,EACRxa,KAAK+e,GAAKzkB,KAAKqL,KAAK,EAAI3F,KAAK4G,KAAO,EAAI5G,KAAK4G,GAAK2T,EAAOA,GACzDva,KAAKyW,EAAInc,KAAKqL,KAAK,EAAI3F,KAAK4G,GAAK4T,EAAOA,GAAQ,EAAIxa,KAAK4G,KACzD5G,KAAKgf,MAAQ1kB,KAAK0hB,KAAKzB,EAAOva,KAAKyW,GACnCzW,KAAKif,OAAS,GAAMjf,KAAKyW,EAAIzW,KAAK6G,EAClC7G,KAAKkf,EAAI5kB,KAAK4L,IAAI,GAAMlG,KAAKgf,MAAQrkB,IAAWL,KAAK2L,IAAI3L,KAAK4L,IAAI,GAAMlG,KAAKpD,KAAOjC,GAASqF,KAAKyW,GAAK0I,GAAKnf,KAAK6G,EAAI0T,EAAMva,KAAKif,UAsChIjlB,QApCK,SAAiBoC,GACtB,IAAI6K,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAGZ,OAFA5K,EAAE4K,EAAI,EAAI1M,KAAKgM,KAAKtG,KAAKkf,EAAI5kB,KAAK2L,IAAI3L,KAAK4L,IAAI,GAAMgB,EAAMvM,GAASqF,KAAKyW,GAAK0I,GAAKnf,KAAK6G,EAAIvM,KAAKiM,IAAIW,GAAMlH,KAAKif,SAAW5kB,EAC3H+B,EAAEwJ,EAAI5F,KAAKyW,EAAIxP,EACR7K,GAgCPnC,QA9BK,SAAiBmC,GAMtB,IALA,IACI6K,EAAM7K,EAAEwJ,EAAI5F,KAAKyW,EACjBvP,EAAM9K,EAAE4K,EACR2L,EAAMrY,KAAK2L,IAAI3L,KAAK4L,IAAI,GAAMgB,EAAMvM,GAAUqF,KAAKkf,EAAG,EAAIlf,KAAKyW,GAE1D9d,EAzBI,GAyBUA,EAAI,IACzBuO,EAAM,EAAI5M,KAAKgM,KAAKqM,EAAMwM,GAAKnf,KAAK6G,EAAIvM,KAAKiM,IAAInK,EAAE4K,IAAK,GAAMhH,KAAK6G,IAAMxM,IAErEC,KAAKuL,IAAIqB,EAAM9K,EAAE4K,GART,UAKkBrO,EAO9ByD,EAAE4K,EAAIE,EAKR,OAAKvO,GAILyD,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GALE,MAYTmL,MALiB,CAAC,UCSb,IACP,IACEZ,KAvDK,WACLyY,GAAMzY,KAAK7C,MAAM9D,MAEZA,KAAK+e,KAIV/e,KAAKqf,MAAQ/kB,KAAKiM,IAAIvG,KAAKgf,OAC3Bhf,KAAKsf,MAAQhlB,KAAKwM,IAAI9G,KAAKgf,OAC3Bhf,KAAKuf,GAAK,EAAIvf,KAAK+e,GAEd/e,KAAKwf,QACRxf,KAAKwf,MAAQ,uCA4CfxlB,QAzCK,SAAiBoC,GACtB,IAAIqjB,EAAMC,EAAMC,EAAMxhB,EAWtB,OAVA/B,EAAEwJ,EAAIuB,EAAW/K,EAAEwJ,EAAI5F,KAAK7C,OAC5BiiB,GAAMplB,QAAQ8J,MAAM9D,KAAM,CAAC5D,IAC3BqjB,EAAOnlB,KAAKiM,IAAInK,EAAE4K,GAClB0Y,EAAOplB,KAAKwM,IAAI1K,EAAE4K,GAClB2Y,EAAOrlB,KAAKwM,IAAI1K,EAAEwJ,GAClBzH,EAAI6B,KAAK9B,GAAK8B,KAAKuf,IAAM,EAAIvf,KAAKqf,MAAQI,EAAOzf,KAAKsf,MAAQI,EAAOC,GACrEvjB,EAAEwJ,EAAIzH,EAAIuhB,EAAOplB,KAAKiM,IAAInK,EAAEwJ,GAC5BxJ,EAAE4K,EAAI7I,GAAK6B,KAAKsf,MAAQG,EAAOzf,KAAKqf,MAAQK,EAAOC,GACnDvjB,EAAEwJ,EAAI5F,KAAK9D,EAAIE,EAAEwJ,EAAI5F,KAAKlC,GAC1B1B,EAAE4K,EAAIhH,KAAK9D,EAAIE,EAAE4K,EAAIhH,KAAKhC,GACnB5B,GA8BPnC,QA5BK,SAAiBmC,GACtB,IAAIqjB,EAAMC,EAAMzY,EAAKC,EAAK0Y,EAM1B,GALAxjB,EAAEwJ,GAAKxJ,EAAEwJ,EAAI5F,KAAKlC,IAAMkC,KAAK9D,EAC7BE,EAAE4K,GAAK5K,EAAE4K,EAAIhH,KAAKhC,IAAMgC,KAAK9D,EAC7BE,EAAEwJ,GAAK5F,KAAK9B,GACZ9B,EAAE4K,GAAKhH,KAAK9B,GAER0hB,EAAMtlB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GAAI,CAC1C,IAAImU,EAAI,EAAI7gB,KAAKmU,MAAMmR,EAAK5f,KAAKuf,IACjCE,EAAOnlB,KAAKiM,IAAI4U,GAChBuE,EAAOplB,KAAKwM,IAAIqU,GAChBjU,EAAM5M,KAAK0hB,KAAK0D,EAAO1f,KAAKqf,MAAQjjB,EAAE4K,EAAIyY,EAAOzf,KAAKsf,MAAQM,GAC9D3Y,EAAM3M,KAAKmU,MAAMrS,EAAEwJ,EAAI6Z,EAAMG,EAAM5f,KAAKsf,MAAQI,EAAOtjB,EAAE4K,EAAIhH,KAAKqf,MAAQI,QAE1EvY,EAAMlH,KAAKgf,MACX/X,EAAM,EAOR,OAJA7K,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACNkY,GAAMnlB,QAAQ6J,MAAM9D,KAAM,CAAC5D,IAC3BA,EAAEwJ,EAAIuB,EAAW/K,EAAEwJ,EAAI5F,KAAK7C,OACrBf,GAOPmL,MALiB,CAAC,2BAA4B,wBAAyB,sBAAuB,SAAU,oCAAqC,yBC8GxI,IACP,IACEZ,KA7JK,WACL3G,KAAK6f,QAAUvlB,KAAKwM,IAAI9G,KAAKpD,MAC7BoD,KAAK8f,QAAUxlB,KAAKiM,IAAIvG,KAAKpD,MAEzBoD,KAAKkD,OACS,IAAZlD,KAAK9B,KAAa4S,MAAM9Q,KAAK/C,SAAW3C,KAAKuL,IAAI7F,KAAK6f,UAAYrlB,IACpEwF,KAAK9B,GAAK,IAAO,EAAI4H,EAAK9F,KAAKpD,MAAQtC,KAAKiM,IAAIvG,KAAK/C,WAGnD3C,KAAKuL,IAAI7F,KAAK6f,UAAYrlB,IACxBwF,KAAKpD,KAAO,EAGdoD,KAAK0F,IAAM,EAIX1F,KAAK0F,KAAO,GAIhB1F,KAAK+f,KAAOzlB,KAAKqL,KAAKrL,KAAK2L,IAAI,EAAIjG,KAAK6G,EAAG,EAAI7G,KAAK6G,GAAKvM,KAAK2L,IAAI,EAAIjG,KAAK6G,EAAG,EAAI7G,KAAK6G,IAEvE,IAAZ7G,KAAK9B,KAAa4S,MAAM9Q,KAAK/C,SAAW3C,KAAKuL,IAAI7F,KAAK6f,UAAYrlB,IACpEwF,KAAK9B,GAAK,GAAM8B,KAAK+f,KAAOhZ,EAAM/G,KAAK6G,EAAGvM,KAAKiM,IAAIvG,KAAK/C,QAAS3C,KAAKwM,IAAI9G,KAAK/C,SAAWmK,EAAMpH,KAAK6G,EAAG7G,KAAK0F,IAAM1F,KAAK/C,OAAQ+C,KAAK0F,IAAMpL,KAAKiM,IAAIvG,KAAK/C,UAG3J+C,KAAKggB,IAAMjZ,EAAM/G,KAAK6G,EAAG7G,KAAK8f,QAAS9f,KAAK6f,SAC5C7f,KAAKigB,GAAK,EAAI3lB,KAAKgM,KAAKtG,KAAKkgB,MAAMlgB,KAAKpD,KAAMoD,KAAK8f,QAAS9f,KAAK6G,IAAMxM,EACvE2F,KAAKmgB,MAAQ7lB,KAAKwM,IAAI9G,KAAKigB,IAC3BjgB,KAAKogB,MAAQ9lB,KAAKiM,IAAIvG,KAAKigB,MAgI7BjmB,QA5HK,SAAiBoC,GACtB,IAII8X,EAAG5F,EAAG+R,EAAMC,EAAMna,EAAIoa,EAJtBtZ,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACRwZ,EAASlmB,KAAKiM,IAAIW,GAClBuZ,EAASnmB,KAAKwM,IAAII,GAElBwZ,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAEjC,OAAI7C,KAAKuL,IAAIvL,KAAKuL,IAAIoB,EAAMjH,KAAK7C,OAAS7C,KAAKC,KAAOC,GAASF,KAAKuL,IAAIqB,EAAMlH,KAAKpD,OAASpC,GAG1F4B,EAAEwJ,EAAIqK,IACN7T,EAAE4K,EAAIiJ,IACC7T,GAGL4D,KAAKkD,QAEPgR,EAAI,EAAIlU,KAAK9B,IAAM,EAAI8B,KAAK8f,QAAUU,EAASxgB,KAAK6f,QAAUY,EAASnmB,KAAKwM,IAAI4Z,IAChFtkB,EAAEwJ,EAAI5F,KAAK9D,EAAIgY,EAAIuM,EAASnmB,KAAKiM,IAAIma,GAAQ1gB,KAAKlC,GAClD1B,EAAE4K,EAAIhH,KAAK9D,EAAIgY,GAAKlU,KAAK6f,QAAUW,EAASxgB,KAAK8f,QAAUW,EAASnmB,KAAKwM,IAAI4Z,IAAS1gB,KAAKhC,GACpF5B,IAEPkS,EAAI,EAAIhU,KAAKgM,KAAKtG,KAAKkgB,MAAMhZ,EAAKsZ,EAAQxgB,KAAK6G,IAAMxM,EACrDimB,EAAOhmB,KAAKwM,IAAIwH,GAChB+R,EAAO/lB,KAAKiM,IAAI+H,GAEZhU,KAAKuL,IAAI7F,KAAK6f,UAAYrlB,GAC5B2L,EAAKiB,EAAMpH,KAAK6G,EAAGK,EAAMlH,KAAK0F,IAAK1F,KAAK0F,IAAM8a,GAC9CD,EAAK,EAAIvgB,KAAK9D,EAAI8D,KAAK9B,GAAKiI,EAAKnG,KAAK+f,KACtC3jB,EAAEwJ,EAAI5F,KAAKlC,GAAKyiB,EAAKjmB,KAAKiM,IAAIU,EAAMjH,KAAK7C,OACzCf,EAAE4K,EAAIhH,KAAKhC,GAAKgC,KAAK0F,IAAM6a,EAAKjmB,KAAKwM,IAAIG,EAAMjH,KAAK7C,OAE7Cf,IACE9B,KAAKuL,IAAI7F,KAAK8f,SAAWtlB,GAGlC0Z,EAAI,EAAIlU,KAAK9D,EAAI8D,KAAK9B,IAAM,EAAIoiB,EAAOhmB,KAAKwM,IAAI4Z,IAChDtkB,EAAE4K,EAAIkN,EAAImM,IAIVnM,EAAI,EAAIlU,KAAK9D,EAAI8D,KAAK9B,GAAK8B,KAAKggB,KAAOhgB,KAAKmgB,OAAS,EAAIngB,KAAKogB,MAAQC,EAAOrgB,KAAKmgB,MAAQG,EAAOhmB,KAAKwM,IAAI4Z,KAC1GtkB,EAAE4K,EAAIkN,GAAKlU,KAAKmgB,MAAQE,EAAOrgB,KAAKogB,MAAQE,EAAOhmB,KAAKwM,IAAI4Z,IAAS1gB,KAAKhC,IAG5E5B,EAAEwJ,EAAIsO,EAAIoM,EAAOhmB,KAAKiM,IAAIma,GAAQ1gB,KAAKlC,GAIlC1B,KA2EPnC,QAxEK,SAAiBmC,GAGtB,IAAI6K,EAAKC,EAAKf,EAAIwa,EAAIC,EAFtBxkB,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GAEZ,IAAIuiB,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GAEvC,GAAIhH,KAAKkD,OAAQ,CACf,IAAIiY,EAAI,EAAI7gB,KAAKgM,KAAKia,GAAM,EAAIvgB,KAAK9D,EAAI8D,KAAK9B,KAI9C,OAHA+I,EAAMjH,KAAK7C,MACX+J,EAAMlH,KAAKpD,KAEP2jB,GAAM/lB,GACR4B,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IAGT8K,EAAM5M,KAAK0hB,KAAK1hB,KAAKwM,IAAIqU,GAAKnb,KAAK8f,QAAU1jB,EAAE4K,EAAI1M,KAAKiM,IAAI4U,GAAKnb,KAAK6f,QAAUU,GAI5EtZ,EAFA3M,KAAKuL,IAAI7F,KAAK6f,SAAWrlB,EACvBwF,KAAKpD,KAAO,EACRuK,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,GAAI,EAAIxJ,EAAE4K,IAE/CG,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,EAAGxJ,EAAE4K,IAG5CG,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,EAAItL,KAAKiM,IAAI4U,GAAIoF,EAAKvgB,KAAK6f,QAAUvlB,KAAKwM,IAAIqU,GAAK/e,EAAE4K,EAAIhH,KAAK8f,QAAUxlB,KAAKiM,IAAI4U,KAG9H/e,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAEP,GAAI9B,KAAKuL,IAAI7F,KAAK6f,UAAYrlB,EAAO,CACnC,GAAI+lB,GAAM/lB,EAMR,OALA0M,EAAMlH,KAAKpD,KACXqK,EAAMjH,KAAK7C,MACXf,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EAEC9K,EAGTA,EAAEwJ,GAAK5F,KAAK0F,IACZtJ,EAAE4K,GAAKhH,KAAK0F,IACZS,EAAKoa,EAAKvgB,KAAK+f,MAAQ,EAAI/f,KAAK9D,EAAI8D,KAAK9B,IACzCgJ,EAAMlH,KAAK0F,IAAM4B,EAAMtH,KAAK6G,EAAGV,GAC/Bc,EAAMjH,KAAK0F,IAAMyB,EAAWnH,KAAK0F,IAAM1F,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,GAAI,EAAIxJ,EAAE4K,SAE3E2Z,EAAK,EAAIrmB,KAAKgM,KAAKia,EAAKvgB,KAAKmgB,OAAS,EAAIngB,KAAK9D,EAAI8D,KAAK9B,GAAK8B,KAAKggB,MAClE/Y,EAAMjH,KAAK7C,MAEPojB,GAAM/lB,EACRomB,EAAM5gB,KAAKigB,IAEXW,EAAMtmB,KAAK0hB,KAAK1hB,KAAKwM,IAAI6Z,GAAM3gB,KAAKogB,MAAQhkB,EAAE4K,EAAI1M,KAAKiM,IAAIoa,GAAM3gB,KAAKmgB,MAAQI,GAC9EtZ,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,EAAItL,KAAKiM,IAAIoa,GAAKJ,EAAKvgB,KAAKmgB,MAAQ7lB,KAAKwM,IAAI6Z,GAAMvkB,EAAE4K,EAAIhH,KAAKogB,MAAQ9lB,KAAKiM,IAAIoa,MAG5HzZ,GAAO,EAAII,EAAMtH,KAAK6G,EAAGvM,KAAK4L,IAAI,IAAO7L,EAAUumB,KAOvD,OAHAxkB,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EAEC9K,GAOPmL,MALiB,CAAC,QAAS,2BAA4B,mCAMvD2Y,MArKK,SAAeW,EAAMrb,EAAQsb,GAElC,OADAtb,GAAUsb,EACHxmB,KAAK4L,IAAI,IAAO7L,EAAUwmB,IAASvmB,KAAK2L,KAAK,EAAIT,IAAW,EAAIA,GAAS,GAAMsb,KC4DjF,IACP,IACEna,KA/DK,WACL,IAAIoa,EAAO/gB,KAAKpD,KAChBoD,KAAKghB,QAAUhhB,KAAK7C,MACpB,IAAI8jB,EAAU3mB,KAAKiM,IAAIwa,GACnBG,EAAgBlhB,KAAK9D,EAErBilB,EAAa,EADNnhB,KAAKvD,GAEZ2kB,EAAK,EAAID,EAAa7mB,KAAK2L,IAAIkb,EAAY,GAC3Cta,EAAI7G,KAAK6G,EAAIvM,KAAKqL,KAAKyb,GAC3BphB,KAAKqhB,EAAIrhB,KAAK9B,GAAKgjB,EAAgB5mB,KAAKqL,KAAK,EAAIyb,IAAO,EAAIA,EAAK9mB,KAAK2L,IAAIgb,EAAS,IACnFjhB,KAAKxC,MAAQlD,KAAKqL,KAAK,EAAIyb,GAAM,EAAIA,GAAM9mB,KAAK2L,IAAI3L,KAAKwM,IAAIia,GAAO,IACpE/gB,KAAKshB,GAAKhnB,KAAK0hB,KAAKiF,EAAUjhB,KAAKxC,OACnC,IAAI+jB,EAAKjnB,KAAK6J,IAAI7J,KAAK4L,IAAI5L,KAAKC,GAAK,EAAIyF,KAAKshB,GAAK,IAC/CE,EAAKlnB,KAAK6J,IAAI7J,KAAK4L,IAAI5L,KAAKC,GAAK,EAAIwmB,EAAO,IAC5CU,EAAKnnB,KAAK6J,KAAK,EAAI0C,EAAIoa,IAAY,EAAIpa,EAAIoa,IAC/CjhB,KAAKkf,EAAIqC,EAAKvhB,KAAKxC,MAAQgkB,EAAKxhB,KAAKxC,MAAQqJ,EAAI,EAAI4a,GAiDrDznB,QA/CK,SAAiBoC,GACtB,IAAIslB,EAAMpnB,KAAK6J,IAAI7J,KAAK4L,IAAI5L,KAAKC,GAAK,EAAI6B,EAAE4K,EAAI,IAC5C2a,EAAM3hB,KAAK6G,EAAI,EAAIvM,KAAK6J,KAAK,EAAInE,KAAK6G,EAAIvM,KAAKiM,IAAInK,EAAE4K,KAAO,EAAIhH,KAAK6G,EAAIvM,KAAKiM,IAAInK,EAAE4K,KACpF4a,GAAK5hB,KAAKxC,OAASkkB,EAAMC,GAAO3hB,KAAKkf,EAErC9gB,EAAI,GAAK9D,KAAKgM,KAAKhM,KAAK+M,IAAIua,IAAMtnB,KAAKC,GAAK,GAE5C4Z,EAAInU,KAAKxC,OAASpB,EAAEwJ,EAAI5F,KAAKghB,SAE7Ba,EAAOvnB,KAAKgM,KAAKhM,KAAKiM,IAAI4N,IAAM7Z,KAAKiM,IAAIvG,KAAKshB,IAAMhnB,KAAK4L,IAAI9H,GAAK9D,KAAKwM,IAAI9G,KAAKshB,IAAMhnB,KAAKwM,IAAIqN,KAC/F2N,EAAOxnB,KAAK0hB,KAAK1hB,KAAKwM,IAAI9G,KAAKshB,IAAMhnB,KAAKiM,IAAInI,GAAK9D,KAAKiM,IAAIvG,KAAKshB,IAAMhnB,KAAKwM,IAAI1I,GAAK9D,KAAKwM,IAAIqN,IAGlG,OAFA/X,EAAE4K,EAAIhH,KAAKqhB,EAAI,EAAI/mB,KAAK6J,KAAK,EAAI7J,KAAKiM,IAAIub,KAAU,EAAIxnB,KAAKiM,IAAIub,KAAU9hB,KAAKhC,GAChF5B,EAAEwJ,EAAI5F,KAAKqhB,EAAIQ,EAAO7hB,KAAKlC,GACpB1B,GAmCPnC,QAjCK,SAAiBmC,GAatB,IAZA,IAAImS,EAAInS,EAAEwJ,EAAI5F,KAAKlC,GACfwQ,EAAIlS,EAAE4K,EAAIhH,KAAKhC,GACf6jB,EAAOtT,EAAIvO,KAAKqhB,EAChBS,EAAO,GAAKxnB,KAAKgM,KAAKhM,KAAK+M,IAAIiH,EAAItO,KAAKqhB,IAAM/mB,KAAKC,GAAK,GACxD6D,EAAI9D,KAAK0hB,KAAK1hB,KAAKwM,IAAI9G,KAAKshB,IAAMhnB,KAAKiM,IAAIub,GAAQxnB,KAAKiM,IAAIvG,KAAKshB,IAAMhnB,KAAKwM,IAAIgb,GAAQxnB,KAAKwM,IAAI+a,IACjG1N,EAAI7Z,KAAKgM,KAAKhM,KAAKiM,IAAIsb,IAASvnB,KAAKwM,IAAI9G,KAAKshB,IAAMhnB,KAAKwM,IAAI+a,GAAQvnB,KAAKiM,IAAIvG,KAAKshB,IAAMhnB,KAAK4L,IAAI4b,KAClGC,EAAS/hB,KAAKghB,QAAU7M,EAAInU,KAAKxC,MACjCokB,EAAI,EACJI,EAAM5jB,EACN6jB,GAAW,IACXC,EAAY,EAET5nB,KAAKuL,IAAImc,EAAMC,GAAW,MAAW,CAC1C,KAAMC,EAAY,GAEhB,OAIFN,EAAI,EAAI5hB,KAAKxC,OAASlD,KAAK6J,IAAI7J,KAAK4L,IAAI5L,KAAKC,GAAK,EAAI6D,EAAI,IAAM4B,KAAKkf,GAAKlf,KAAK6G,EAAIvM,KAAK6J,IAAI7J,KAAK4L,IAAI5L,KAAKC,GAAK,EAAID,KAAK0hB,KAAKhc,KAAK6G,EAAIvM,KAAKiM,IAAIyb,IAAQ,IACvJC,EAAUD,EACVA,EAAM,EAAI1nB,KAAKgM,KAAKhM,KAAK+M,IAAIua,IAAMtnB,KAAKC,GAAK,EAK/C,OAFA6B,EAAEwJ,EAAImc,EACN3lB,EAAE4K,EAAIgb,EACC5lB,GAOPmL,MALiB,CAAC,WChEhB4a,GAAM,KA8OH,IACP,IACExb,KArOK,WACL,IAAIjB,EACAM,EACAoc,EACArK,EACAsK,EACAC,EACAC,EACAC,EACApmB,EACAqmB,EAEAC,EArBWlV,EAEXmV,EAkBAllB,EAAQ,EAERmlB,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAO,EACPC,EAAU,EAIdjjB,KAAKkjB,QA7BDP,EAAyC,iBAF9BnV,EA+BOxN,MA7BQuC,WAA0BzJ,OAAOC,KAAKyU,EAAEjL,YAAY,GAAKiL,EAAEjL,WAClF,YAAaiL,GAAK,WAAYA,IAAmD,IAFjE,CAAC,0BAA2B,kDAEQrO,QAAQwjB,IA6BnE3iB,KAAKmjB,OAAS,WAAYnjB,KAC1B,IAAIojB,GAAM,EAEN,UAAWpjB,OACbojB,GAAM,GAGR,IAAIC,GAAM,EAcV,GAZI,yBAA0BrjB,OAC5BqjB,GAAM,GAGJD,IACFH,EAAUjjB,KAAKxC,OAGb6lB,IACF5lB,EAAQuC,KAAKtC,qBAAuBjD,GAGlC2oB,GAAOC,EACTT,EAAO5iB,KAAKpC,WAOZ,GALAilB,EAAO7iB,KAAK3C,MACZ0lB,EAAO/iB,KAAKlD,KACZgmB,EAAO9iB,KAAKzC,MACZylB,EAAOhjB,KAAKhD,KAER1C,KAAKuL,IAAIkd,EAAOC,IAASb,KAAQzc,EAAMpL,KAAKuL,IAAIkd,KAAUZ,IAAO7nB,KAAKuL,IAAIH,EAAMrL,IAAY8nB,IAAO7nB,KAAKuL,IAAIvL,KAAKuL,IAAI7F,KAAKpD,MAAQvC,IAAY8nB,IAAO7nB,KAAKuL,IAAIvL,KAAKuL,IAAImd,GAAQ3oB,IAAY8nB,GAC7L,MAAM,IAAIpiB,MAId,IAAIujB,EAAS,EAAMtjB,KAAK4G,GACxBZ,EAAM1L,KAAKqL,KAAK2d,GAEZhpB,KAAKuL,IAAI7F,KAAKpD,MAAQpC,GACxBgoB,EAASloB,KAAKiM,IAAIvG,KAAKpD,MACvBwlB,EAAS9nB,KAAKwM,IAAI9G,KAAKpD,MACvB8I,EAAM,EAAI1F,KAAK4G,GAAK4b,EAASA,EAC7BxiB,KAAKsc,EAAI8F,EAASA,EAClBpiB,KAAKsc,EAAIhiB,KAAKqL,KAAK,EAAI3F,KAAK4G,GAAK5G,KAAKsc,EAAItc,KAAKsc,EAAIgH,GACnDtjB,KAAKkU,EAAIlU,KAAKsc,EAAItc,KAAK9B,GAAK8H,EAAMN,GAElC2c,GADAtK,EAAI/X,KAAKsc,EAAItW,GAAOoc,EAAS9nB,KAAKqL,KAAKD,KAC/BqS,EAAI,IAEH,EACPsK,EAAI,GAEJA,EAAI/nB,KAAKqL,KAAK0c,GAEVriB,KAAKpD,KAAO,IACdylB,GAAKA,IAITriB,KAAKujB,EAAIlB,GAAKtK,EACd/X,KAAKujB,GAAKjpB,KAAK2L,IAAImB,EAAMpH,KAAK6G,EAAG7G,KAAKpD,KAAM4lB,GAASxiB,KAAKsc,KAE1Dtc,KAAKsc,EAAI,EAAItW,EACbhG,KAAKkU,EAAIlU,KAAK9B,GACd8B,KAAKujB,EAAIxL,EAAIsK,EAAI,GAGfe,GAAOC,GACLD,GACFV,EAASpoB,KAAK0hB,KAAK1hB,KAAKiM,IAAI0c,GAAWlL,GAElCsL,IACH5lB,EAAQwlB,KAGVP,EAASjlB,EACTwlB,EAAU3oB,KAAK0hB,KAAKjE,EAAIzd,KAAKiM,IAAImc,KAGnC1iB,KAAKwjB,KAAOZ,EAAOtoB,KAAK0hB,KAAK,IAAOqG,EAAI,EAAIA,GAAK/nB,KAAK4L,IAAIwc,IAAW1iB,KAAKsc,IAE1EgG,EAAIhoB,KAAK2L,IAAImB,EAAMpH,KAAK6G,EAAGkc,EAAMzoB,KAAKiM,IAAIwc,IAAQ/iB,KAAKsc,GACvDiG,EAAIjoB,KAAK2L,IAAImB,EAAMpH,KAAK6G,EAAGmc,EAAM1oB,KAAKiM,IAAIyc,IAAQhjB,KAAKsc,GACvD+F,EAAIriB,KAAKujB,EAAIjB,EACblmB,GAAKmmB,EAAID,IAAMC,EAAID,GAEnBG,IADAA,EAAIziB,KAAKujB,EAAIvjB,KAAKujB,GACThB,EAAID,IAAMG,EAAIF,EAAID,IAC3B5c,EAAMmd,EAAOC,IAEFxoB,KAAKmpB,GACdX,GAAQloB,EACC8K,EAAMpL,KAAKmpB,KACpBX,GAAQloB,GAGVoF,KAAKwjB,KAAOrc,EAAW,IAAO0b,EAAOC,GAAQxoB,KAAKgM,KAAKmc,EAAInoB,KAAK4L,IAAI,GAAMlG,KAAKsc,GAAKuG,EAAOC,IAAS1mB,GAAK4D,KAAKsc,GAC9GoG,EAASpoB,KAAKgM,KAAK,EAAIhM,KAAKiM,IAAIvG,KAAKsc,EAAInV,EAAW0b,EAAO7iB,KAAKwjB,QAAUnB,EAAI,EAAIA,IAClF5kB,EAAQwlB,EAAU3oB,KAAK0hB,KAAKjE,EAAIzd,KAAKiM,IAAImc,KAG3C1iB,KAAK0jB,OAASppB,KAAKiM,IAAImc,GACvB1iB,KAAK2jB,OAASrpB,KAAKwM,IAAI4b,GACvB1iB,KAAK4jB,OAAStpB,KAAKiM,IAAI9I,GACvBuC,KAAK6jB,OAASvpB,KAAKwM,IAAIrJ,GACvBuC,KAAK8jB,GAAK,EAAI9jB,KAAKsc,EACnBtc,KAAK+jB,IAAM/jB,KAAKkU,EAAIlU,KAAK8jB,GACzB9jB,KAAKgkB,IAAM,EAAIhkB,KAAK+jB,IACf/jB,KAAKkU,EAAIlU,KAAKsc,EAEftc,KAAKkjB,OACPljB,KAAKikB,IAAM,GAEXjkB,KAAKikB,IAAM3pB,KAAKuL,IAAI7F,KAAK+jB,IAAMzpB,KAAKgM,KAAKhM,KAAKqL,KAAKoS,EAAIA,EAAI,GAAKzd,KAAKwM,IAAImc,KAErEjjB,KAAKpD,KAAO,IACdoD,KAAKikB,KAAOjkB,KAAKikB,MAIrB5B,EAAI,GAAMK,EACV1iB,KAAKkkB,SAAWlkB,KAAK+jB,IAAMzpB,KAAK6J,IAAI7J,KAAK4L,IAAIvL,EAAS0nB,IACtDriB,KAAKmkB,SAAWnkB,KAAK+jB,IAAMzpB,KAAK6J,IAAI7J,KAAK4L,IAAIvL,EAAS0nB,KAwFtDroB,QAnFK,SAAiBoC,GACtB,IACIwlB,EAAGpL,EAAG4N,EAAG/P,EAAGgQ,EAAGvI,EAAMwI,EAAGvoB,EADxBuX,EAAS,GAIb,GAFAlX,EAAEwJ,EAAIxJ,EAAEwJ,EAAI5F,KAAKwjB,KAEblpB,KAAKuL,IAAIvL,KAAKuL,IAAIzJ,EAAE4K,GAAK3M,GAAWG,EAAO,CAQ7C,GALAonB,EAAI,KAFJyC,EAAIrkB,KAAKujB,EAAIjpB,KAAK2L,IAAImB,EAAMpH,KAAK6G,EAAGzK,EAAE4K,EAAG1M,KAAKiM,IAAInK,EAAE4K,IAAKhH,KAAKsc,KAC9DR,EAAO,EAAIuI,IAEX7N,EAAI,IAAO6N,EAAIvI,GACfzH,EAAI/Z,KAAKiM,IAAIvG,KAAKsc,EAAIlgB,EAAEwJ,GACxBwe,GAAKxC,EAAI5hB,KAAK0jB,OAASrP,EAAIrU,KAAK2jB,QAAUnN,EAEtClc,KAAKuL,IAAIvL,KAAKuL,IAAIue,GAAK,GAAO5pB,EAChC,MAAM,IAAIuF,MAGZhE,EAAI,GAAMiE,KAAK+jB,IAAMzpB,KAAK6J,KAAK,EAAIigB,IAAM,EAAIA,IAC7CtI,EAAOxhB,KAAKwM,IAAI9G,KAAKsc,EAAIlgB,EAAEwJ,GAGzB0e,EADEhqB,KAAKuL,IAAIiW,GAAQqG,GACfniB,KAAKkU,EAAI9X,EAAEwJ,EAEX5F,KAAK+jB,IAAMzpB,KAAKmU,MAAMmT,EAAI5hB,KAAK2jB,OAAStP,EAAIrU,KAAK0jB,OAAQ5H,QAG/D/f,EAAIK,EAAE4K,EAAI,EAAIhH,KAAKkkB,SAAWlkB,KAAKmkB,SACnCG,EAAItkB,KAAK+jB,IAAM3nB,EAAE4K,EAcnB,OAXIhH,KAAKmjB,QACP7P,EAAO1N,EAAI0e,EACXhR,EAAOtM,EAAIjL,IAEXuoB,GAAKtkB,KAAKikB,IACV3Q,EAAO1N,EAAI7J,EAAIiE,KAAK6jB,OAASS,EAAItkB,KAAK4jB,OACtCtQ,EAAOtM,EAAIsd,EAAItkB,KAAK6jB,OAAS9nB,EAAIiE,KAAK4jB,QAGxCtQ,EAAO1N,EAAI5F,KAAK9D,EAAIoX,EAAO1N,EAAI5F,KAAKlC,GACpCwV,EAAOtM,EAAIhH,KAAK9D,EAAIoX,EAAOtM,EAAIhH,KAAKhC,GAC7BsV,GA2CPrZ,QAzCK,SAAiBmC,GACtB,IAAIkoB,EAAGvoB,EAAGwoB,EAAIC,EAAIC,EAAIC,EAAIC,EACtBrR,EAAS,GAkBb,GAjBAlX,EAAEwJ,GAAKxJ,EAAEwJ,EAAI5F,KAAKlC,KAAO,EAAMkC,KAAK9D,GACpCE,EAAE4K,GAAK5K,EAAE4K,EAAIhH,KAAKhC,KAAO,EAAMgC,KAAK9D,GAEhC8D,KAAKmjB,QACPpnB,EAAIK,EAAE4K,EACNsd,EAAIloB,EAAEwJ,IAEN7J,EAAIK,EAAEwJ,EAAI5F,KAAK6jB,OAASznB,EAAE4K,EAAIhH,KAAK4jB,OACnCU,EAAIloB,EAAE4K,EAAIhH,KAAK6jB,OAASznB,EAAEwJ,EAAI5F,KAAK4jB,OAAS5jB,KAAKikB,KAInDO,EAAK,KADLD,EAAKjqB,KAAK+M,KAAKrH,KAAKgkB,IAAMjoB,IACT,EAAIwoB,GACrBE,EAAK,IAAOF,EAAK,EAAIA,GAErBI,IADAD,EAAKpqB,KAAKiM,IAAIvG,KAAKgkB,IAAMM,IACdtkB,KAAK2jB,OAASa,EAAKxkB,KAAK0jB,QAAUe,EAEzCnqB,KAAKuL,IAAIvL,KAAKuL,IAAI8e,GAAM,GAAKnqB,EAC/B8Y,EAAO1N,EAAI,EACX0N,EAAOtM,EAAI2d,EAAK,GAAKtqB,EAAUA,MAC1B,CAIL,GAHAiZ,EAAOtM,EAAIhH,KAAKujB,EAAIjpB,KAAKqL,MAAM,EAAIgf,IAAO,EAAIA,IAC9CrR,EAAOtM,EAAIM,EAAMtH,KAAK6G,EAAGvM,KAAK2L,IAAIqN,EAAOtM,EAAG,EAAIhH,KAAKsc,IAEjDhJ,EAAOtM,IAAMsG,EAAAA,EACf,MAAM,IAAIvN,MAGZuT,EAAO1N,GAAK5F,KAAK8jB,GAAKxpB,KAAKmU,MAAM+V,EAAKxkB,KAAK2jB,OAASe,EAAK1kB,KAAK0jB,OAAQppB,KAAKwM,IAAI9G,KAAKgkB,IAAMM,IAI5F,OADAhR,EAAO1N,GAAK5F,KAAKwjB,KACVlQ,GAOP/L,MALiB,CAAC,0BAA2B,0BAA2B,iDAAkD,mDAAoD,yCAA0C,mBAAoB,UC9GvO,IACP,IACEZ,KAhIK,WAuBL,GAZK3G,KAAKhD,OACRgD,KAAKhD,KAAOgD,KAAKlD,MAIdkD,KAAK9B,KACR8B,KAAK9B,GAAK,GAGZ8B,KAAKlC,GAAKkC,KAAKlC,IAAM,EACrBkC,KAAKhC,GAAKgC,KAAKhC,IAAM,IAEjB1D,KAAKuL,IAAI7F,KAAKlD,KAAOkD,KAAKhD,MAAQxC,GAAtC,CAIA,IAAIshB,EAAO9b,KAAK5B,EAAI4B,KAAK9D,EACzB8D,KAAK6G,EAAIvM,KAAKqL,KAAK,EAAImW,EAAOA,GAC9B,IAAI8I,EAAOtqB,KAAKiM,IAAIvG,KAAKlD,MACrB+nB,EAAOvqB,KAAKwM,IAAI9G,KAAKlD,MACrBkjB,EAAMjZ,EAAM/G,KAAK6G,EAAG+d,EAAMC,GAC1BC,EAAM1d,EAAMpH,KAAK6G,EAAG7G,KAAKlD,KAAM8nB,GAC/BG,EAAOzqB,KAAKiM,IAAIvG,KAAKhD,MACrBgoB,EAAO1qB,KAAKwM,IAAI9G,KAAKhD,MACrBioB,EAAMle,EAAM/G,KAAK6G,EAAGke,EAAMC,GAC1BE,EAAM9d,EAAMpH,KAAK6G,EAAG7G,KAAKhD,KAAM+nB,GAC/BI,EAAM/d,EAAMpH,KAAK6G,EAAG7G,KAAKpD,KAAMtC,KAAKiM,IAAIvG,KAAKpD,OAE7CtC,KAAKuL,IAAI7F,KAAKlD,KAAOkD,KAAKhD,MAAQxC,EACpCwF,KAAKolB,GAAK9qB,KAAK6J,IAAI6b,EAAMiF,GAAO3qB,KAAK6J,IAAI2gB,EAAMI,GAE/CllB,KAAKolB,GAAKR,EAGR9T,MAAM9Q,KAAKolB,MACbplB,KAAKolB,GAAKR,GAGZ5kB,KAAKqlB,GAAKrF,GAAOhgB,KAAKolB,GAAK9qB,KAAK2L,IAAI6e,EAAK9kB,KAAKolB,KAC9CplB,KAAKugB,GAAKvgB,KAAK9D,EAAI8D,KAAKqlB,GAAK/qB,KAAK2L,IAAIkf,EAAKnlB,KAAKolB,IAE3CplB,KAAKwf,QACRxf,KAAKwf,MAAQ,6BA4EfxlB,QAvEK,SAAiBoC,GACtB,IAAI6K,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAER1M,KAAKuL,IAAI,EAAIvL,KAAKuL,IAAIqB,GAAO5M,KAAKC,KAAOC,IAC3C0M,EAAMpB,EAAKoB,IAAQ7M,EAAU,QAG/B,IACI8L,EAAImf,EADJ5f,EAAMpL,KAAKuL,IAAIvL,KAAKuL,IAAIqB,GAAO7M,GAGnC,GAAIqL,EAAMlL,EACR2L,EAAKiB,EAAMpH,KAAK6G,EAAGK,EAAK5M,KAAKiM,IAAIW,IACjCoe,EAAMtlB,KAAK9D,EAAI8D,KAAKqlB,GAAK/qB,KAAK2L,IAAIE,EAAInG,KAAKolB,QACtC,CAGL,IAFA1f,EAAMwB,EAAMlH,KAAKolB,KAEN,EACT,OAAO,KAGTE,EAAM,EAGR,IAAIC,EAAQvlB,KAAKolB,GAAKje,EAAWF,EAAMjH,KAAK7C,OAG5C,OAFAf,EAAEwJ,EAAI5F,KAAK9B,IAAMonB,EAAMhrB,KAAKiM,IAAIgf,IAAUvlB,KAAKlC,GAC/C1B,EAAE4K,EAAIhH,KAAK9B,IAAM8B,KAAKugB,GAAK+E,EAAMhrB,KAAKwM,IAAIye,IAAUvlB,KAAKhC,GAClD5B,GA6CPnC,QAzCK,SAAiBmC,GACtB,IAAIkpB,EAAK5f,EAAKS,EACVe,EAAKD,EACLrB,GAAKxJ,EAAEwJ,EAAI5F,KAAKlC,IAAMkC,KAAK9B,GAC3B8I,EAAIhH,KAAKugB,IAAMnkB,EAAE4K,EAAIhH,KAAKhC,IAAMgC,KAAK9B,GAErC8B,KAAKolB,GAAK,GACZE,EAAMhrB,KAAKqL,KAAKC,EAAIA,EAAIoB,EAAIA,GAC5BtB,EAAM,IAEN4f,GAAOhrB,KAAKqL,KAAKC,EAAIA,EAAIoB,EAAIA,GAC7BtB,GAAO,GAGT,IAAI6f,EAAQ,EAMZ,GAJY,IAARD,IACFC,EAAQjrB,KAAKmU,MAAM/I,EAAME,EAAGF,EAAMsB,IAGxB,IAARse,GAAatlB,KAAKolB,GAAK,GAKzB,GAJA1f,EAAM,EAAI1F,KAAKolB,GACfjf,EAAK7L,KAAK2L,IAAIqf,GAAOtlB,KAAK9D,EAAI8D,KAAKqlB,IAAK3f,IAG3B,QAFbwB,EAAMI,EAAMtH,KAAK6G,EAAGV,IAGlB,OAAO,UAGTe,GAAO7M,EAMT,OAHA4M,EAAME,EAAWoe,EAAQvlB,KAAKolB,GAAKplB,KAAK7C,OACxCf,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,gDAAiD,0BAA2B,8BAA+B,8BAA+B,QCjBvJ,IACP,IACEZ,KApHK,WACL3G,KAAK9D,EAAI,YACT8D,KAAK4G,GAAK,iBACV5G,KAAK6G,EAAIvM,KAAKqL,KAAK3F,KAAK4G,IAEnB5G,KAAKpD,OACRoD,KAAKpD,KAAO,kBAGToD,KAAK7C,QACR6C,KAAK7C,MAAQ,mBAKV6C,KAAK9B,KACR8B,KAAK9B,GAAK,OAGZ8B,KAAKwlB,IAAM,iBAGXxlB,KAAKylB,IAAM,EAAIzlB,KAAKwlB,IACpBxlB,KAAK0lB,IAAM1lB,KAAKpD,KAChBoD,KAAKohB,GAAKphB,KAAK4G,GACf5G,KAAK6G,EAAIvM,KAAKqL,KAAK3F,KAAKohB,IACxBphB,KAAK2lB,KAAOrrB,KAAKqL,KAAK,EAAI3F,KAAKohB,GAAK9mB,KAAK2L,IAAI3L,KAAKwM,IAAI9G,KAAK0lB,KAAM,IAAM,EAAI1lB,KAAKohB,KAChFphB,KAAK4lB,GAAK,iBACV5lB,KAAK6lB,GAAKvrB,KAAK0hB,KAAK1hB,KAAKiM,IAAIvG,KAAK0lB,KAAO1lB,KAAK2lB,MAC9C3lB,KAAK6b,EAAIvhB,KAAK2L,KAAK,EAAIjG,KAAK6G,EAAIvM,KAAKiM,IAAIvG,KAAK0lB,OAAS,EAAI1lB,KAAK6G,EAAIvM,KAAKiM,IAAIvG,KAAK0lB,MAAO1lB,KAAK2lB,KAAO3lB,KAAK6G,EAAI,GAC9G7G,KAAK7B,EAAI7D,KAAK4L,IAAIlG,KAAK6lB,GAAK,EAAI7lB,KAAKwlB,KAAOlrB,KAAK2L,IAAI3L,KAAK4L,IAAIlG,KAAK0lB,IAAM,EAAI1lB,KAAKwlB,KAAMxlB,KAAK2lB,MAAQ3lB,KAAK6b,EAC1G7b,KAAKuhB,GAAKvhB,KAAK9B,GACf8B,KAAK8lB,GAAK9lB,KAAK9D,EAAI5B,KAAKqL,KAAK,EAAI3F,KAAKohB,KAAO,EAAIphB,KAAKohB,GAAK9mB,KAAK2L,IAAI3L,KAAKiM,IAAIvG,KAAK0lB,KAAM,IACxF1lB,KAAK+lB,GAAK,iBACV/lB,KAAK0H,EAAIpN,KAAKiM,IAAIvG,KAAK+lB,IACvB/lB,KAAKgmB,IAAMhmB,KAAKuhB,GAAKvhB,KAAK8lB,GAAKxrB,KAAK4L,IAAIlG,KAAK+lB,IAC7C/lB,KAAKimB,GAAKjmB,KAAKylB,IAAMzlB,KAAK4lB,IAiF1B5rB,QAzEK,SAAiBoC,GACtB,IAAI8pB,EAAK5B,EAAG6B,EAAQzL,EAAGgB,EAAG0K,EAAKC,EAC3Bpf,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACR8T,EAAY3T,EAAWF,EAAMjH,KAAK7C,OAkBtC,OAfA+oB,EAAM5rB,KAAK2L,KAAK,EAAIjG,KAAK6G,EAAIvM,KAAKiM,IAAIW,KAAS,EAAIlH,KAAK6G,EAAIvM,KAAKiM,IAAIW,IAAOlH,KAAK2lB,KAAO3lB,KAAK6G,EAAI,GACjGyd,EAAI,GAAKhqB,KAAKgM,KAAKtG,KAAK7B,EAAI7D,KAAK2L,IAAI3L,KAAK4L,IAAIgB,EAAM,EAAIlH,KAAKwlB,KAAMxlB,KAAK2lB,MAAQO,GAAOlmB,KAAKwlB,KAC5FW,GAAUrL,EAAY9a,KAAK2lB,KAC3BjL,EAAIpgB,KAAK0hB,KAAK1hB,KAAKwM,IAAI9G,KAAKimB,IAAM3rB,KAAKiM,IAAI+d,GAAKhqB,KAAKiM,IAAIvG,KAAKimB,IAAM3rB,KAAKwM,IAAIwd,GAAKhqB,KAAKwM,IAAIqf,IAC3FzK,EAAIphB,KAAK0hB,KAAK1hB,KAAKwM,IAAIwd,GAAKhqB,KAAKiM,IAAI4f,GAAU7rB,KAAKwM,IAAI4T,IACxD0L,EAAMpmB,KAAK0H,EAAIgU,EACf2K,EAAKrmB,KAAKgmB,IAAM1rB,KAAK2L,IAAI3L,KAAK4L,IAAIlG,KAAK+lB,GAAK,EAAI/lB,KAAKwlB,KAAMxlB,KAAK0H,GAAKpN,KAAK2L,IAAI3L,KAAK4L,IAAIwU,EAAI,EAAI1a,KAAKwlB,KAAMxlB,KAAK0H,GAC/GtL,EAAE4K,EAAIqf,EAAK/rB,KAAKwM,IAAIsf,GAAO,EAC3BhqB,EAAEwJ,EAAIygB,EAAK/rB,KAAKiM,IAAI6f,GAAO,EAEtBpmB,KAAKsmB,QACRlqB,EAAE4K,IAAM,EACR5K,EAAEwJ,IAAM,GAGHxJ,GAoDPnC,QAhDK,SAAiBmC,GACtB,IAAIkoB,EAAG6B,EAAQzL,EAAGgB,EAAQ2K,EAAIE,EAC1BC,EAKA/H,EAAMriB,EAAEwJ,EACZxJ,EAAEwJ,EAAIxJ,EAAE4K,EACR5K,EAAE4K,EAAIyX,EAEDze,KAAKsmB,QACRlqB,EAAE4K,IAAM,EACR5K,EAAEwJ,IAAM,GAGVygB,EAAK/rB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GAEnC0U,EADMphB,KAAKmU,MAAMrS,EAAE4K,EAAG5K,EAAEwJ,GACdtL,KAAKiM,IAAIvG,KAAK+lB,IACxBrL,EAAI,GAAKpgB,KAAKgM,KAAKhM,KAAK2L,IAAIjG,KAAKgmB,IAAMK,EAAI,EAAIrmB,KAAK0H,GAAKpN,KAAK4L,IAAIlG,KAAK+lB,GAAK,EAAI/lB,KAAKwlB,MAAQxlB,KAAKwlB,KAClGlB,EAAIhqB,KAAK0hB,KAAK1hB,KAAKwM,IAAI9G,KAAKimB,IAAM3rB,KAAKiM,IAAImU,GAAKpgB,KAAKiM,IAAIvG,KAAKimB,IAAM3rB,KAAKwM,IAAI4T,GAAKpgB,KAAKwM,IAAI4U,IAC3FyK,EAAS7rB,KAAK0hB,KAAK1hB,KAAKwM,IAAI4T,GAAKpgB,KAAKiM,IAAImV,GAAKphB,KAAKwM,IAAIwd,IACxDloB,EAAEwJ,EAAI5F,KAAK7C,MAAQgpB,EAASnmB,KAAK2lB,KACjCY,EAAMjC,EACNkC,EAAK,EACL,IAAIpY,EAAO,EAEX,GACEhS,EAAE4K,EAAI,GAAK1M,KAAKgM,KAAKhM,KAAK2L,IAAIjG,KAAK7B,GAAI,EAAI6B,KAAK2lB,MAAQrrB,KAAK2L,IAAI3L,KAAK4L,IAAIoe,EAAI,EAAItkB,KAAKwlB,KAAM,EAAIxlB,KAAK2lB,MAAQrrB,KAAK2L,KAAK,EAAIjG,KAAK6G,EAAIvM,KAAKiM,IAAIggB,KAAS,EAAIvmB,KAAK6G,EAAIvM,KAAKiM,IAAIggB,IAAOvmB,KAAK6G,EAAI,IAAM7G,KAAKwlB,KAEpMlrB,KAAKuL,IAAI0gB,EAAMnqB,EAAE4K,GAAK,QACxBwf,EAAK,GAGPD,EAAMnqB,EAAE4K,EACRoH,GAAQ,QACM,IAAPoY,GAAYpY,EAAO,IAE5B,OAAIA,GAAQ,GACH,KAGFhS,GAOPmL,MALiB,CAAC,SAAU,WCnHf,SAAS,GAACkf,EAAItO,EAAIiJ,EAAIsF,EAAI3gB,GACvC,OAAO0gB,EAAK1gB,EAAMoS,EAAK7d,KAAKiM,IAAI,EAAIR,GAAOqb,EAAK9mB,KAAKiM,IAAI,EAAIR,GAAO2gB,EAAKpsB,KAAKiM,IAAI,EAAIR,GCDzE,SAAS,GAACH,GACvB,OAAO,EAAI,IAAOA,GAAK,EAAIA,EAAI,IAAM,EAAI,KAAOA,ICDnC,SAAS,GAACA,GACvB,MAAO,KAAQA,GAAK,EAAI,IAAOA,GAAK,EAAI,OAAUA,ICDrC,SAAS,GAACA,GACvB,MAAO,UAAaA,EAAIA,GAAK,EAAI,IAAOA,GCD3B,SAAS,GAACA,GACvB,OAAOA,EAAIA,EAAIA,GAAK,GAAK,MCDZ,SAAS,GAAC1J,EAAG2K,EAAGrB,GAC7B,IAAIsW,EAAOjV,EAAIrB,EACf,OAAOtJ,EAAI5B,KAAKqL,KAAK,EAAImW,EAAOA,GCAnB,SAAS,GAAClW,GACvB,OAAOtL,KAAKuL,IAAID,GAAKvL,EAAUuL,EAAIA,EAAIE,EAAKF,GAAKtL,KAAKC,GCHzC,SAAS,GAAC+gB,EAAImL,EAAItO,EAAIiJ,EAAIsF,GACvC,IAAI3gB,EACAK,EACJL,EAAMuV,EAAKmL,EAEX,IAAK,IAAI9tB,EAAI,EAAGA,EAAI,GAAIA,IAItB,GAFAoN,GADAK,GAAQkV,GAAMmL,EAAK1gB,EAAMoS,EAAK7d,KAAKiM,IAAI,EAAIR,GAAOqb,EAAK9mB,KAAKiM,IAAI,EAAIR,GAAO2gB,EAAKpsB,KAAKiM,IAAI,EAAIR,MAAU0gB,EAAK,EAAItO,EAAK7d,KAAKwM,IAAI,EAAIf,GAAO,EAAIqb,EAAK9mB,KAAKwM,IAAI,EAAIf,GAAO,EAAI2gB,EAAKpsB,KAAKwM,IAAI,EAAIf,IAGxLzL,KAAKuL,IAAIO,IAAS,MACpB,OAAOL,EAKX,OAAOkK,IC+EF,IACP,IACEtJ,KAtFK,WACA3G,KAAKkD,SACRlD,KAAKymB,GAAKE,GAAK3mB,KAAK4G,IACpB5G,KAAKmY,GAAKyO,GAAK5mB,KAAK4G,IACpB5G,KAAKohB,GAAKyF,GAAK7mB,KAAK4G,IACpB5G,KAAK0mB,GAAKI,GAAK9mB,KAAK4G,IACpB5G,KAAK6a,IAAM7a,KAAK9D,EAAI6qB,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI1mB,KAAKpD,QAiFpE5C,QA3EK,SAAiBoC,GAGtB,IAAIwJ,EAAGoB,EACHggB,EAAM5qB,EAAEwJ,EACRG,EAAM3J,EAAE4K,EAGZ,GAFAggB,EAAM7f,EAAW6f,EAAMhnB,KAAK7C,OAExB6C,KAAKkD,OACP0C,EAAI5F,KAAK9D,EAAI5B,KAAK0hB,KAAK1hB,KAAKwM,IAAIf,GAAOzL,KAAKiM,IAAIygB,IAChDhgB,EAAIhH,KAAK9D,GAAK5B,KAAKmU,MAAMnU,KAAK4L,IAAIH,GAAMzL,KAAKwM,IAAIkgB,IAAQhnB,KAAKpD,UACzD,CAEL,IAAI4I,EAASlL,KAAKiM,IAAIR,GAClBN,EAASnL,KAAKwM,IAAIf,GAClBkhB,EAAKC,GAAGlnB,KAAK9D,EAAG8D,KAAK6G,EAAGrB,GACxB2hB,EAAK7sB,KAAK4L,IAAIH,GAAOzL,KAAK4L,IAAIH,GAC9BkV,EAAK+L,EAAM1sB,KAAKwM,IAAIf,GACpBqhB,EAAMnM,EAAKA,EACXoM,EAAKrnB,KAAK4G,GAAKnB,EAASA,GAAU,EAAIzF,KAAK4G,IAE/ChB,EAAIqhB,EAAKhM,GAAM,EAAImM,EAAMD,GAAM,EAAI,GAAK,EAAIA,EAAK,EAAIE,GAAMD,EAAM,MACjEpgB,EAFShH,KAAK9D,EAAI6qB,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI3gB,GAElD/F,KAAK6a,IAAMoM,EAAKzhB,EAASC,EAAS2hB,GAAO,IAAO,EAAID,EAAK,EAAIE,GAAMD,EAAM,IAKpF,OAFAhrB,EAAEwJ,EAAIA,EAAI5F,KAAKlC,GACf1B,EAAE4K,EAAIA,EAAIhH,KAAKhC,GACR5B,GAiDPnC,QA5CK,SAAiBmC,GACtBA,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GACZ,IAEI+H,EAAKihB,EAFLphB,EAAIxJ,EAAEwJ,EAAI5F,KAAK9D,EACf8K,EAAI5K,EAAE4K,EAAIhH,KAAK9D,EAGnB,GAAI8D,KAAKkD,OAAQ,CACf,IAAIokB,EAAKtgB,EAAIhH,KAAKpD,KAClBmJ,EAAMzL,KAAK0hB,KAAK1hB,KAAKiM,IAAI+gB,GAAMhtB,KAAKwM,IAAIlB,IACxCohB,EAAM1sB,KAAKmU,MAAMnU,KAAK4L,IAAIN,GAAItL,KAAKwM,IAAIwgB,QAClC,CAEL,IACIvE,EAAOwE,GADDvnB,KAAK6a,IAAM7a,KAAK9D,EAAI8K,EACRhH,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,IAEtD,GAAIpsB,KAAKuL,IAAIvL,KAAKuL,IAAIkd,GAAQ1oB,IAAYG,EAQxC,OAPA4B,EAAEwJ,EAAI5F,KAAK7C,MACXf,EAAE4K,EAAI3M,EAEF2M,EAAI,IACN5K,EAAE4K,IAAM,GAGH5K,EAGT,IAAIorB,EAAMN,GAAGlnB,KAAK9D,EAAG8D,KAAK6G,EAAGvM,KAAKiM,IAAIwc,IAClC0E,EAAMD,EAAMA,EAAMA,EAAMxnB,KAAK9D,EAAI8D,KAAK9D,GAAK,EAAI8D,KAAK4G,IACpD8gB,EAAMptB,KAAK2L,IAAI3L,KAAK4L,IAAI6c,GAAO,GAC/B4E,EAAK/hB,EAAI5F,KAAK9D,EAAIsrB,EAClBI,EAAMD,EAAKA,EACf5hB,EAAMgd,EAAOyE,EAAMltB,KAAK4L,IAAI6c,GAAQ0E,EAAME,EAAKA,GAAM,IAAO,EAAI,EAAID,GAAOC,EAAKA,EAAK,IACrFX,EAAMW,GAAM,EAAIC,GAAOF,EAAM,GAAK,EAAI,EAAIA,GAAOA,EAAME,EAAM,KAAOttB,KAAKwM,IAAIic,GAK/E,OAFA3mB,EAAEwJ,EAAIuB,EAAW6f,EAAMhnB,KAAK7C,OAC5Bf,EAAE4K,EAAI6gB,GAAW9hB,GACV3J,GAOPmL,MALiB,CAAC,UAAW,kBAAmB,SC9FnC,SAAS,GAAChC,EAAQC,GAC/B,IAAIE,EAEJ,OAAIH,EAAS,MAEH,EAAIA,EAASA,IAAWC,GAAU,GAD1CE,EAAMH,EAASC,GACqCE,GAAO,GAAMH,EAASjL,KAAK6J,KAAK,EAAIuB,IAAQ,EAAIA,KAE7F,EAAIF,ECqRf,IAAIsiB,GAAM,kBACNC,GAAM,mBACNC,GAAM,mBACNC,GAAM,mBACNC,GAAM,kBACNC,GAAM,oBAqBH,IACP,IACExhB,KAxSK,WACL,IAWMnB,EAXF2L,EAAI7W,KAAKuL,IAAI7F,KAAKpD,MAUtB,GARItC,KAAKuL,IAAIsL,EAAI9W,GAAWG,EAC1BwF,KAAKooB,KAAOpoB,KAAKpD,KAAO,EAAIoD,KAAKqoB,OAASroB,KAAKsoB,OACtChuB,KAAKuL,IAAIsL,GAAK3W,EACvBwF,KAAKooB,KAAOpoB,KAAKuoB,MAEjBvoB,KAAKooB,KAAOpoB,KAAKwoB,MAGfxoB,KAAK4G,GAAK,EAMZ,OAJA5G,KAAKyoB,GAAKC,GAAM1oB,KAAK6G,EAAG,GACxB7G,KAAK2oB,IAAM,IAAO,EAAI3oB,KAAK4G,IAC3B5G,KAAK4oB,IAoQT,SAAiBhiB,GACf,IAAIuK,EACA0X,EAAM,GASV,OARAA,EAAI,GAAKjiB,EAAKkhB,GACd3W,EAAIvK,EAAKA,EACTiiB,EAAI,IAAM1X,EAAI4W,GACdc,EAAI,GAAK1X,EAAI8W,GACb9W,GAAKvK,EACLiiB,EAAI,IAAM1X,EAAI6W,GACda,EAAI,IAAM1X,EAAI+W,GACdW,EAAI,GAAK1X,EAAIgX,GACNU,EA/QMC,CAAQ9oB,KAAK4G,IAEhB5G,KAAKooB,MACX,KAAKpoB,KAAKsoB,OAIV,KAAKtoB,KAAKqoB,OACRroB,KAAKsnB,GAAK,EACV,MAEF,KAAKtnB,KAAKuoB,MACRvoB,KAAK+oB,GAAKzuB,KAAKqL,KAAK,GAAM3F,KAAKyoB,IAC/BzoB,KAAKsnB,GAAK,EAAItnB,KAAK+oB,GACnB/oB,KAAKgpB,IAAM,EACXhpB,KAAKipB,IAAM,GAAMjpB,KAAKyoB,GACtB,MAEF,KAAKzoB,KAAKwoB,MACRxoB,KAAK+oB,GAAKzuB,KAAKqL,KAAK,GAAM3F,KAAKyoB,IAC/BjjB,EAASlL,KAAKiM,IAAIvG,KAAKpD,MACvBoD,KAAKkpB,MAAQR,GAAM1oB,KAAK6G,EAAGrB,GAAUxF,KAAKyoB,GAC1CzoB,KAAKmpB,MAAQ7uB,KAAKqL,KAAK,EAAI3F,KAAKkpB,MAAQlpB,KAAKkpB,OAC7ClpB,KAAKsnB,GAAKhtB,KAAKwM,IAAI9G,KAAKpD,OAAStC,KAAKqL,KAAK,EAAI3F,KAAK4G,GAAKpB,EAASA,GAAUxF,KAAK+oB,GAAK/oB,KAAKmpB,OAC3FnpB,KAAKipB,KAAOjpB,KAAKgpB,IAAMhpB,KAAK+oB,IAAM/oB,KAAKsnB,GACvCtnB,KAAKgpB,KAAOhpB,KAAKsnB,QAIjBtnB,KAAKooB,OAASpoB,KAAKwoB,QACrBxoB,KAAKwiB,OAASloB,KAAKiM,IAAIvG,KAAKpD,MAC5BoD,KAAKoiB,OAAS9nB,KAAKwM,IAAI9G,KAAKpD,QA2PhC5C,QApPK,SAAiBoC,GAGtB,IAAIwJ,EAAGoB,EAAGoiB,EAAQC,EAAQ7jB,EAAQ8jB,EAAGC,EAAMC,EAAMprB,EAAGqH,EAChDuhB,EAAM5qB,EAAEwJ,EACRG,EAAM3J,EAAE4K,EAGZ,GAFAggB,EAAM7f,EAAW6f,EAAMhnB,KAAK7C,OAExB6C,KAAKkD,QAKP,GAJAsC,EAASlL,KAAKiM,IAAIR,GAClBN,EAASnL,KAAKwM,IAAIf,GAClBqjB,EAAS9uB,KAAKwM,IAAIkgB,GAEdhnB,KAAKooB,OAASpoB,KAAKwoB,OAASxoB,KAAKooB,OAASpoB,KAAKuoB,MAAO,CAGxD,IAFAvhB,EAAIhH,KAAKooB,OAASpoB,KAAKuoB,MAAQ,EAAI9iB,EAAS2jB,EAAS,EAAIppB,KAAKwiB,OAAShd,EAASxF,KAAKoiB,OAAS3c,EAAS2jB,IAE9F5uB,EACP,OAAO,KAIToL,GADAoB,EAAI1M,KAAKqL,KAAK,EAAIqB,IACVvB,EAASnL,KAAKiM,IAAIygB,GAC1BhgB,GAAKhH,KAAKooB,OAASpoB,KAAKuoB,MAAQ/iB,EAASxF,KAAKoiB,OAAS5c,EAASxF,KAAKwiB,OAAS/c,EAAS2jB,OAClF,GAAIppB,KAAKooB,OAASpoB,KAAKsoB,QAAUtoB,KAAKooB,OAASpoB,KAAKqoB,OAAQ,CAKjE,GAJIroB,KAAKooB,OAASpoB,KAAKsoB,SACrBc,GAAUA,GAGR9uB,KAAKuL,IAAIE,EAAM/F,KAAKpD,MAAQpC,EAC9B,OAAO,KAGTwM,EAAIrM,EAAe,GAANoL,EAEbH,GADAoB,EAAI,GAAKhH,KAAKooB,OAASpoB,KAAKqoB,OAAS/tB,KAAKwM,IAAIE,GAAK1M,KAAKiM,IAAIS,KACpD1M,KAAKiM,IAAIygB,GACjBhgB,GAAKoiB,OAEF,CAcL,OAbAG,EAAO,EACPC,EAAO,EACPprB,EAAI,EACJgrB,EAAS9uB,KAAKwM,IAAIkgB,GAClBqC,EAAS/uB,KAAKiM,IAAIygB,GAClBxhB,EAASlL,KAAKiM,IAAIR,GAClBujB,EAAIZ,GAAM1oB,KAAK6G,EAAGrB,GAEdxF,KAAKooB,OAASpoB,KAAKwoB,OAASxoB,KAAKooB,OAASpoB,KAAKuoB,QACjDgB,EAAOD,EAAItpB,KAAKyoB,GAChBe,EAAOlvB,KAAKqL,KAAK,EAAI4jB,EAAOA,IAGtBvpB,KAAKooB,MACX,KAAKpoB,KAAKwoB,MACRpqB,EAAI,EAAI4B,KAAKkpB,MAAQK,EAAOvpB,KAAKmpB,MAAQK,EAAOJ,EAChD,MAEF,KAAKppB,KAAKuoB,MACRnqB,EAAI,EAAIorB,EAAOJ,EACf,MAEF,KAAKppB,KAAKsoB,OACRlqB,EAAI/D,EAAU0L,EACdujB,EAAItpB,KAAKyoB,GAAKa,EACd,MAEF,KAAKtpB,KAAKqoB,OACRjqB,EAAI2H,EAAM1L,EACVivB,EAAItpB,KAAKyoB,GAAKa,EAIlB,GAAIhvB,KAAKuL,IAAIzH,GAAK5D,EAChB,OAAO,KAGT,OAAQwF,KAAKooB,MACX,KAAKpoB,KAAKwoB,MACV,KAAKxoB,KAAKuoB,MACRnqB,EAAI9D,KAAKqL,KAAK,EAAIvH,GAGhB4I,EADEhH,KAAKooB,OAASpoB,KAAKwoB,MACjBxoB,KAAKipB,IAAM7qB,GAAK4B,KAAKmpB,MAAQI,EAAOvpB,KAAKkpB,MAAQM,EAAOJ,IAEvDhrB,EAAI9D,KAAKqL,KAAK,GAAK,EAAI6jB,EAAOJ,KAAYG,EAAOvpB,KAAKipB,IAG7DrjB,EAAI5F,KAAKgpB,IAAM5qB,EAAIorB,EAAOH,EAC1B,MAEF,KAAKrpB,KAAKsoB,OACV,KAAKtoB,KAAKqoB,OACJiB,GAAK,GACP1jB,GAAKxH,EAAI9D,KAAKqL,KAAK2jB,IAAMD,EACzBriB,EAAIoiB,GAAUppB,KAAKooB,OAASpoB,KAAKqoB,OAASjqB,GAAKA,IAE/CwH,EAAIoB,EAAI,GAShB,OAFA5K,EAAEwJ,EAAI5F,KAAK9D,EAAI0J,EAAI5F,KAAKlC,GACxB1B,EAAE4K,EAAIhH,KAAK9D,EAAI8K,EAAIhH,KAAKhC,GACjB5B,GA6IPnC,QAxIK,SAAiBmC,GACtBA,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GACZ,IAEIgpB,EAAKjhB,EAAK0jB,EAAKC,EAAKJ,EAAG1J,EAAK+J,EA0HjBC,EAAMf,EACjB1X,EA7HAvL,EAAIxJ,EAAEwJ,EAAI5F,KAAK9D,EACf8K,EAAI5K,EAAE4K,EAAIhH,KAAK9D,EAGnB,GAAI8D,KAAKkD,OAAQ,CACf,IACIqd,EADAsJ,EAAO,EAEPC,EAAO,EAIX,IAFA/jB,EAAW,IADXwa,EAAKjmB,KAAKqL,KAAKC,EAAIA,EAAIoB,EAAIA,KAGjB,EACR,OAAO,KAUT,OAPAjB,EAAM,EAAIzL,KAAK0hB,KAAKjW,GAEhB/F,KAAKooB,OAASpoB,KAAKwoB,OAASxoB,KAAKooB,OAASpoB,KAAKuoB,QACjDuB,EAAOxvB,KAAKiM,IAAIR,GAChB8jB,EAAOvvB,KAAKwM,IAAIf,IAGV/F,KAAKooB,MACX,KAAKpoB,KAAKuoB,MACRxiB,EAAMzL,KAAKuL,IAAI0a,IAAO/lB,EAAQ,EAAIF,KAAK0hB,KAAKhV,EAAI8iB,EAAOvJ,GACvD3a,GAAKkkB,EACL9iB,EAAI6iB,EAAOtJ,EACX,MAEF,KAAKvgB,KAAKwoB,MACRziB,EAAMzL,KAAKuL,IAAI0a,IAAO/lB,EAAQwF,KAAKpD,KAAOtC,KAAK0hB,KAAK6N,EAAO7pB,KAAKwiB,OAASxb,EAAI8iB,EAAO9pB,KAAKoiB,OAAS7B,GAClG3a,GAAKkkB,EAAO9pB,KAAKoiB,OACjBpb,GAAK6iB,EAAOvvB,KAAKiM,IAAIR,GAAO/F,KAAKwiB,QAAUjC,EAC3C,MAEF,KAAKvgB,KAAKsoB,OACRthB,GAAKA,EACLjB,EAAM1L,EAAU0L,EAChB,MAEF,KAAK/F,KAAKqoB,OACRtiB,GAAO1L,EAIX2sB,EAAY,IAANhgB,GAAYhH,KAAKooB,OAASpoB,KAAKuoB,OAASvoB,KAAKooB,OAASpoB,KAAKwoB,MAAaluB,KAAKmU,MAAM7I,EAAGoB,GAAlB,MACrE,CAGL,GAFA2iB,EAAK,EAED3pB,KAAKooB,OAASpoB,KAAKwoB,OAASxoB,KAAKooB,OAASpoB,KAAKuoB,MAAO,CAKxD,GAJA3iB,GAAK5F,KAAKsnB,GACVtgB,GAAKhH,KAAKsnB,IACV1H,EAAMtlB,KAAKqL,KAAKC,EAAIA,EAAIoB,EAAIA,IAElBxM,EAGR,OAFA4B,EAAEwJ,EAAI5F,KAAK7C,MACXf,EAAE4K,EAAIhH,KAAKpD,KACJR,EAGTstB,EAAM,EAAIpvB,KAAK0hB,KAAK,GAAM4D,EAAM5f,KAAK+oB,IACrCU,EAAMnvB,KAAKwM,IAAI4iB,GACf9jB,GAAK8jB,EAAMpvB,KAAKiM,IAAImjB,GAEhB1pB,KAAKooB,OAASpoB,KAAKwoB,OACrBmB,EAAKF,EAAMzpB,KAAKkpB,MAAQliB,EAAI0iB,EAAM1pB,KAAKmpB,MAAQvJ,EAC/C0J,EAAItpB,KAAKyoB,GAAKkB,EACd3iB,EAAI4Y,EAAM5f,KAAKmpB,MAAQM,EAAMziB,EAAIhH,KAAKkpB,MAAQQ,IAE9CC,EAAK3iB,EAAI0iB,EAAM9J,EACf0J,EAAItpB,KAAKyoB,GAAKkB,EACd3iB,EAAI4Y,EAAM6J,QAEP,GAAIzpB,KAAKooB,OAASpoB,KAAKsoB,QAAUtoB,KAAKooB,OAASpoB,KAAKqoB,OAAQ,CAOjE,GANIroB,KAAKooB,OAASpoB,KAAKsoB,SACrBthB,GAAKA,KAGPsiB,EAAI1jB,EAAIA,EAAIoB,EAAIA,GAKd,OAFA5K,EAAEwJ,EAAI5F,KAAK7C,MACXf,EAAE4K,EAAIhH,KAAKpD,KACJR,EAGTutB,EAAK,EAAIL,EAAItpB,KAAKyoB,GAEdzoB,KAAKooB,OAASpoB,KAAKqoB,SACrBsB,GAAMA,GAIV3C,EAAM1sB,KAAKmU,MAAM7I,EAAGoB,GA+BP4iB,EA9BCtvB,KAAK0hB,KAAK2N,GA8BLd,EA9BU7oB,KAAK4oB,IA+BhCzX,EAAIyY,EAAOA,EA/Bb7jB,EAgCK6jB,EAAOf,EAAI,GAAKvuB,KAAKiM,IAAI4K,GAAK0X,EAAI,GAAKvuB,KAAKiM,IAAI4K,EAAIA,GAAK0X,EAAI,GAAKvuB,KAAKiM,IAAI4K,EAAIA,EAAIA,GA3B1F,OAFA/U,EAAEwJ,EAAIuB,EAAWnH,KAAK7C,MAAQ6pB,GAC9B5qB,EAAE4K,EAAIjB,EACC3J,GAmCPmL,MALiB,CAAC,+BAAgC,+BAAgC,QAMlF8gB,OAnTkB,EAoTlBC,OAnTkB,EAoTlBC,MAnTiB,EAoTjBC,MAnTiB,GCZJ,SAAS,GAAC5iB,GAKvB,OAJItL,KAAKuL,IAAID,GAAK,IAChBA,EAAIA,EAAI,EAAI,GAAK,GAGZtL,KAAK0hB,KAAKpW,GCgHZ,IACP,IACEe,KAlHK,WACDrM,KAAKuL,IAAI7F,KAAKlD,KAAOkD,KAAKhD,MAAQxC,IAItCwF,KAAK8b,KAAO9b,KAAK5B,EAAI4B,KAAK9D,EAC1B8D,KAAK4G,GAAK,EAAItM,KAAK2L,IAAIjG,KAAK8b,KAAM,GAClC9b,KAAK0mB,GAAKpsB,KAAKqL,KAAK3F,KAAK4G,IACzB5G,KAAK+pB,OAASzvB,KAAKiM,IAAIvG,KAAKlD,MAC5BkD,KAAKgqB,OAAS1vB,KAAKwM,IAAI9G,KAAKlD,MAC5BkD,KAAKiqB,GAAKjqB,KAAK+pB,OACf/pB,KAAK0F,IAAM1F,KAAK+pB,OAChB/pB,KAAKggB,IAAMjZ,EAAM/G,KAAK0mB,GAAI1mB,KAAK+pB,OAAQ/pB,KAAKgqB,QAC5ChqB,KAAKkqB,IAAMxB,GAAM1oB,KAAK0mB,GAAI1mB,KAAK+pB,OAAQ/pB,KAAKgqB,QAC5ChqB,KAAK+pB,OAASzvB,KAAKiM,IAAIvG,KAAKhD,MAC5BgD,KAAKgqB,OAAS1vB,KAAKwM,IAAI9G,KAAKhD,MAC5BgD,KAAKmqB,GAAKnqB,KAAK+pB,OACf/pB,KAAKilB,IAAMle,EAAM/G,KAAK0mB,GAAI1mB,KAAK+pB,OAAQ/pB,KAAKgqB,QAC5ChqB,KAAKoqB,IAAM1B,GAAM1oB,KAAK0mB,GAAI1mB,KAAK+pB,OAAQ/pB,KAAKgqB,QAC5ChqB,KAAK+pB,OAASzvB,KAAKiM,IAAIvG,KAAKpD,MAC5BoD,KAAKgqB,OAAS1vB,KAAKwM,IAAI9G,KAAKpD,MAC5BoD,KAAKqqB,GAAKrqB,KAAK+pB,OACf/pB,KAAKsqB,IAAM5B,GAAM1oB,KAAK0mB,GAAI1mB,KAAK+pB,OAAQ/pB,KAAKgqB,QAExC1vB,KAAKuL,IAAI7F,KAAKlD,KAAOkD,KAAKhD,MAAQxC,EACpCwF,KAAKuqB,KAAOvqB,KAAKggB,IAAMhgB,KAAKggB,IAAMhgB,KAAKilB,IAAMjlB,KAAKilB,MAAQjlB,KAAKoqB,IAAMpqB,KAAKkqB,KAE1ElqB,KAAKuqB,IAAMvqB,KAAK0F,IAGlB1F,KAAKmb,EAAInb,KAAKggB,IAAMhgB,KAAKggB,IAAMhgB,KAAKuqB,IAAMvqB,KAAKkqB,IAC/ClqB,KAAKugB,GAAKvgB,KAAK9D,EAAI5B,KAAKqL,KAAK3F,KAAKmb,EAAInb,KAAKuqB,IAAMvqB,KAAKsqB,KAAOtqB,KAAKuqB,MAoFlEvwB,QA/EK,SAAiBoC,GACtB,IAAI6K,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACZhH,KAAK+a,QAAUzgB,KAAKiM,IAAIW,GACxBlH,KAAKgb,QAAU1gB,KAAKwM,IAAII,GACxB,IAAIsjB,EAAK9B,GAAM1oB,KAAK0mB,GAAI1mB,KAAK+a,QAAS/a,KAAKgb,SACvCsK,EAAMtlB,KAAK9D,EAAI5B,KAAKqL,KAAK3F,KAAKmb,EAAInb,KAAKuqB,IAAMC,GAAMxqB,KAAKuqB,IACxDhF,EAAQvlB,KAAKuqB,IAAMpjB,EAAWF,EAAMjH,KAAK7C,OACzCyI,EAAI0f,EAAMhrB,KAAKiM,IAAIgf,GAASvlB,KAAKlC,GACjCkJ,EAAIhH,KAAKugB,GAAK+E,EAAMhrB,KAAKwM,IAAIye,GAASvlB,KAAKhC,GAG/C,OAFA5B,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GAoEPnC,QAlEK,SAAiBmC,GACtB,IAAIkpB,EAAKkF,EAAI9kB,EAAK6f,EAAOte,EAAKC,EA8B9B,OA7BA9K,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,EAAIhH,KAAKugB,GAAKnkB,EAAE4K,EAAIhH,KAAKhC,GAEvBgC,KAAKuqB,KAAO,GACdjF,EAAMhrB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GACpCtB,EAAM,IAEN4f,GAAOhrB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GACrCtB,GAAO,GAGT6f,EAAQ,EAEI,IAARD,IACFC,EAAQjrB,KAAKmU,MAAM/I,EAAMtJ,EAAEwJ,EAAGF,EAAMtJ,EAAE4K,IAGxCtB,EAAM4f,EAAMtlB,KAAKuqB,IAAMvqB,KAAK9D,EAExB8D,KAAKkD,OACPgE,EAAM5M,KAAK0hB,MAAMhc,KAAKmb,EAAIzV,EAAMA,IAAQ,EAAI1F,KAAKuqB,OAEjDC,GAAMxqB,KAAKmb,EAAIzV,EAAMA,GAAO1F,KAAKuqB,IACjCrjB,EAAMlH,KAAKyqB,MAAMzqB,KAAK0mB,GAAI8D,IAG5BvjB,EAAME,EAAWoe,EAAQvlB,KAAKuqB,IAAMvqB,KAAK7C,OACzCf,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAoCPmL,MALiB,CAAC,0BAA2B,SAAU,OAMvDkjB,MA/BK,SAAellB,EAAQilB,GAC5B,IAAIhlB,EAAgBE,EAAKM,EAAKI,EAC1BL,EAAM2kB,GAAM,GAAMF,GAEtB,GAAIjlB,EAAS/K,EACX,OAAOuL,EAKT,IAFA,IAAI4kB,EAASplB,EAASA,EAEb5M,EAAI,EAAGA,GAAK,GAAIA,IAQvB,GAFAoN,GADAK,EAAO,IADPJ,EAAM,GADNN,EAAMH,GAFNC,EAASlL,KAAKiM,IAAIR,KAGFL,GACGM,EAHV1L,KAAKwM,IAAIf,IAGiBykB,GAAM,EAAIG,GAAUnlB,EAASQ,EAAM,GAAMT,EAASjL,KAAK6J,KAAK,EAAIuB,IAAQ,EAAIA,KAG3GpL,KAAKuL,IAAIO,IAAS,KACpB,OAAOL,EAIX,OAAO,OCjBF,IACP,IACEY,KA1FK,WAGL3G,KAAK4qB,QAAUtwB,KAAKiM,IAAIvG,KAAKpD,MAC7BoD,KAAK6qB,QAAUvwB,KAAKwM,IAAI9G,KAAKpD,MAE7BoD,KAAK8qB,cAAgB,IAAO9qB,KAAK9D,EACjC8D,KAAK+e,GAAK,GAoFV/kB,QA/EK,SAAiBoC,GACtB,IAAIoJ,EAAQC,EAGRib,EAGAqK,EAMAlP,EACAjW,EAAGoB,EACHC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EA2BZ,OAvBA0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAC7BqI,EAASlL,KAAKiM,IAAIW,GAClBzB,EAASnL,KAAKwM,IAAII,GAClB6jB,EAASzwB,KAAKwM,IAAI4Z,GAEZ,GADN7E,EAAI7b,KAAK4qB,QAAUplB,EAASxF,KAAK6qB,QAAUplB,EAASslB,GAG5C,GAAKzwB,KAAKuL,IAAIgW,IAAMrhB,GAC1BoL,EAAI5F,KAAKlC,GAHL,EAGUkC,KAAK9D,EAAUuJ,EAASnL,KAAKiM,IAAIma,GAAQ7E,EACvD7U,EAAIhH,KAAKhC,GAJL,EAIUgC,KAAK9D,GAAW8D,KAAK6qB,QAAUrlB,EAASxF,KAAK4qB,QAAUnlB,EAASslB,GAAUlP,IAQxFjW,EAAI5F,KAAKlC,GAAKkC,KAAK8qB,cAAgBrlB,EAASnL,KAAKiM,IAAIma,GACrD1Z,EAAIhH,KAAKhC,GAAKgC,KAAK8qB,eAAiB9qB,KAAK6qB,QAAUrlB,EAASxF,KAAK4qB,QAAUnlB,EAASslB,IAGtF3uB,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GAqCPnC,QAnCK,SAAiBmC,GACtB,IAAImkB,EAGAd,EAAMC,EACNvE,EACAlU,EAAKC,EAuBT,OAnBA9K,EAAEwJ,GAAKxJ,EAAEwJ,EAAI5F,KAAKlC,IAAMkC,KAAK9D,EAC7BE,EAAE4K,GAAK5K,EAAE4K,EAAIhH,KAAKhC,IAAMgC,KAAK9D,EAC7BE,EAAEwJ,GAAK5F,KAAK9B,GACZ9B,EAAE4K,GAAKhH,KAAK9B,IAERqiB,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,KACrCmU,EAAI7gB,KAAKmU,MAAM8R,EAAIvgB,KAAK+e,IACxBU,EAAOnlB,KAAKiM,IAAI4U,GAEhBjU,EAAMwjB,IADNhL,EAAOplB,KAAKwM,IAAIqU,IACGnb,KAAK4qB,QAAUxuB,EAAE4K,EAAIyY,EAAOzf,KAAK6qB,QAAUtK,GAC9DtZ,EAAM3M,KAAKmU,MAAMrS,EAAEwJ,EAAI6Z,EAAMc,EAAKvgB,KAAK6qB,QAAUnL,EAAOtjB,EAAE4K,EAAIhH,KAAK4qB,QAAUnL,GAC7ExY,EAAME,EAAWnH,KAAK7C,MAAQ8J,KAE9BC,EAAMlH,KAAKgf,MACX/X,EAAM,GAGR7K,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,SCpCb,IACP,IACEZ,KArDK,WAEA3G,KAAKkD,SACRlD,KAAK9B,GAAK6I,EAAM/G,KAAK6G,EAAGvM,KAAKiM,IAAIvG,KAAK/C,QAAS3C,KAAKwM,IAAI9G,KAAK/C,WAmD/DjD,QA7CK,SAAiBoC,GACtB,IAEIwJ,EAAGoB,EAFHC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAKR0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAEjC,GAAI6C,KAAKkD,OACP0C,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAIwkB,EAAOpmB,KAAKwM,IAAI9G,KAAK/C,QAC5C+J,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAI5B,KAAKiM,IAAIW,GAAO5M,KAAKwM,IAAI9G,KAAK/C,YAChD,CACL,IAAIutB,EAAK9B,GAAM1oB,KAAK6G,EAAGvM,KAAKiM,IAAIW,IAChCtB,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAI8D,KAAK9B,GAAKwiB,EACjC1Z,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAIsuB,EAAK,GAAMxqB,KAAK9B,GAKzC,OAFA9B,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA0BPnC,QArBK,SAAiBmC,GAGtB,IAAI6K,EAAKC,EAYT,OAdA9K,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GAGRgC,KAAKkD,QACP+D,EAAME,EAAWnH,KAAK7C,MAAQf,EAAEwJ,EAAI5F,KAAK9D,EAAI5B,KAAKwM,IAAI9G,KAAK/C,SAC3DiK,EAAM5M,KAAK0hB,KAAK5f,EAAE4K,EAAIhH,KAAK9D,EAAI5B,KAAKwM,IAAI9G,KAAK/C,WAE7CiK,ECrDW,SAAU3B,EAAQ+jB,GAC/B,IAAIxN,EAAO,GAAK,EAAIvW,EAASA,IAAW,EAAIA,GAAUjL,KAAK6J,KAAK,EAAIoB,IAAW,EAAIA,IAEnF,GAAIjL,KAAKuL,IAAIvL,KAAKuL,IAAIyjB,GAAKxN,GAAQ,KACjC,OAAIwN,EAAI,GACE,EAAIjvB,EAELA,EAWX,IANA,IACI+L,EACA2U,EACAC,EACAtV,EAJAK,EAAMzL,KAAK0hB,KAAK,GAAMsN,GAMjB3wB,EAAI,EAAGA,EAAI,GAAIA,IAOtB,GANAoiB,EAAUzgB,KAAKiM,IAAIR,GACnBiV,EAAU1gB,KAAKwM,IAAIf,GACnBL,EAAMH,EAASwV,EAEfhV,GADAK,EAAO9L,KAAK2L,IAAI,EAAIP,EAAMA,EAAK,IAAM,EAAIsV,IAAYsO,GAAK,EAAI/jB,EAASA,GAAUwV,GAAW,EAAIrV,EAAMA,GAAO,GAAMH,EAASjL,KAAK6J,KAAK,EAAIuB,IAAQ,EAAIA,KAGlJpL,KAAKuL,IAAIO,IAAS,MACpB,OAAOL,EAKX,OAAOkK,IDsBC+a,CAAOhrB,KAAK6G,EAAG,EAAIzK,EAAE4K,EAAIhH,KAAK9B,GAAK8B,KAAK9D,GAC9C+K,EAAME,EAAWnH,KAAK7C,MAAQf,EAAEwJ,GAAK5F,KAAK9D,EAAI8D,KAAK9B,MAGrD9B,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,QE/Bb,IACP,IACEZ,KA/BK,WACL3G,KAAKlC,GAAKkC,KAAKlC,IAAM,EACrBkC,KAAKhC,GAAKgC,KAAKhC,IAAM,EACrBgC,KAAKpD,KAAOoD,KAAKpD,MAAQ,EACzBoD,KAAK7C,MAAQ6C,KAAK7C,OAAS,EAC3B6C,KAAK/C,OAAS+C,KAAK/C,QAAU,EAC7B+C,KAAKwf,MAAQxf,KAAKwf,OAAS,wCAC3Bxf,KAAK+e,GAAKzkB,KAAKwM,IAAI9G,KAAK/C,SAyBxBjD,QArBK,SAAiBoC,GACtB,IAAI6K,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACR0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAC7B8tB,EAAOpD,GAAW3gB,EAAMlH,KAAKpD,MAGjC,OAFAR,EAAEwJ,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAIwkB,EAAO1gB,KAAK+e,GACrC3iB,EAAE4K,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAI+uB,EAClB7uB,GAePnC,QAXK,SAAiBmC,GACtB,IAAIwJ,EAAIxJ,EAAEwJ,EACNoB,EAAI5K,EAAE4K,EAGV,OAFA5K,EAAEwJ,EAAIuB,EAAWnH,KAAK7C,OAASyI,EAAI5F,KAAKlC,KAAOkC,KAAK9D,EAAI8D,KAAK+e,KAC7D3iB,EAAE4K,EAAI6gB,GAAW7nB,KAAKpD,MAAQoK,EAAIhH,KAAKhC,IAAMgC,KAAK9D,GAC3CE,GAOPmL,MALiB,CAAC,kBAAmB,0BAA2B,QC8F3D,IACP,IACEZ,KArHK,WAGL3G,KAAK8b,KAAO9b,KAAK5B,EAAI4B,KAAK9D,EAC1B8D,KAAK4G,GAAK,EAAItM,KAAK2L,IAAIjG,KAAK8b,KAAM,GAElC9b,KAAK6G,EAAIvM,KAAKqL,KAAK3F,KAAK4G,IACxB5G,KAAKymB,GAAKE,GAAK3mB,KAAK4G,IACpB5G,KAAKmY,GAAKyO,GAAK5mB,KAAK4G,IACpB5G,KAAKohB,GAAKyF,GAAK7mB,KAAK4G,IACpB5G,KAAK0mB,GAAKI,GAAK9mB,KAAK4G,IACpB5G,KAAK6a,IAAM7a,KAAK9D,EAAI6qB,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI1mB,KAAKpD,OA2GlE5C,QAtGK,SAAiBoC,GACtB,IAEIwJ,EAAGoB,EAAGkkB,EAFNjkB,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAER0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAGjC,GAFA+tB,EAAKxK,EAAOpmB,KAAKiM,IAAIW,GAEjBlH,KAAKkD,OACH5I,KAAKuL,IAAIqB,IAAQ1M,GACnBoL,EAAI5F,KAAK9D,EAAIwkB,EACb1Z,GAAK,EAAIhH,KAAK9D,EAAI8D,KAAKpD,OAEvBgJ,EAAI5F,KAAK9D,EAAI5B,KAAKiM,IAAI2kB,GAAM5wB,KAAK4L,IAAIgB,GACrCF,EAAIhH,KAAK9D,GAAK2rB,GAAW3gB,EAAMlH,KAAKpD,OAAS,EAAItC,KAAKwM,IAAIokB,IAAO5wB,KAAK4L,IAAIgB,UAG5E,GAAI5M,KAAKuL,IAAIqB,IAAQ1M,EACnBoL,EAAI5F,KAAK9D,EAAIwkB,EACb1Z,GAAK,EAAIhH,KAAK6a,QACT,CACL,IAAIoM,EAAKC,GAAGlnB,KAAK9D,EAAG8D,KAAK6G,EAAGvM,KAAKiM,IAAIW,IAAQ5M,KAAK4L,IAAIgB,GACtDtB,EAAIqhB,EAAK3sB,KAAKiM,IAAI2kB,GAClBlkB,EAAIhH,KAAK9D,EAAI6qB,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAIxf,GAAOlH,KAAK6a,IAAMoM,GAAM,EAAI3sB,KAAKwM,IAAIokB,IAM/F,OAFA9uB,EAAEwJ,EAAIA,EAAI5F,KAAKlC,GACf1B,EAAE4K,EAAIA,EAAIhH,KAAKhC,GACR5B,GA2EPnC,QAtEK,SAAiBmC,GACtB,IAAI6K,EAAKC,EAAKtB,EAAGoB,EAAGrO,EAChBsiB,EAAIkQ,EACJplB,EAAKK,EAIT,GAHAR,EAAIxJ,EAAEwJ,EAAI5F,KAAKlC,GACfkJ,EAAI5K,EAAE4K,EAAIhH,KAAKhC,GAEXgC,KAAKkD,OACP,GAAI5I,KAAKuL,IAAImB,EAAIhH,KAAK9D,EAAI8D,KAAKpD,OAASpC,EACtCyM,EAAME,EAAWvB,EAAI5F,KAAK9D,EAAI8D,KAAK7C,OACnC+J,EAAM,MACD,CAIL,IAAIkkB,EAEJ,IALAnQ,EAAKjb,KAAKpD,KAAOoK,EAAIhH,KAAK9D,EAC1BivB,EAAKvlB,EAAIA,EAAI5F,KAAK9D,EAAI8D,KAAK9D,EAAI+e,EAAKA,EACpClV,EAAMkV,EAGDtiB,EAnEI,GAmEUA,IAAKA,EAKtB,GAFAoN,GADAK,GAAQ,GAAK6U,GAAMlV,GADnBqlB,EAAS9wB,KAAK4L,IAAIH,IACgB,GAAKA,EAAM,IAAOA,EAAMA,EAAMolB,GAAMC,KAAYrlB,EAAMkV,GAAMmQ,EAAS,GAGnG9wB,KAAKuL,IAAIO,IAAS5L,EAAO,CAC3B0M,EAAMnB,EACN,MAIJkB,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAK0hB,KAAKpW,EAAItL,KAAK4L,IAAIH,GAAO/F,KAAK9D,GAAK5B,KAAKiM,IAAIW,SAGjF,GAAI5M,KAAKuL,IAAImB,EAAIhH,KAAK6a,MAAQrgB,EAC5B0M,EAAM,EACND,EAAME,EAAWnH,KAAK7C,MAAQyI,EAAI5F,KAAK9D,OAClC,CAIL,IAAImrB,EAAIgE,EAAKC,EAAMC,EACf7lB,EAEJ,IANAuV,GAAMjb,KAAK6a,IAAM7T,GAAKhH,KAAK9D,EAC3BivB,EAAKvlB,EAAIA,EAAI5F,KAAK9D,EAAI8D,KAAK9D,EAAI+e,EAAKA,EACpClV,EAAMkV,EAIDtiB,EA3FI,GA2FUA,IAAKA,EAStB,GARA+M,EAAM1F,KAAK6G,EAAIvM,KAAKiM,IAAIR,GACxBshB,EAAK/sB,KAAKqL,KAAK,EAAID,EAAMA,GAAOpL,KAAK4L,IAAIH,GACzCslB,EAAMrrB,KAAK9D,EAAI6qB,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI3gB,GACxDulB,EAAOtrB,KAAKymB,GAAK,EAAIzmB,KAAKmY,GAAK7d,KAAKwM,IAAI,EAAIf,GAAO,EAAI/F,KAAKohB,GAAK9mB,KAAKwM,IAAI,EAAIf,GAAO,EAAI/F,KAAK0mB,GAAKpsB,KAAKwM,IAAI,EAAIf,GAGhHA,GADAK,GAAQ6U,GAAMoM,GADdkE,EAAKF,EAAMrrB,KAAK9D,GACQ,GAAKqvB,EAAK,GAAMlE,GAAMkE,EAAKA,EAAKJ,KAAQnrB,KAAK4G,GAAKtM,KAAKiM,IAAI,EAAIR,IAAQwlB,EAAKA,EAAKJ,EAAK,EAAIlQ,EAAKsQ,IAAO,EAAIlE,IAAOpM,EAAKsQ,IAAOlE,EAAKiE,EAAO,EAAIhxB,KAAKiM,IAAI,EAAIR,IAAQulB,GAGtLhxB,KAAKuL,IAAIO,IAAS5L,EAAO,CAC3B0M,EAAMnB,EACN,MAKJshB,EAAK/sB,KAAKqL,KAAK,EAAI3F,KAAK4G,GAAKtM,KAAK2L,IAAI3L,KAAKiM,IAAIW,GAAM,IAAM5M,KAAK4L,IAAIgB,GACpED,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAK0hB,KAAKpW,EAAIyhB,EAAKrnB,KAAK9D,GAAK5B,KAAKiM,IAAIW,IAMxE,OAFA9K,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,YAAa,SCqF1B,IACP,IACEZ,KAnMK,WACL3G,KAAKkU,EAAI,GACTlU,KAAKkU,EAAE,GAAK,YACZlU,KAAKkU,EAAE,IAAM,YACblU,KAAKkU,EAAE,GAAK,WACZlU,KAAKkU,EAAE,IAAM,UACblU,KAAKkU,EAAE,GAAK,SACZlU,KAAKkU,EAAE,IAAM,SACblU,KAAKkU,EAAE,GAAK,SACZlU,KAAKkU,EAAE,IAAM,QACblU,KAAKkU,EAAE,GAAK,MACZlU,KAAKkU,EAAE,KAAO,MACdlU,KAAKwrB,KAAO,GACZxrB,KAAKyrB,KAAO,GACZzrB,KAAKwrB,KAAK,GAAK,YACfxrB,KAAKyrB,KAAK,GAAK,EACfzrB,KAAKwrB,KAAK,GAAK,WACfxrB,KAAKyrB,KAAK,GAAK,WACfzrB,KAAKwrB,KAAK,IAAM,WAChBxrB,KAAKyrB,KAAK,GAAK,UACfzrB,KAAKwrB,KAAK,IAAM,UAChBxrB,KAAKyrB,KAAK,GAAK,UACfzrB,KAAKwrB,KAAK,IAAM,UAChBxrB,KAAKyrB,KAAK,IAAM,UAChBzrB,KAAKwrB,KAAK,IAAM,SAChBxrB,KAAKyrB,KAAK,IAAM,UAChBzrB,KAAK0rB,KAAO,GACZ1rB,KAAK2rB,KAAO,GACZ3rB,KAAK0rB,KAAK,GAAK,aACf1rB,KAAK2rB,KAAK,GAAK,EACf3rB,KAAK0rB,KAAK,IAAM,WAChB1rB,KAAK2rB,KAAK,IAAM,WAChB3rB,KAAK0rB,KAAK,GAAK,WACf1rB,KAAK2rB,KAAK,IAAM,WAChB3rB,KAAK0rB,KAAK,IAAM,UAChB1rB,KAAK2rB,KAAK,GAAK,UACf3rB,KAAK0rB,KAAK,GAAK,WACf1rB,KAAK2rB,KAAK,GAAK,WACf3rB,KAAK0rB,KAAK,GAAK,UACf1rB,KAAK2rB,KAAK,GAAK,UACf3rB,KAAK+X,EAAI,GACT/X,KAAK+X,EAAE,GAAK,aACZ/X,KAAK+X,EAAE,GAAK,YACZ/X,KAAK+X,EAAE,IAAM,UACb/X,KAAK+X,EAAE,IAAM,SACb/X,KAAK+X,EAAE,IAAM,SACb/X,KAAK+X,EAAE,GAAK,QACZ/X,KAAK+X,EAAE,GAAK,MACZ/X,KAAK+X,EAAE,GAAK,OACZ/X,KAAK+X,EAAE,IAAM,OAmJb/d,QA5IK,SAAiBoC,GACtB,IAAIsL,EACAT,EAAM7K,EAAEwJ,EAERgmB,EADMxvB,EAAE4K,EACUhH,KAAKpD,KACvBke,EAAY7T,EAAMjH,KAAK7C,MAGvB0uB,EAAQD,EAAYxxB,EAAa,KACjC0xB,EAAWhR,EACXiR,EAAU,EAEVC,EAAQ,EAEZ,IAAKtkB,EAAI,EAAGA,GAAK,GAAIA,IACnBqkB,GAAoBF,EACpBG,GAAgBhsB,KAAKkU,EAAExM,GAAKqkB,EAI9B,IAOIE,EAPAC,EAAQF,EACRG,EAAQL,EAERM,EAAU,EACVC,EAAU,EAIVC,EAAO,EACPC,EAAO,EAEX,IAAK7kB,EAAI,EAAGA,GAAK,EAAGA,IAElBukB,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVK,EAAOA,EAAOtsB,KAAKwrB,KAAK9jB,GAAK0kB,EAAUpsB,KAAKyrB,KAAK/jB,GAAK2kB,EACtDE,EAAOA,EAAOvsB,KAAKyrB,KAAK/jB,GAAK0kB,EAAUpsB,KAAKwrB,KAAK9jB,GAAK2kB,EAMxD,OAFAjwB,EAAEwJ,EAAI2mB,EAAOvsB,KAAK9D,EAAI8D,KAAKlC,GAC3B1B,EAAE4K,EAAIslB,EAAOtsB,KAAK9D,EAAI8D,KAAKhC,GACpB5B,GAkGPnC,QA5FK,SAAiBmC,GACtB,IAAIsL,EAaA8kB,EAZA5mB,EAAIxJ,EAAEwJ,EACNoB,EAAI5K,EAAE4K,EACNylB,EAAU7mB,EAAI5F,KAAKlC,GAGnBwuB,GAFUtlB,EAAIhH,KAAKhC,IAEFgC,KAAK9D,EACtBqwB,EAAOE,EAAUzsB,KAAK9D,EAEtBwwB,EAAS,EACTC,EAAS,EAITT,EAAQ,EACRC,EAAQ,EAEZ,IAAKzkB,EAAI,EAAGA,GAAK,EAAGA,IAElB8kB,EAAUG,EAASL,EAAOI,EAASH,EACnCG,EAFUA,EAASJ,EAAOK,EAASJ,EAGnCI,EAASH,EACTN,EAAQA,EAAQlsB,KAAK0rB,KAAKhkB,GAAKglB,EAAS1sB,KAAK2rB,KAAKjkB,GAAKilB,EACvDR,EAAQA,EAAQnsB,KAAK2rB,KAAKjkB,GAAKglB,EAAS1sB,KAAK0rB,KAAKhkB,GAAKilB,EAOzD,IAAK,IAAIh0B,EAAI,EAAGA,EAAIqH,KAAK4sB,WAAYj0B,IAAK,CACxC,IAGIszB,EAHAG,EAAUF,EACVG,EAAUF,EAGVU,EAASP,EACTQ,EAASP,EAEb,IAAK7kB,EAAI,EAAGA,GAAK,EAAGA,IAElBukB,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVY,IAAmBnlB,EAAI,IAAM1H,KAAKwrB,KAAK9jB,GAAK0kB,EAAUpsB,KAAKyrB,KAAK/jB,GAAK2kB,GACrES,IAAmBplB,EAAI,IAAM1H,KAAKyrB,KAAK/jB,GAAK0kB,EAAUpsB,KAAKwrB,KAAK9jB,GAAK2kB,GAGvED,EAAU,EACVC,EAAU,EACV,IAAIU,EAAS/sB,KAAKwrB,KAAK,GACnBwB,EAAShtB,KAAKyrB,KAAK,GAEvB,IAAK/jB,EAAI,EAAGA,GAAK,EAAGA,IAElBukB,EAAWI,EAAUH,EAAQE,EAAUD,EACvCC,EAFWA,EAAUF,EAAQG,EAAUF,EAGvCE,EAAUJ,EACVc,GAAkBrlB,GAAK1H,KAAKwrB,KAAK9jB,GAAK0kB,EAAUpsB,KAAKyrB,KAAK/jB,GAAK2kB,GAC/DW,GAAkBtlB,GAAK1H,KAAKyrB,KAAK/jB,GAAK0kB,EAAUpsB,KAAKwrB,KAAK9jB,GAAK2kB,GAIjE,IAAIY,EAAOF,EAASA,EAASC,EAASA,EACtCd,GAASW,EAASE,EAASD,EAASE,GAAUC,EAC9Cd,GAASW,EAASC,EAASF,EAASG,GAAUC,EAIhD,IAAIjB,EAAQE,EACRJ,EAAWK,EACXe,EAAU,EAEVrB,EAAQ,EAEZ,IAAKnkB,EAAI,EAAGA,GAAK,EAAGA,IAClBwlB,GAAoBlB,EACpBH,GAAgB7rB,KAAK+X,EAAErQ,GAAKwlB,EAK9B,IAAIhmB,EAAMlH,KAAKpD,KAAOivB,EAAQzxB,EAAa,IACvC6M,EAAMjH,KAAK7C,MAAQ2uB,EAGvB,OAFA1vB,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,uBAAwB,SC1KrC,IACP,IACEZ,KAhCK,aAiCL3M,QA5BK,SAAiBoC,GACtB,IAAI6K,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAIR0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAC7ByI,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAIwkB,EACvB1Z,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAI5B,KAAK6J,IAAI7J,KAAK4L,IAAI5L,KAAKC,GAAK,EAAI2M,EAAM,MAAQ,KAGzE,OAFA9K,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GAkBPnC,QAbK,SAAiBmC,GACtBA,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GACZ,IAAIiJ,EAAME,EAAWnH,KAAK7C,MAAQf,EAAEwJ,EAAI5F,KAAK9D,GACzCgL,EAAM,KAAO5M,KAAKgM,KAAKhM,KAAK+M,IAAI,GAAMjL,EAAE4K,EAAIhH,KAAK9D,IAAM5B,KAAKC,GAAK,GAGrE,OAFA6B,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,qBAAsB,SC2DnC,IACP,IACEZ,KA7FK,WAGA3G,KAAKkD,QAGRlD,KAAK0H,EAAI,EACT1H,KAAKyS,EAAI,EACTzS,KAAK4G,GAAK,EACV5G,KAAKmtB,IAAM7yB,KAAKqL,MAAM3F,KAAKyS,EAAI,GAAKzS,KAAK0H,GACzC1H,KAAKotB,IAAMptB,KAAKmtB,KAAOntB,KAAKyS,EAAI,IANhCzS,KAAKsa,GAAKM,GAAQ5a,KAAK4G,KA0FzB5M,QA9EK,SAAiBoC,GACtB,IAAIwJ,EAAGoB,EACHC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAMZ,GAFAC,EAAME,EAAWF,EAAMjH,KAAK7C,OAExB6C,KAAKkD,OAAQ,CACf,GAAKlD,KAAKyS,EAKR,IAFA,IAAItU,EAAI6B,KAAK0H,EAAIpN,KAAKiM,IAAIW,GAEjBvO,EApCA,GAoCcA,IAAKA,EAAG,CAC7B,IAAI0b,GAAKrU,KAAKyS,EAAIvL,EAAM5M,KAAKiM,IAAIW,GAAO/I,IAAM6B,KAAKyS,EAAInY,KAAKwM,IAAII,IAGhE,GAFAA,GAAOmN,EAEH/Z,KAAKuL,IAAIwO,GAAK7Z,EAChB,WATJ0M,EAAiB,IAAXlH,KAAK0H,EAAUpN,KAAK0hB,KAAKhc,KAAK0H,EAAIpN,KAAKiM,IAAIW,IAAQA,EAc3DtB,EAAI5F,KAAK9D,EAAI8D,KAAKotB,IAAMnmB,GAAOjH,KAAKyS,EAAInY,KAAKwM,IAAII,IACjDF,EAAIhH,KAAK9D,EAAI8D,KAAKmtB,IAAMjmB,MACnB,CACL,IAAIwT,EAAIpgB,KAAKiM,IAAIW,GACbiU,EAAI7gB,KAAKwM,IAAII,GACjBF,EAAIhH,KAAK9D,EAAIye,GAAQzT,EAAKwT,EAAGS,EAAGnb,KAAKsa,IACrC1U,EAAI5F,KAAK9D,EAAI+K,EAAMkU,EAAI7gB,KAAKqL,KAAK,EAAI3F,KAAK4G,GAAK8T,EAAIA,GAKrD,OAFAte,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA2CPnC,QAzCK,SAAiBmC,GACtB,IAAI8K,EAAWD,EAAKyT,EAkCpB,OAjCAte,EAAEwJ,GAAK5F,KAAKlC,GACZmJ,EAAM7K,EAAEwJ,EAAI5F,KAAK9D,EACjBE,EAAE4K,GAAKhH,KAAKhC,GACZkJ,EAAM9K,EAAE4K,EAAIhH,KAAK9D,EAEb8D,KAAKkD,QACPgE,GAAOlH,KAAKmtB,IACZlmB,GAAajH,KAAKotB,KAAOptB,KAAKyS,EAAInY,KAAKwM,IAAII,IAEvClH,KAAKyS,EACPvL,EAAMwjB,IAAO1qB,KAAKyS,EAAIvL,EAAM5M,KAAKiM,IAAIW,IAAQlH,KAAK0H,GAC9B,IAAX1H,KAAK0H,IACdR,EAAMwjB,GAAMpwB,KAAKiM,IAAIW,GAAOlH,KAAK0H,IAGnCT,EAAME,EAAWF,EAAMjH,KAAK7C,OAC5B+J,EAAM2gB,GAAW3gB,KAEjBA,EAAMsU,GAAYpf,EAAE4K,EAAIhH,KAAK9D,EAAG8D,KAAK4G,GAAI5G,KAAKsa,KAC9CI,EAAIpgB,KAAKuL,IAAIqB,IAEL7M,GACNqgB,EAAIpgB,KAAKiM,IAAIW,GAGbD,EAAME,EAFCnH,KAAK7C,MAAQf,EAAEwJ,EAAItL,KAAKqL,KAAK,EAAI3F,KAAK4G,GAAK8T,EAAIA,IAAM1a,KAAK9D,EAAI5B,KAAKwM,IAAII,MAGrEwT,EAAIlgB,EAAQH,IACrB4M,EAAMjH,KAAK7C,QAIff,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,aAAc,SCnB3B,IACP,IACEZ,KAjFK,aAkFL3M,QA7EK,SAAiBoC,GAWtB,IARA,IAAI6K,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACR8T,EAAY3T,EAAWF,EAAMjH,KAAK7C,OAClCooB,EAAQre,EACRxB,EAAMpL,KAAKC,GAAKD,KAAKiM,IAAIW,KAIhB,CACX,IAAImmB,IAAgB9H,EAAQjrB,KAAKiM,IAAIgf,GAAS7f,IAAQ,EAAIpL,KAAKwM,IAAIye,IAGnE,GAFAA,GAAS8H,EAEL/yB,KAAKuL,IAAIwnB,GAAe7yB,EAC1B,MAIJ+qB,GAAS,EAKLjrB,KAAKC,GAAK,EAAID,KAAKuL,IAAIqB,GAAO1M,IAChCsgB,EAAY,GAGd,IAAIlV,EAAI,cAAiB5F,KAAK9D,EAAI4e,EAAYxgB,KAAKwM,IAAIye,GAASvlB,KAAKlC,GACjEkJ,EAAI,gBAAkBhH,KAAK9D,EAAI5B,KAAKiM,IAAIgf,GAASvlB,KAAKhC,GAG1D,OAFA5B,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA6CPnC,QA3CK,SAAiBmC,GACtB,IAAImpB,EACA9K,EAIJre,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GACZyc,EAAMre,EAAE4K,GAAK,gBAAkBhH,KAAK9D,GAKhC5B,KAAKuL,IAAI4U,GAAO,gBAClBA,EAAM,eAGR8K,EAAQjrB,KAAK0hB,KAAKvB,GAClB,IAAIxT,EAAME,EAAWnH,KAAK7C,MAAQf,EAAEwJ,GAAK,cAAiB5F,KAAK9D,EAAI5B,KAAKwM,IAAIye,KAExEte,GAAO3M,KAAKC,KACd0M,GAAO3M,KAAKC,IAGV0M,EAAM3M,KAAKC,KACb0M,EAAM3M,KAAKC,IAGbkgB,GAAO,EAAI8K,EAAQjrB,KAAKiM,IAAI,EAAIgf,IAAUjrB,KAAKC,GAE3CD,KAAKuL,IAAI4U,GAAO,IAClBA,EAAM,GAGR,IAAIvT,EAAM5M,KAAK0hB,KAAKvB,GAGpB,OAFAre,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,YAAa,SC0B1B,IACP,IACEZ,KAlGK,WAIDrM,KAAKuL,IAAI7F,KAAKlD,KAAOkD,KAAKhD,MAAQxC,IAItCwF,KAAKhD,KAAOgD,KAAKhD,MAAQgD,KAAKlD,KAC9BkD,KAAK8b,KAAO9b,KAAK5B,EAAI4B,KAAK9D,EAC1B8D,KAAK4G,GAAK,EAAItM,KAAK2L,IAAIjG,KAAK8b,KAAM,GAClC9b,KAAK6G,EAAIvM,KAAKqL,KAAK3F,KAAK4G,IACxB5G,KAAKymB,GAAKE,GAAK3mB,KAAK4G,IACpB5G,KAAKmY,GAAKyO,GAAK5mB,KAAK4G,IACpB5G,KAAKohB,GAAKyF,GAAK7mB,KAAK4G,IACpB5G,KAAK0mB,GAAKI,GAAK9mB,KAAK4G,IACpB5G,KAAKwF,OAASlL,KAAKiM,IAAIvG,KAAKlD,MAC5BkD,KAAKyF,OAASnL,KAAKwM,IAAI9G,KAAKlD,MAC5BkD,KAAKggB,IAAMjZ,EAAM/G,KAAK6G,EAAG7G,KAAKwF,OAAQxF,KAAKyF,QAC3CzF,KAAKstB,IAAMvG,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI1mB,KAAKlD,MAErDxC,KAAKuL,IAAI7F,KAAKlD,KAAOkD,KAAKhD,MAAQxC,EACpCwF,KAAKolB,GAAKplB,KAAKwF,QAEfxF,KAAKwF,OAASlL,KAAKiM,IAAIvG,KAAKhD,MAC5BgD,KAAKyF,OAASnL,KAAKwM,IAAI9G,KAAKhD,MAC5BgD,KAAKilB,IAAMle,EAAM/G,KAAK6G,EAAG7G,KAAKwF,OAAQxF,KAAKyF,QAC3CzF,KAAKutB,IAAMxG,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI1mB,KAAKhD,MACzDgD,KAAKolB,IAAMplB,KAAKggB,IAAMhgB,KAAKilB,MAAQjlB,KAAKutB,IAAMvtB,KAAKstB,MAGrDttB,KAAK6b,EAAI7b,KAAKstB,IAAMttB,KAAKggB,IAAMhgB,KAAKolB,GACpCplB,KAAK6a,IAAMkM,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAI1mB,KAAKpD,MACzDoD,KAAKugB,GAAKvgB,KAAK9D,GAAK8D,KAAK6b,EAAI7b,KAAK6a,OAkElC7gB,QA7DK,SAAiBoC,GACtB,IAEIkpB,EAFAre,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAKZ,GAAIhH,KAAKkD,OACPoiB,EAAMtlB,KAAK9D,GAAK8D,KAAK6b,EAAI3U,OACpB,CACL,IAAIoU,EAAKyL,GAAK/mB,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,GAAIxf,GAClDoe,EAAMtlB,KAAK9D,GAAK8D,KAAK6b,EAAIP,GAG3B,IAAIiK,EAAQvlB,KAAKolB,GAAKje,EAAWF,EAAMjH,KAAK7C,OACxCyI,EAAI5F,KAAKlC,GAAKwnB,EAAMhrB,KAAKiM,IAAIgf,GAC7Bve,EAAIhH,KAAKhC,GAAKgC,KAAKugB,GAAK+E,EAAMhrB,KAAKwM,IAAIye,GAG3C,OAFAnpB,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA2CPnC,QAtCK,SAAiBmC,GAGtB,IAAIsJ,EAAK4f,EAAKpe,EAAKD,EAFnB7K,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,EAAIhH,KAAKugB,GAAKnkB,EAAE4K,EAAIhH,KAAKhC,GAGvBgC,KAAKolB,IAAM,GACbE,EAAMhrB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GACpCtB,EAAM,IAEN4f,GAAOhrB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GACrCtB,GAAO,GAGT,IAAI6f,EAAQ,EAMZ,OAJY,IAARD,IACFC,EAAQjrB,KAAKmU,MAAM/I,EAAMtJ,EAAEwJ,EAAGF,EAAMtJ,EAAE4K,IAGpChH,KAAKkD,QACP+D,EAAME,EAAWnH,KAAK7C,MAAQooB,EAAQvlB,KAAKolB,IAC3Cle,EAAM2gB,GAAW7nB,KAAK6b,EAAIyJ,EAAMtlB,KAAK9D,GACrCE,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IAGP8K,EAAMqgB,GADGvnB,KAAK6b,EAAIyJ,EAAMtlB,KAAK9D,EACb8D,KAAKymB,GAAIzmB,KAAKmY,GAAInY,KAAKohB,GAAIphB,KAAK0mB,IAChDzf,EAAME,EAAWnH,KAAK7C,MAAQooB,EAAQvlB,KAAKolB,IAC3ChpB,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IAQTmL,MALiB,CAAC,oBAAqB,SCgBlC,IACP,IACEZ,KAtHK,WAEL3G,KAAKqhB,EAAIrhB,KAAK9D,GAqHdlC,QAnHK,SAAiBoC,GACtB,IAMIwJ,EAAGoB,EANHC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAIR0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAG7B7C,KAAKuL,IAAIqB,IAAQ1M,IACnBoL,EAAI5F,KAAKlC,GAAKkC,KAAKqhB,EAAIX,EACvB1Z,EAAIhH,KAAKhC,IAGX,IAAIunB,EAAQmF,GAAM,EAAIpwB,KAAKuL,IAAIqB,EAAM5M,KAAKC,MAEtCD,KAAKuL,IAAI6a,IAASlmB,GAASF,KAAKuL,IAAIvL,KAAKuL,IAAIqB,GAAO7M,IAAYG,KAClEoL,EAAI5F,KAAKlC,GAGPkJ,EADEE,GAAO,EACLlH,KAAKhC,GAAK1D,KAAKC,GAAKyF,KAAKqhB,EAAI/mB,KAAK4L,IAAI,GAAMqf,GAE5CvlB,KAAKhC,GAAK1D,KAAKC,GAAKyF,KAAKqhB,GAAK/mB,KAAK4L,IAAI,GAAMqf,IAKrD,IAAItK,EAAK,GAAM3gB,KAAKuL,IAAIvL,KAAKC,GAAKmmB,EAAOA,EAAOpmB,KAAKC,IACjD6sB,EAAMnM,EAAKA,EACXuS,EAAQlzB,KAAKiM,IAAIgf,GACjBkI,EAAQnzB,KAAKwM,IAAIye,GACjB1J,EAAI4R,GAASD,EAAQC,EAAQ,GAC7BC,EAAM7R,EAAIA,EACVpJ,EAAIoJ,GAAK,EAAI2R,EAAQ,GACrBG,EAAMlb,EAAIA,EACV/M,EAAMpL,KAAKC,GAAKyF,KAAKqhB,GAAKpG,GAAMY,EAAI8R,GAAOrzB,KAAKqL,KAAKyhB,GAAOvL,EAAI8R,IAAQ9R,EAAI8R,IAAQA,EAAMvG,IAAQsG,EAAMC,MAAUA,EAAMvG,GAExH1G,EAAO,IACThb,GAAOA,GAGTE,EAAI5F,KAAKlC,GAAK4H,EAEd,IAAI4jB,EAAIlC,EAAMvL,EAad,OAZAnW,EAAMpL,KAAKC,GAAKyF,KAAKqhB,GAAK5O,EAAI6W,EAAIrO,EAAK3gB,KAAKqL,MAAMgoB,EAAMvG,IAAQA,EAAM,GAAKkC,EAAIA,KAAOqE,EAAMvG,GAI1FpgB,EAFEE,GAAO,EAELlH,KAAKhC,GAAK0H,EAGV1F,KAAKhC,GAAK0H,EAGhBtJ,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GA4DPnC,QAvDK,SAAiBmC,GACtB,IAAI6K,EAAKC,EACL0mB,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,EACrBC,EACAC,EACAzoB,EACA0oB,EA2CJ,OAtCAhyB,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GACZ0H,EAAMpL,KAAKC,GAAKyF,KAAKqhB,EAGrByM,GAFAF,EAAKxxB,EAAEwJ,EAAIF,GAEAkoB,GADXC,EAAKzxB,EAAE4K,EAAItB,GACUmoB,EAOrBnoB,EAAM,GAHFmoB,EAAKA,GADTI,GAAM,GAFNF,GAAMzzB,KAAKuL,IAAIgoB,IAAO,EAAIC,IAEX,EAAI,EAAID,EAAKA,EAAKC,EAAMA,IACnB,GAFpBE,EAAKD,EAAK,EAAIF,EAAKA,EAAKD,EAAKA,GAEAI,EAAKA,EAAKC,EAAKA,EAAKA,EAAK,EAAIF,EAAKC,EAAKC,EAAKA,GAAM,KAC/EC,GAAMH,EAAKC,EAAKA,EAAK,EAAIC,GAAMA,IAC/BE,EAAK,EAAI7zB,KAAKqL,MAAMuoB,EAAK,IAGrB5zB,KAAKuL,IAAIH,GAAO,IAEhBA,EADEA,GAAO,EACH,GAEC,GAIX0oB,EAAM9zB,KAAKihB,KAAK7V,GAAO,EAGrBwB,EADE9K,EAAE4K,GAAK,IACDmnB,EAAK7zB,KAAKwM,IAAIsnB,EAAM9zB,KAAKC,GAAK,GAAKyzB,EAAK,EAAIC,GAAM3zB,KAAKC,MAEtD4zB,EAAK7zB,KAAKwM,IAAIsnB,EAAM9zB,KAAKC,GAAK,GAAKyzB,EAAK,EAAIC,GAAM3zB,KAAKC,GAIhE0M,EADE3M,KAAKuL,IAAI+nB,GAAMpzB,EACXwF,KAAK7C,MAELgK,EAAWnH,KAAK7C,MAAQ7C,KAAKC,IAAMuzB,EAAM,EAAIxzB,KAAKqL,KAAK,EAAI,GAAKioB,EAAKA,EAAKC,EAAKA,GAAMC,EAAMA,IAAQ,EAAIF,GAG/GxxB,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GAOPmL,MALiB,CAAC,oBAAqB,gBAAiB,UC+DnD,IACP,IACEZ,KAjLK,WACL3G,KAAKquB,QAAU/zB,KAAKiM,IAAIvG,KAAKpD,MAC7BoD,KAAKsuB,QAAUh0B,KAAKwM,IAAI9G,KAAKpD,OAgL7B5C,QA9KK,SAAiBoC,GACtB,IAKIqqB,EAAItO,EAAIiJ,EAAIsF,EAAI6H,EAAKC,EAAIpD,EAAQqD,EAAKC,EAAIC,EAAKC,EAAIC,EAAGvM,EAAGwM,EAAIC,EAAI5T,EAAG6T,EAAIC,EAAOvU,EAAGwU,EAAIC,EAAIC,EAL1FnoB,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EACRxB,EAASlL,KAAKiM,IAAInK,EAAE4K,GACpBvB,EAASnL,KAAKwM,IAAI1K,EAAE4K,GACpB0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAGjC,OAAI6C,KAAKkD,OACH5I,KAAKuL,IAAI7F,KAAKquB,QAAU,IAAM7zB,GAEhC4B,EAAEwJ,EAAI5F,KAAKlC,GAAKkC,KAAK9D,GAAK7B,EAAU6M,GAAO5M,KAAKiM,IAAIma,GACpDtkB,EAAE4K,EAAIhH,KAAKhC,GAAKgC,KAAK9D,GAAK7B,EAAU6M,GAAO5M,KAAKwM,IAAI4Z,GAC7CtkB,GACE9B,KAAKuL,IAAI7F,KAAKquB,QAAU,IAAM7zB,GAEvC4B,EAAEwJ,EAAI5F,KAAKlC,GAAKkC,KAAK9D,GAAK7B,EAAU6M,GAAO5M,KAAKiM,IAAIma,GACpDtkB,EAAE4K,EAAIhH,KAAKhC,GAAKgC,KAAK9D,GAAK7B,EAAU6M,GAAO5M,KAAKwM,IAAI4Z,GAC7CtkB,IAGP6yB,EAAQjvB,KAAKquB,QAAU7oB,EAASxF,KAAKsuB,QAAU7oB,EAASnL,KAAKwM,IAAI4Z,GAEjEsO,GADA7T,EAAI7gB,KAAKihB,KAAK0T,IACL9T,EAAI7gB,KAAKiM,IAAI4U,GAAK,EAC3B/e,EAAEwJ,EAAI5F,KAAKlC,GAAKkC,KAAK9D,EAAI8yB,EAAKvpB,EAASnL,KAAKiM,IAAIma,GAChDtkB,EAAE4K,EAAIhH,KAAKhC,GAAKgC,KAAK9D,EAAI8yB,GAAMhvB,KAAKsuB,QAAU9oB,EAASxF,KAAKquB,QAAU5oB,EAASnL,KAAKwM,IAAI4Z,IACjFtkB,IAGTqqB,EAAKE,GAAK3mB,KAAK4G,IACfuR,EAAKyO,GAAK5mB,KAAK4G,IACfwa,EAAKyF,GAAK7mB,KAAK4G,IACf8f,EAAKI,GAAK9mB,KAAK4G,IAEXtM,KAAKuL,IAAI7F,KAAKquB,QAAU,IAAM7zB,GAEhC+zB,EAAMvuB,KAAK9D,EAAI6qB,GAAKN,EAAItO,EAAIiJ,EAAIsF,EAAIrsB,GACpCm0B,EAAKxuB,KAAK9D,EAAI6qB,GAAKN,EAAItO,EAAIiJ,EAAIsF,EAAIxf,GACnC9K,EAAEwJ,EAAI5F,KAAKlC,IAAMywB,EAAMC,GAAMl0B,KAAKiM,IAAIma,GACtCtkB,EAAE4K,EAAIhH,KAAKhC,IAAMuwB,EAAMC,GAAMl0B,KAAKwM,IAAI4Z,GAC/BtkB,GACE9B,KAAKuL,IAAI7F,KAAKquB,QAAU,IAAM7zB,GAEvC+zB,EAAMvuB,KAAK9D,EAAI6qB,GAAKN,EAAItO,EAAIiJ,EAAIsF,EAAIrsB,GACpCm0B,EAAKxuB,KAAK9D,EAAI6qB,GAAKN,EAAItO,EAAIiJ,EAAIsF,EAAIxf,GACnC9K,EAAEwJ,EAAI5F,KAAKlC,IAAMywB,EAAMC,GAAMl0B,KAAKiM,IAAIma,GACtCtkB,EAAE4K,EAAIhH,KAAKhC,IAAMuwB,EAAMC,GAAMl0B,KAAKwM,IAAI4Z,GAC/BtkB,IAGPgvB,EAAS5lB,EAASC,EAClBgpB,EAAMvH,GAAGlnB,KAAK9D,EAAG8D,KAAK6G,EAAG7G,KAAKquB,SAC9BK,EAAKxH,GAAGlnB,KAAK9D,EAAG8D,KAAK6G,EAAGrB,GACxBmpB,EAAMr0B,KAAKgM,MAAM,EAAItG,KAAK4G,IAAMwkB,EAASprB,KAAK4G,GAAK6nB,EAAMzuB,KAAKquB,SAAWK,EAAKjpB,IAI5EiV,EADS,KAFXkU,EAAKt0B,KAAKmU,MAAMnU,KAAKiM,IAAIma,GAAO1gB,KAAKsuB,QAAUh0B,KAAK4L,IAAIyoB,GAAO3uB,KAAKquB,QAAU/zB,KAAKwM,IAAI4Z,KAGjFpmB,KAAK0hB,KAAKhc,KAAKsuB,QAAUh0B,KAAKiM,IAAIooB,GAAO3uB,KAAKquB,QAAU/zB,KAAKwM,IAAI6nB,IAC5Dr0B,KAAKuL,IAAIvL,KAAKuL,IAAI+oB,GAAMt0B,KAAKC,KAAOC,GACxCF,KAAK0hB,KAAKhc,KAAKsuB,QAAUh0B,KAAKiM,IAAIooB,GAAO3uB,KAAKquB,QAAU/zB,KAAKwM,IAAI6nB,IAElEr0B,KAAK0hB,KAAK1hB,KAAKiM,IAAIma,GAAQpmB,KAAKwM,IAAI6nB,GAAOr0B,KAAKiM,IAAIqoB,IAG1DC,EAAI7uB,KAAK6G,EAAI7G,KAAKquB,QAAU/zB,KAAKqL,KAAK,EAAI3F,KAAK4G,IAQ/CuU,EAAIsT,EAAM/T,GAAK,GAJfwU,EAAKxU,EAAIA,IADTqU,GAFAzM,EAAItiB,KAAK6G,EAAI7G,KAAKsuB,QAAUh0B,KAAKwM,IAAI8nB,GAAMt0B,KAAKqL,KAAK,EAAI3F,KAAK4G,KAErD0b,IAKqB,EAAIyM,GAAM,GAHxCI,EAAKD,EAAKxU,GAGuC,GANjDoU,EAAKD,EAAIvM,IAMkD,EAAI,EAAIyM,IAFnEK,EAAKD,EAAKzU,GAEoE,KAAOqU,GAAM,EAAI,EAAIA,GAAM,EAAIF,EAAIA,GAAK,EAAI,EAAIE,IADzHK,EAAK1U,EACgI,GAAKoU,GAC/I1yB,EAAEwJ,EAAI5F,KAAKlC,GAAKqd,EAAI7gB,KAAKiM,IAAIqoB,GAC7BxyB,EAAE4K,EAAIhH,KAAKhC,GAAKmd,EAAI7gB,KAAKwM,IAAI8nB,GACtBxyB,KAoGXnC,QAhGK,SAAiBmC,GAGtB,IAAImkB,EAAIlT,EAAGyc,EAAMD,EAAM5iB,EAAKC,EAAKxB,EAAK+gB,EAAItO,EAAIiJ,EAAIsF,EAAI6H,EAAQ5W,EAAIgX,EAAKC,EAAIS,EAAO5Q,EAAKvK,EAAGoI,EAAGvE,EAAGuX,EAAIjN,EAAGkN,EAEvG,GAJAnzB,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GAGRgC,KAAKkD,OAAQ,CAGf,IAFAqd,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,IAE1B,EAAI3M,EAAU2F,KAAK9D,EAC1B,OAkCF,OA/BAmR,EAAIkT,EAAKvgB,KAAK9D,EACd4tB,EAAOxvB,KAAKiM,IAAI8G,GAChBwc,EAAOvvB,KAAKwM,IAAIuG,GAChBpG,EAAMjH,KAAK7C,MAEP7C,KAAKuL,IAAI0a,IAAO/lB,EAClB0M,EAAMlH,KAAKpD,MAEXsK,EAAMwjB,GAAMb,EAAO7pB,KAAKquB,QAAUjyB,EAAE4K,EAAI8iB,EAAO9pB,KAAKsuB,QAAU/N,GAC9D7a,EAAMpL,KAAKuL,IAAI7F,KAAKpD,MAAQvC,EAIxB4M,EAFA3M,KAAKuL,IAAIH,IAAQlL,EACfwF,KAAKpD,MAAQ,EACTuK,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,GAAIxJ,EAAE4K,IAE3CG,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,OAAOrS,EAAEwJ,EAAGxJ,EAAE4K,IAU7CG,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,EAAIkkB,EAAMvJ,EAAKvgB,KAAKsuB,QAAUzE,EAAOztB,EAAE4K,EAAIhH,KAAKquB,QAAUvE,KAIzG1tB,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,EAOP,OALAqqB,EAAKE,GAAK3mB,KAAK4G,IACfuR,EAAKyO,GAAK5mB,KAAK4G,IACfwa,EAAKyF,GAAK7mB,KAAK4G,IACf8f,EAAKI,GAAK9mB,KAAK4G,IAEXtM,KAAKuL,IAAI7F,KAAKquB,QAAU,IAAM7zB,GAKhC0M,EAAMqgB,KAHNgH,EAAMvuB,KAAK9D,EAAI6qB,GAAKN,EAAItO,EAAIiJ,EAAIsF,EAAIrsB,KACpCkmB,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,KAEnBhH,KAAK9D,EAAGuqB,EAAItO,EAAIiJ,EAAIsF,GACpCzf,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,GAAI,EAAIxJ,EAAE4K,IACrD5K,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,GACE9B,KAAKuL,IAAI7F,KAAKquB,QAAU,IAAM7zB,GAEvC+zB,EAAMvuB,KAAK9D,EAAI6qB,GAAKN,EAAItO,EAAIiJ,EAAIsF,EAAIrsB,GAGpC6M,EAAMqgB,KAFNhH,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,IAC1BunB,GACOvuB,KAAK9D,EAAGuqB,EAAItO,EAAIiJ,EAAIsF,GACpCzf,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,EAAGxJ,EAAE4K,IAChD5K,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IAGPmkB,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,GACnC4nB,EAAKt0B,KAAKmU,MAAMrS,EAAEwJ,EAAGxJ,EAAE4K,GACvB2Q,EAAKuP,GAAGlnB,KAAK9D,EAAG8D,KAAK6G,EAAG7G,KAAKquB,SAC7BgB,EAAQ/0B,KAAKwM,IAAI8nB,GAEjB1a,IADAuK,EAAMze,KAAK6G,EAAI7G,KAAKsuB,QAAUe,GACnB5Q,GAAO,EAAIze,KAAK4G,IAC3B0V,EAAI,EAAItc,KAAK4G,IAAM,EAAIsN,GAAKlU,KAAKquB,QAAUruB,KAAKsuB,QAAUe,GAAS,EAAIrvB,KAAK4G,IAG5Eyb,EAAI,EAAInO,GADRob,GADAvX,EAAIwI,EAAK5I,GACAzD,GAAK,EAAIA,GAAK5Z,KAAK2L,IAAI8R,EAAG,GAAK,EAAIuE,GAAK,EAAI,EAAIpI,GAAK5Z,KAAK2L,IAAI8R,EAAG,GAAK,IAC9DuX,EAAK,EAAIvX,EAAIuX,EAAKA,EAAKA,EAAK,EAC7CX,EAAMr0B,KAAK0hB,KAAKhc,KAAKquB,QAAU/zB,KAAKwM,IAAIwoB,GAAMtvB,KAAKsuB,QAAUh0B,KAAKiM,IAAI+oB,GAAMD,GAC5EpoB,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAK0hB,KAAK1hB,KAAKiM,IAAIqoB,GAAMt0B,KAAKiM,IAAI+oB,GAAMh1B,KAAKwM,IAAI6nB,KAC/EY,EAASj1B,KAAKiM,IAAIooB,GAClBznB,EAAM5M,KAAKmU,OAAO8gB,EAASvvB,KAAK4G,GAAKyb,EAAIriB,KAAKquB,SAAW/zB,KAAK4L,IAAIyoB,GAAMY,GAAU,EAAIvvB,KAAK4G,KAC3FxK,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IASXmL,MALiB,CAAC,wBAAyB,SCtFtC,IACP,IACEZ,KAlGK,WAKL3G,KAAK4qB,QAAUtwB,KAAKiM,IAAIvG,KAAKpD,MAC7BoD,KAAK6qB,QAAUvwB,KAAKwM,IAAI9G,KAAKpD,OA6F7B5C,QAxFK,SAAiBoC,GACtB,IAAIoJ,EAAQC,EAGRib,EAGAqK,EAMAlP,EAAGjW,EAAGoB,EACNC,EAAM7K,EAAEwJ,EACRsB,EAAM9K,EAAE4K,EAkBZ,OAdA0Z,EAAOvZ,EAAWF,EAAMjH,KAAK7C,OAC7BqI,EAASlL,KAAKiM,IAAIW,GAClBzB,EAASnL,KAAKwM,IAAII,GAClB6jB,EAASzwB,KAAKwM,IAAI4Z,GAEZ,IADN7E,EAAI7b,KAAK4qB,QAAUplB,EAASxF,KAAK6qB,QAAUplB,EAASslB,GAG5C,GAAKzwB,KAAKuL,IAAIgW,IAAMrhB,KAC1BoL,EAHI,EAGA5F,KAAK9D,EAAUuJ,EAASnL,KAAKiM,IAAIma,GACrC1Z,EAAIhH,KAAKhC,GAJL,EAIUgC,KAAK9D,GAAW8D,KAAK6qB,QAAUrlB,EAASxF,KAAK4qB,QAAUnlB,EAASslB,IAGhF3uB,EAAEwJ,EAAIA,EACNxJ,EAAE4K,EAAIA,EACC5K,GAwDPnC,QAtDK,SAAiBmC,GACtB,IAAImkB,EAGAlT,EAGAyc,EAAMD,EAGNnkB,EACAuB,EAAKC,EAYT,OARA9K,EAAEwJ,GAAK5F,KAAKlC,GACZ1B,EAAE4K,GAAKhH,KAAKhC,GAEZqP,EAAIqd,IADJnK,EAAKjmB,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,IACpBhH,KAAK9D,GACpB4tB,EAAOxvB,KAAKiM,IAAI8G,GAChBwc,EAAOvvB,KAAKwM,IAAIuG,GAChBpG,EAAMjH,KAAK7C,MAEP7C,KAAKuL,IAAI0a,IAAO/lB,GAClB0M,EAAMlH,KAAKpD,KACXR,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IAGT8K,EAAMwjB,GAAMb,EAAO7pB,KAAK4qB,QAAUxuB,EAAE4K,EAAI8iB,EAAO9pB,KAAK6qB,QAAUtK,GAC9D7a,EAAMpL,KAAKuL,IAAI7F,KAAKpD,MAAQvC,EAExBC,KAAKuL,IAAIH,IAAQlL,GAEjByM,EADEjH,KAAKpD,MAAQ,EACTuK,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,GAAIxJ,EAAE4K,IAE3CG,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,OAAOrS,EAAEwJ,EAAGxJ,EAAE4K,IAGnD5K,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,IAGT6K,EAAME,EAAWnH,KAAK7C,MAAQ7C,KAAKmU,MAAMrS,EAAEwJ,EAAIkkB,EAAMvJ,EAAKvgB,KAAK6qB,QAAUhB,EAAOztB,EAAE4K,EAAIhH,KAAK4qB,QAAUd,IACrG1tB,EAAEwJ,EAAIqB,EACN7K,EAAE4K,EAAIE,EACC9K,KAOPmL,MALiB,CAAC,UC9FhBioB,GACK,EADLA,GAEK,EAFLA,GAGI,EAHJA,GAII,EAJJA,GAKG,EALHA,GAMM,EAENC,GACM,EADNA,GAEM,EAFNA,GAGM,EAHNA,GAIM,EAuVV,SAASC,GAAyB3pB,EAAKiB,EAAGpB,EAAG+pB,GAC3C,IAAIpK,EAsBJ,OApBIxf,EAAMvL,GACRm1B,EAAKnvB,MAAQivB,GACblK,EAAQ,IAERA,EAAQjrB,KAAKmU,MAAMzH,EAAGpB,GAElBtL,KAAKuL,IAAI0f,IAAU5qB,EACrBg1B,EAAKnvB,MAAQivB,GACJlK,EAAQ5qB,GAAU4qB,GAASlrB,EAAUM,GAC9Cg1B,EAAKnvB,MAAQivB,GACblK,GAASlrB,GACAkrB,EAAQlrB,EAAUM,GAAU4qB,KAAWlrB,EAAUM,IAC1Dg1B,EAAKnvB,MAAQivB,GACblK,EAAQA,GAAS,EAAMA,EAAQ1qB,EAAM0qB,EAAQ1qB,IAE7C80B,EAAKnvB,MAAQivB,GACblK,GAASlrB,IAINkrB,EAKT,SAASqK,GAAqB3oB,EAAKwD,GACjC,IAAIolB,EAAO5oB,EAAMwD,EAQjB,OANIolB,GAAQh1B,EACVg1B,GAAQj1B,EACCi1B,GAAQh1B,IACjBg1B,GAAQj1B,GAGHi1B,EAGF,IACP,IACElpB,KA/XK,WACL3G,KAAKlC,GAAKkC,KAAKlC,IAAM,EACrBkC,KAAKhC,GAAKgC,KAAKhC,IAAM,EACrBgC,KAAKpD,KAAOoD,KAAKpD,MAAQ,EACzBoD,KAAK7C,MAAQ6C,KAAK7C,OAAS,EAC3B6C,KAAK/C,OAAS+C,KAAK/C,QAAU,EAC7B+C,KAAKwf,MAAQxf,KAAKwf,OAAS,mCAGvBxf,KAAKpD,MAAQvC,EAAUM,EAAS,EAClCqF,KAAK8vB,KAAON,GACHxvB,KAAKpD,QAAUvC,EAAUM,EAAS,GAC3CqF,KAAK8vB,KAAON,GACHl1B,KAAKuL,IAAI7F,KAAK7C,QAAUxC,EACjCqF,KAAK8vB,KAAON,GACHl1B,KAAKuL,IAAI7F,KAAK7C,QAAU9C,EAAUM,EAC3CqF,KAAK8vB,KAAO9vB,KAAK7C,MAAQ,EAAMqyB,GAAkBA,GAEjDxvB,KAAK8vB,KAAON,GAME,IAAZxvB,KAAK4G,KACP5G,KAAK+vB,YAAc,GAAK/vB,KAAK9D,EAAI8D,KAAK5B,GAAK4B,KAAK9D,EAChD8D,KAAKgwB,oBAAsBhwB,KAAK+vB,YAAc/vB,KAAK+vB,cAsWrD/1B,QAjWK,SAAiBoC,GACtB,IAII8K,EAAKD,EACLse,EAAOxf,EACPoL,EAAG8G,EANHgY,EAAK,CACPrqB,EAAG,EACHoB,EAAG,GAOD2oB,EAAO,CACTnvB,MAAO,GAuBT,GApBApE,EAAEwJ,GAAK5F,KAAK7C,MAOV+J,EAFc,IAAZlH,KAAK4G,GAEDtM,KAAKgM,KAAKtG,KAAKgwB,oBAAsB11B,KAAK4L,IAAI9J,EAAE4K,IAEhD5K,EAAE4K,EASVC,EAAM7K,EAAEwJ,EAEJ5F,KAAK8vB,OAASN,GAChBzpB,EAAM1L,EAAU6M,EAEZD,GAAOtM,GAAUsM,GAAO5M,EAAUM,GACpCg1B,EAAKnvB,MAAQivB,GACblK,EAAQte,EAAM5M,GACL4M,EAAM5M,EAAUM,GAAUsM,KAAS5M,EAAUM,IACtDg1B,EAAKnvB,MAAQivB,GACblK,EAAQte,EAAM,EAAMA,EAAMpM,EAAMoM,EAAMpM,GAC7BoM,IAAQ5M,EAAUM,IAAWsM,IAAQtM,GAC9Cg1B,EAAKnvB,MAAQivB,GACblK,EAAQte,EAAM5M,IAEds1B,EAAKnvB,MAAQivB,GACblK,EAAQte,QAEL,GAAIjH,KAAK8vB,OAASN,GACvBzpB,EAAM1L,EAAU6M,EAEZD,GAAOtM,GAAUsM,GAAO5M,EAAUM,GACpCg1B,EAAKnvB,MAAQivB,GACblK,GAASte,EAAM5M,GACN4M,EAAMtM,GAAUsM,IAAQtM,GACjCg1B,EAAKnvB,MAAQivB,GACblK,GAASte,GACAA,GAAOtM,GAAUsM,KAAS5M,EAAUM,IAC7Cg1B,EAAKnvB,MAAQivB,GACblK,GAASte,EAAM5M,IAEfs1B,EAAKnvB,MAAQivB,GACblK,EAAQte,EAAM,GAAOA,EAAMpM,GAAOoM,EAAMpM,OAErC,CACL,IAAIyuB,EAAGjf,EAAGqQ,EACN8F,EAAQC,EACRyP,EAEAlwB,KAAK8vB,OAASN,GAChBvoB,EAAM2oB,GAAqB3oB,GAAM5M,GACxB2F,KAAK8vB,OAASN,GACvBvoB,EAAM2oB,GAAqB3oB,GAAMpM,GACxBmF,KAAK8vB,OAASN,KACvBvoB,EAAM2oB,GAAqB3oB,GAAM5M,IAGnCmmB,EAASlmB,KAAKiM,IAAIW,GAClBuZ,EAASnmB,KAAKwM,IAAII,GAClBgpB,EAAS51B,KAAKiM,IAAIU,GAElBqiB,EAAI7I,EADKnmB,KAAKwM,IAAIG,GAElBoD,EAAIoW,EAASyP,EACbxV,EAAI8F,EAEAxgB,KAAK8vB,OAASN,GAEhBjK,EAAQmK,GADR3pB,EAAMzL,KAAKihB,KAAK+N,GACsB5O,EAAGrQ,EAAGslB,GACnC3vB,KAAK8vB,OAASN,GAEvBjK,EAAQmK,GADR3pB,EAAMzL,KAAKihB,KAAKlR,GACsBqQ,GAAI4O,EAAGqG,GACpC3vB,KAAK8vB,OAASN,GAEvBjK,EAAQmK,GADR3pB,EAAMzL,KAAKihB,MAAM+N,GACqB5O,GAAIrQ,EAAGslB,GACpC3vB,KAAK8vB,OAASN,GAEvBjK,EAAQmK,GADR3pB,EAAMzL,KAAKihB,MAAMlR,GACqBqQ,EAAG4O,EAAGqG,IAG5C5pB,EAAMwf,EAAQ,EACdoK,EAAKnvB,MAAQivB,IA4BjB,OApBAxX,EAAK3d,KAAKgM,KAAK,GAAKzL,GAAO0qB,EAAQjrB,KAAKihB,KAAKjhB,KAAKiM,IAAIgf,GAASjrB,KAAKwM,IAAInM,IAAWN,IACnF8W,EAAI7W,KAAKqL,MAAM,EAAIrL,KAAKwM,IAAIf,KAASzL,KAAKwM,IAAImR,GAAM3d,KAAKwM,IAAImR,KAAQ,EAAI3d,KAAKwM,IAAIxM,KAAKgM,KAAK,EAAIhM,KAAKwM,IAAIye,OAGrGoK,EAAKnvB,QAAUivB,GACjBxX,GAAM5d,EACGs1B,EAAKnvB,QAAUivB,GACxBxX,GAAMpd,EACG80B,EAAKnvB,QAAUivB,KACxBxX,GAAM,IAAMpd,GAKdo1B,EAAGrqB,EAAIuL,EAAI7W,KAAKwM,IAAImR,GACpBgY,EAAGjpB,EAAImK,EAAI7W,KAAKiM,IAAI0R,GACpBgY,EAAGrqB,EAAIqqB,EAAGrqB,EAAI5F,KAAK9D,EAAI8D,KAAKlC,GAC5BmyB,EAAGjpB,EAAIipB,EAAGjpB,EAAIhH,KAAK9D,EAAI8D,KAAKhC,GAC5B5B,EAAEwJ,EAAIqqB,EAAGrqB,EACTxJ,EAAE4K,EAAIipB,EAAGjpB,EACF5K,GAgOPnC,QA5NK,SAAiBmC,GACtB,IAII6b,EAAIkY,EAAIC,EAAOC,EACfC,EAAU/K,EAAO9f,EAAQM,EACzBoL,EAqJEof,EACAnF,EAAQoF,EA5JVC,EAAK,CACPzJ,IAAK,EACLjhB,IAAK,GAKH4pB,EAAO,CACTnvB,MAAO,GAiDT,GA7CApE,EAAEwJ,GAAKxJ,EAAEwJ,EAAI5F,KAAKlC,IAAMkC,KAAK9D,EAC7BE,EAAE4K,GAAK5K,EAAE4K,EAAIhH,KAAKhC,IAAMgC,KAAK9D,EAI7Bi0B,EAAK71B,KAAKgM,KAAKhM,KAAKqL,KAAKvJ,EAAEwJ,EAAIxJ,EAAEwJ,EAAIxJ,EAAE4K,EAAI5K,EAAE4K,IAC7CiR,EAAK3d,KAAKmU,MAAMrS,EAAE4K,EAAG5K,EAAEwJ,GAEnBxJ,EAAEwJ,GAAK,GAAOxJ,EAAEwJ,GAAKtL,KAAKuL,IAAIzJ,EAAE4K,GAClC2oB,EAAKnvB,MAAQivB,GACJrzB,EAAE4K,GAAK,GAAO5K,EAAE4K,GAAK1M,KAAKuL,IAAIzJ,EAAEwJ,IACzC+pB,EAAKnvB,MAAQivB,GACbxX,GAAM5d,GACG+B,EAAEwJ,EAAI,IAAQxJ,EAAEwJ,GAAKtL,KAAKuL,IAAIzJ,EAAE4K,IACzC2oB,EAAKnvB,MAAQivB,GACbxX,EAAKA,EAAK,EAAMA,EAAKpd,EAAMod,EAAKpd,IAEhC80B,EAAKnvB,MAAQivB,GACbxX,GAAM5d,GASR8W,EAAItW,EAAM,GAAKP,KAAK4L,IAAI+R,GACxBqY,EAAWh2B,KAAKiM,IAAI4K,IAAM7W,KAAKwM,IAAIqK,GAAK,EAAI7W,KAAKqL,KAAK,IACtD4f,EAAQjrB,KAAKgM,KAAKgqB,IAGlB7qB,EAAS,GAFT2qB,EAAQ91B,KAAKwM,IAAImR,IAEImY,GADrBC,EAAQ/1B,KAAK4L,IAAIiqB,IACoBE,GAAS,EAAI/1B,KAAKwM,IAAIxM,KAAKgM,KAAK,EAAIhM,KAAKwM,IAAIye,QAEpE,EACZ9f,GAAU,EACDA,EAAS,IAClBA,EAAS,GAQPzF,KAAK8vB,OAASN,GAChBzpB,EAAMzL,KAAKihB,KAAK9V,GAChBgrB,EAAG1qB,IAAM1L,EAAU0L,EAEf4pB,EAAKnvB,QAAUivB,GACjBgB,EAAGzJ,IAAMzB,EAAQlrB,EACRs1B,EAAKnvB,QAAUivB,GACxBgB,EAAGzJ,IAAMzB,EAAQ,EAAMA,EAAQ1qB,EAAM0qB,EAAQ1qB,EACpC80B,EAAKnvB,QAAUivB,GACxBgB,EAAGzJ,IAAMzB,EAAQlrB,EAIfo2B,EAAGzJ,IAAMzB,OAER,GAAIvlB,KAAK8vB,OAASN,GACvBzpB,EAAMzL,KAAKihB,KAAK9V,GAChBgrB,EAAG1qB,IAAMA,EAAM1L,EAEXs1B,EAAKnvB,QAAUivB,GACjBgB,EAAGzJ,KAAOzB,EAAQlrB,EACTs1B,EAAKnvB,QAAUivB,GACxBgB,EAAGzJ,KAAOzB,EACDoK,EAAKnvB,QAAUivB,GACxBgB,EAAGzJ,KAAOzB,EAAQlrB,EAIhBo2B,EAAGzJ,IAAMzB,EAAQ,GAAOA,EAAQ1qB,GAAO0qB,EAAQ1qB,MAE9C,CAEL,IAAIyuB,EAAGjf,EAAGqQ,EAEVvJ,GADAmY,EAAI7jB,GACI6jB,EAWNjf,GAHF8G,IALEuJ,EADEvJ,GAAK,EACH,EAEA7W,KAAKqL,KAAK,EAAIwL,GAAK7W,KAAKiM,IAAIgf,IAGzB7K,IAEA,EACH,EAEApgB,KAAKqL,KAAK,EAAIwL,GAKhBwe,EAAKnvB,QAAUivB,IACjBte,EAAI9G,EACJA,GAAKqQ,EACLA,EAAIvJ,GACKwe,EAAKnvB,QAAUivB,IACxBplB,GAAKA,EACLqQ,GAAKA,GACIiV,EAAKnvB,QAAUivB,KACxBte,EAAI9G,EACJA,EAAIqQ,EACJA,GAAKvJ,GAKHnR,KAAK8vB,OAASN,IAChBre,EAAImY,EACJA,GAAKjf,EACLA,EAAI8G,GACKnR,KAAK8vB,OAASN,IACvBlG,GAAKA,EACLjf,GAAKA,GACIrK,KAAK8vB,OAASN,KACvBre,EAAImY,EACJA,EAAIjf,EACJA,GAAK8G,GAKPsf,EAAG1qB,IAAMzL,KAAKihB,MAAMb,GAAKrgB,EACzBo2B,EAAGzJ,IAAM1sB,KAAKmU,MAAMpE,EAAGif,GAEnBtpB,KAAK8vB,OAASN,GAChBiB,EAAGzJ,IAAM4I,GAAqBa,EAAGzJ,KAAM3sB,GAC9B2F,KAAK8vB,OAASN,GACvBiB,EAAGzJ,IAAM4I,GAAqBa,EAAGzJ,KAAMnsB,GAC9BmF,KAAK8vB,OAASN,KACvBiB,EAAGzJ,IAAM4I,GAAqBa,EAAGzJ,KAAM3sB,IAuB3C,OAhBgB,IAAZ2F,KAAK4G,KAGP2pB,EAAcE,EAAG1qB,IAAM,EAAI,EAAI,EAC/BqlB,EAAS9wB,KAAK4L,IAAIuqB,EAAG1qB,KACrByqB,EAAKxwB,KAAK5B,EAAI9D,KAAKqL,KAAKylB,EAASA,EAASprB,KAAKgwB,qBAC/CS,EAAG1qB,IAAMzL,KAAKgM,KAAKhM,KAAKqL,KAAK3F,KAAK9D,EAAI8D,KAAK9D,EAAIs0B,EAAKA,IAAOxwB,KAAK+vB,YAAcS,IAE1ED,IACFE,EAAG1qB,KAAO0qB,EAAG1qB,MAIjB0qB,EAAGzJ,KAAOhnB,KAAK7C,MACff,EAAEwJ,EAAI6qB,EAAGzJ,IACT5qB,EAAE4K,EAAIypB,EAAG1qB,IACF3J,GAkDPmL,MALiB,CAAC,mCAAoC,mCAAoC,QC3YxFmpB,GAAU,CAAC,CAAC,EAAQ,WAAa,WAAa,WAAa,CAAC,OAAS,WAAc,UAAa,WAAa,CAAC,OAAS,UAAa,YAAc,YAAc,CAAC,KAAS,WAAa,SAAY,WAAa,CAAC,OAAS,WAAa,YAAc,YAAc,CAAC,MAAS,WAAa,WAAa,WAAa,CAAC,KAAS,WAAa,WAAa,YAAc,CAAC,OAAS,WAAa,YAAc,WAAa,CAAC,OAAS,WAAa,SAAY,YAAc,CAAC,OAAS,WAAa,YAAc,YAAc,CAAC,OAAS,WAAa,UAAa,YAAc,CAAC,MAAS,WAAa,WAAa,YAAc,CAAC,OAAS,WAAa,WAAa,YAAc,CAAC,OAAS,WAAa,UAAa,YAAc,CAAC,OAAS,WAAa,YAAc,WAAa,CAAC,OAAS,WAAa,UAAa,YAAc,CAAC,OAAS,QAAU,WAAa,YAAc,CAAC,OAAS,UAAY,OAAU,YAAc,CAAC,OAAS,UAAY,UAAa,aACx6BC,GAAU,CAAC,EAAE,WAAa,MAAQ,YAAc,YAAc,CAAC,KAAQ,OAAS,WAAa,aAAc,CAAC,KAAQ,MAAQ,YAAc,YAAc,CAAC,KAAQ,UAAY,WAAa,YAAc,CAAC,KAAQ,SAAW,YAAc,SAAW,CAAC,IAAQ,UAAY,WAAa,YAAc,CAAC,KAAQ,SAAW,YAAc,YAAc,CAAC,KAAQ,UAAY,YAAc,YAAc,CAAC,MAAQ,UAAY,YAAc,YAAc,CAAC,MAAQ,UAAY,YAAc,YAAc,CAAC,MAAQ,UAAY,YAAc,YAAc,CAAC,MAAQ,SAAW,YAAc,YAAc,CAAC,MAAQ,UAAY,YAAc,YAAc,CAAC,MAAQ,UAAY,YAAc,YAAc,CAAC,MAAQ,UAAY,UAAa,YAAc,CAAC,MAAQ,WAAa,UAAa,SAAY,CAAC,MAAQ,WAAa,WAAc,WAAa,CAAC,MAAQ,WAAa,QAAW,WAAa,CAAC,EAAQ,WAAa,WAAc,YAC74BC,GAAM,MACNC,GAAM,OACNhZ,GAAKnd,EAAM,EAGXo2B,GAAQ,GAERC,GAAY,SAAmBC,EAAOprB,GACxC,OAAOorB,EAAM,GAAKprB,GAAKorB,EAAM,GAAKprB,GAAKorB,EAAM,GAAKprB,EAAIorB,EAAM,MAsGvD,IACP,IACErqB,KAlFK,WACL3G,KAAKlC,GAAKkC,KAAKlC,IAAM,EACrBkC,KAAKhC,GAAKgC,KAAKhC,IAAM,EACrBgC,KAAK7C,MAAQ6C,KAAK7C,OAAS,EAC3B6C,KAAK4G,GAAK,EACV5G,KAAKwf,MAAQxf,KAAKwf,OAAS,YA8E3BxlB,QA5EK,SAAiBwW,GACtB,IAAIvJ,EAAME,EAAWqJ,EAAG5K,EAAI5F,KAAK7C,OAC7BiJ,EAAO9L,KAAKuL,IAAI2K,EAAGxJ,GACnBrO,EAAI2B,KAAKkX,MAAMpL,EAAOyR,IAEtBlf,EAAI,EACNA,EAAI,EACKA,GAAKm4B,KACdn4B,EAAIm4B,IAIN,IAAIb,EAAK,CACPrqB,EAAGmrB,GAAUL,GAAQ/3B,GAFvByN,EAAO1L,GAAO0L,EA5CN,mBA4CmBzN,IAEQsO,EACjCD,EAAG+pB,GAAUJ,GAAQh4B,GAAIyN,IAS3B,OANIoK,EAAGxJ,EAAI,IACTipB,EAAGjpB,GAAKipB,EAAGjpB,GAGbipB,EAAGrqB,EAAIqqB,EAAGrqB,EAAI5F,KAAK9D,EAAI00B,GAAM5wB,KAAKlC,GAClCmyB,EAAGjpB,EAAIipB,EAAGjpB,EAAIhH,KAAK9D,EAAI20B,GAAM7wB,KAAKhC,GAC3BiyB,GAsDPh2B,QApDK,SAAiBg2B,GACtB,IAAIzf,EAAK,CACP5K,GAAIqqB,EAAGrqB,EAAI5F,KAAKlC,KAAOkC,KAAK9D,EAAI00B,IAChC5pB,EAAG1M,KAAKuL,IAAIoqB,EAAGjpB,EAAIhH,KAAKhC,KAAOgC,KAAK9D,EAAI20B,KAG1C,GAAIrgB,EAAGxJ,GAAK,EAEVwJ,EAAG5K,GAAK8qB,GAAQI,IAAO,GACvBtgB,EAAGxJ,EAAIipB,EAAGjpB,EAAI,GAAK3M,EAAUA,MACxB,CAEL,IAAI1B,EAAI2B,KAAKkX,MAAMhB,EAAGxJ,EAAI8pB,IAQ1B,IANIn4B,EAAI,EACNA,EAAI,EACKA,GAAKm4B,KACdn4B,EAAIm4B,MAIJ,GAAIH,GAAQh4B,GAAG,GAAK6X,EAAGxJ,IACnBrO,MACG,MAAIg4B,GAAQh4B,EAAI,GAAG,IAAM6X,EAAGxJ,GAGjC,QAFErO,EAON,IAAIq4B,EAAQL,GAAQh4B,GAChBwY,EAAI,GAAKX,EAAGxJ,EAAIgqB,EAAM,KAAOL,GAAQh4B,EAAI,GAAG,GAAKq4B,EAAM,IAE3D7f,EAjFJ,SAAwB8f,EAAMtpB,EAAOupB,EAASC,GAG5C,IAFA,IAAIvrB,EAAI+B,EAEDwpB,IAASA,EAAO,CACrB,IAAIC,EAAMH,EAAKrrB,GAGf,GAFAA,GAAKwrB,EAED92B,KAAKuL,IAAIurB,GAAOF,EAClB,MAIJ,OAAOtrB,EAqEDyrB,EAAe,SAAUzrB,GAC3B,OAAQmrB,GAAUC,EAAOprB,GAAK4K,EAAGxJ,GAtFvB,SAAmBgqB,EAAOprB,GACxC,OAAOorB,EAAM,GAAKprB,GAAK,EAAIorB,EAAM,GAAS,EAAJprB,EAAQorB,EAAM,IAqFVM,CAAUN,EAAOprB,KACtDuL,EAAG3W,EAAO,KACbgW,EAAG5K,GAAKmrB,GAAUL,GAAQ/3B,GAAIwY,GAC9BX,EAAGxJ,GAAK,EAAIrO,EAAIwY,GAAK1W,EAEjBw1B,EAAGjpB,EAAI,IACTwJ,EAAGxJ,GAAKwJ,EAAGxJ,GAKf,OADAwJ,EAAG5K,EAAIuB,EAAWqJ,EAAG5K,EAAI5F,KAAK7C,OACvBqT,GAOPjJ,MALiB,CAAC,WAAY,UCzGzB,IACP,IACEZ,KAbK,WACL3G,KAAKkB,KAAO,WAaZlH,QAXK,SAAiBoC,GAEtB,OADYyQ,GAAqBzQ,EAAG4D,KAAK4G,GAAI5G,KAAK9D,IAWlDjC,QARK,SAAiBmC,GAEtB,OADYmR,GAAqBnR,EAAG4D,KAAK4G,GAAI5G,KAAK9D,EAAG8D,KAAK5B,IAQ1DmJ,MALiB,CAAC,aAAc,aAAc,UAAW,YCZvD6gB,GACM,EADNA,GAEM,EAFNA,GAGK,EAHLA,GAIK,EAIL9rB,GAAS,CACXyf,EAAG,CACD3iB,IAAK,IACLuZ,KAAK,GAGP4e,IAAK,CACHn4B,IAAK,EACLuZ,KAAK,EACL6e,SAAS,GAGXC,KAAM,CACJr4B,IAAK,EACLuZ,KAAK,EACL6e,SAAS,GAGXr0B,MAAO,CACL/D,IAAK,EACLuZ,KAAK,GAGP/V,KAAM,CACJxD,IAAK,EACLuZ,KAAK,IA8JF,IACP,IACEhM,KA5JK,WA2BL,GA1BA7N,OAAOC,KAAKuD,IAAQgH,QAAQ,SAAUlH,GACpC,QAAuB,IAAZ4D,KAAK5D,GACd4D,KAAK5D,GAAKE,GAAOF,GAAGhD,QACf,IAAIkD,GAAOF,GAAGuW,KAAO7B,MAAM9Q,KAAK5D,IACrC,MAAM,IAAI2D,MAAM,4CAA8C3D,EAAI,MAAQ4D,KAAK5D,IACtEE,GAAOF,GAAGuW,MACnB3S,KAAK5D,GAAKM,WAAWsD,KAAK5D,KAGxBE,GAAOF,GAAGo1B,UACZxxB,KAAK5D,GAAK4D,KAAK5D,GAAK3B,IAEtBi3B,KAAK1xB,OAEH1F,KAAKuL,IAAIvL,KAAKuL,IAAI7F,KAAKpD,MAAQvC,GAAWG,EAC5CwF,KAAKooB,KAAOpoB,KAAKpD,KAAO,EAAIwrB,GAAcA,GACjC9tB,KAAKuL,IAAI7F,KAAKpD,MAAQpC,EAC/BwF,KAAKooB,KAAOA,IAEZpoB,KAAKooB,KAAOA,GACZpoB,KAAKwiB,OAASloB,KAAKiM,IAAIvG,KAAKpD,MAC5BoD,KAAKoiB,OAAS9nB,KAAKwM,IAAI9G,KAAKpD,OAG9BoD,KAAK2xB,IAAM3xB,KAAK+b,EAAI/b,KAAK9D,EAErB8D,KAAK2xB,KAAO,GAAK3xB,KAAK2xB,IAAM,KAC9B,MAAM,IAAI5xB,MAAM,kBAGlBC,KAAK5D,EAAI,EAAI4D,KAAK2xB,IAClB3xB,KAAK4xB,GAAK,EAAI5xB,KAAK5D,EACnB4D,KAAKwc,GAAK,EAAIxc,KAAK2xB,IACnB3xB,KAAK6xB,OAAS7xB,KAAK5D,EAAI,GAAK4D,KAAKwc,GACjCxc,KAAK4G,GAAK,EACV,IAAIkrB,EAAQ9xB,KAAKyxB,KACbh0B,EAAQuC,KAAKuxB,IACjBvxB,KAAK+xB,GAAKz3B,KAAKwM,IAAIrJ,GACnBuC,KAAKgyB,GAAK13B,KAAKiM,IAAI9I,GACnBuC,KAAKiyB,GAAK33B,KAAKwM,IAAIgrB,GACnB9xB,KAAKkyB,GAAK53B,KAAKiM,IAAIurB,IAoHnB93B,QAlHK,SAAiBoC,GACtBA,EAAEwJ,GAAK5F,KAAK7C,MACZ,IAGIyI,EAAGoB,EA0CHmrB,EAAIC,EA7CJ5sB,EAASlL,KAAKiM,IAAInK,EAAE4K,GACpBvB,EAASnL,KAAKwM,IAAI1K,EAAE4K,GACpBoiB,EAAS9uB,KAAKwM,IAAI1K,EAAEwJ,GAGxB,OAAQ5F,KAAKooB,MACX,KAAKA,GACHphB,EAAIhH,KAAKwiB,OAAShd,EAASxF,KAAKoiB,OAAS3c,EAAS2jB,EAClD,MAEF,KAAKhB,GACHphB,EAAIvB,EAAS2jB,EACb,MAEF,KAAKhB,GACHphB,GAAKxB,EACL,MAEF,KAAK4iB,GACHphB,EAAIxB,EAOR,OAFAI,GADAoB,EAAIhH,KAAK2xB,KAAO3xB,KAAK5D,EAAI4K,IACjBvB,EAASnL,KAAKiM,IAAInK,EAAEwJ,GAEpB5F,KAAKooB,MACX,KAAKA,GACHphB,GAAKhH,KAAKoiB,OAAS5c,EAASxF,KAAKwiB,OAAS/c,EAAS2jB,EACnD,MAEF,KAAKhB,GACHphB,GAAKxB,EACL,MAEF,KAAK4iB,GACHphB,IAAOvB,EAAS2jB,EAChB,MAEF,KAAKhB,GACHphB,GAAKvB,EAAS2jB,EAYlB,OALAgJ,EAAK,IADLD,EAAKnrB,EAAIhH,KAAK+xB,GAAKnsB,EAAI5F,KAAKgyB,IACbhyB,KAAKkyB,GAAKlyB,KAAKwc,GAAKxc,KAAKiyB,IACxCrsB,GAAKA,EAAI5F,KAAK+xB,GAAK/qB,EAAIhH,KAAKgyB,IAAMhyB,KAAKiyB,GAAKG,EAC5CprB,EAAImrB,EAAKC,EACTh2B,EAAEwJ,EAAIA,EAAI5F,KAAK9D,EACfE,EAAE4K,EAAIA,EAAIhH,KAAK9D,EACRE,GA6DPnC,QA3DK,SAAiBmC,GACtBA,EAAEwJ,GAAK5F,KAAK9D,EACZE,EAAE4K,GAAKhH,KAAK9D,EACZ,IAKIm2B,EAAIC,EAAIH,EALR9nB,EAAI,CACNzE,EAAGxJ,EAAEwJ,EACLoB,EAAG5K,EAAE4K,GAIPmrB,EAAK,GAAKnyB,KAAK2xB,IAAMv1B,EAAE4K,EAAIhH,KAAKkyB,IAChCG,EAAKryB,KAAK2xB,IAAMv1B,EAAEwJ,EAAIusB,EACtBG,EAAKtyB,KAAK2xB,IAAMv1B,EAAE4K,EAAIhH,KAAKiyB,GAAKE,EAChC/1B,EAAEwJ,EAAIysB,EAAKryB,KAAK+xB,GAAKO,EAAKtyB,KAAKgyB,GAC/B51B,EAAE4K,EAAIsrB,EAAKtyB,KAAK+xB,GAAKM,EAAKryB,KAAKgyB,GAC/B,IAAIzR,EAAKnE,GAAMhgB,EAAEwJ,EAAGxJ,EAAE4K,GAEtB,GAAI1M,KAAKuL,IAAI0a,GAAM/lB,EACjB6P,EAAEzE,EAAI,EACNyE,EAAErD,EAAI5K,EAAE4K,MACH,CACL,IAAI6iB,EAAMC,EAKV,OAJAA,EAAO,EAAIvJ,EAAKA,EAAKvgB,KAAK6xB,MAC1B/H,GAAQ9pB,KAAK5D,EAAI9B,KAAKqL,KAAKmkB,KAAU9pB,KAAK2xB,IAAMpR,EAAKA,EAAKvgB,KAAK2xB,KAC/D9H,EAAOvvB,KAAKqL,KAAK,EAAImkB,EAAOA,GAEpB9pB,KAAKooB,MACX,KAAKA,GACH/d,EAAErD,EAAI1M,KAAK0hB,KAAK6N,EAAO7pB,KAAKwiB,OAASpmB,EAAE4K,EAAI8iB,EAAO9pB,KAAKoiB,OAAS7B,GAChEnkB,EAAE4K,GAAK6iB,EAAO7pB,KAAKwiB,OAASloB,KAAKiM,IAAI8D,EAAErD,IAAMuZ,EAC7CnkB,EAAEwJ,GAAKkkB,EAAO9pB,KAAKoiB,OACnB,MAEF,KAAKgG,GACH/d,EAAErD,EAAI1M,KAAK0hB,KAAK5f,EAAE4K,EAAI8iB,EAAOvJ,GAC7BnkB,EAAE4K,EAAI6iB,EAAOtJ,EACbnkB,EAAEwJ,GAAKkkB,EACP,MAEF,KAAK1B,GACH/d,EAAErD,EAAI1M,KAAK0hB,KAAK6N,GAChBztB,EAAE4K,GAAK5K,EAAE4K,EACT,MAEF,KAAKohB,GACH/d,EAAErD,GAAK1M,KAAK0hB,KAAK6N,GAIrBxf,EAAEzE,EAAItL,KAAKmU,MAAMrS,EAAEwJ,EAAGxJ,EAAE4K,GAK1B,OAFA5K,EAAEwJ,EAAIyE,EAAEzE,EAAI5F,KAAK7C,MACjBf,EAAE4K,EAAIqD,EAAErD,EACD5K,GAOPmL,MALiB,CAAC,qBAAsB,UCtL1C,gBAAqB,QAErB,QAAagrB,GACb,SAAc,IAAI,QAAW,SAC7B,SAAc,GACd,WAAgB,GAChB,QAAa,EACb,WjELe,SAAiBr3B,EAAKs3B,GACnC,IAAI3oB,EAAO,IAAI4oB,SAASD,GACpB9nB,EA6DN,SAA4Bb,GAC1B,IAAI6oB,EAAU7oB,EAAKuB,SAAS,GAAG,GAE/B,GAAgB,KAAZsnB,EACF,OAAO,EAKO,MAFhBA,EAAU7oB,EAAKuB,SAAS,GAAG,KAGzBlH,QAAQ6V,KAAK,qEAGf,OAAO,EA1Ec4Y,CAAmB9oB,GACpC+oB,EA4EN,SAAoB/oB,EAAMa,GACxB,MAAO,CACLgoB,QAAS7oB,EAAKuB,SAAS,EAAGV,GAC1BmoB,eAAgBhpB,EAAKuB,SAAS,GAAIV,GAClCooB,UAAWjpB,EAAKuB,SAAS,GAAIV,GAC7BqoB,UAAWnpB,EAAaC,EAAM,GAAI,IAAQ7N,OAC1Cg3B,kBAAmBnpB,EAAKgB,WAAW,IAAKH,GACxCuoB,kBAAmBppB,EAAKgB,WAAW,IAAKH,GACxCwoB,gBAAiBrpB,EAAKgB,WAAW,IAAKH,GACtCyoB,gBAAiBtpB,EAAKgB,WAAW,IAAKH,IArF3B0oB,CAAWvpB,EAAMa,GAE1BkoB,EAAOE,UAAY,GACrB5uB,QAAQC,IAAI,uFAGd,IAAIiM,EAuFN,SAAsBvG,EAAM+oB,EAAQloB,GAIlC,IAHA,IAAI2oB,EAAa,IACblqB,EAAQ,GAEHxQ,EAAI,EAAGA,EAAIi6B,EAAOE,UAAWn6B,IAAK,CACzC,IAAI26B,EAAY9oB,GAAeX,EAAMwpB,EAAY3oB,GAC7CN,EAAQiB,GAAcxB,EAAMwpB,EAAYC,EAAW5oB,GACnD6oB,EAAiBj5B,KAAK+c,MAAM,GAAKic,EAAUtoB,eAAiBsoB,EAAUvoB,gBAAkBuoB,EAAUpoB,mBAClGsoB,EAAiBl5B,KAAK+c,MAAM,GAAKic,EAAUxoB,cAAgBwoB,EAAU1oB,eAAiB0oB,EAAUroB,kBAEpG9B,EAAM9M,KAAK,CACTmU,GAAI,CAAC9G,EAAiB4pB,EAAUvoB,gBAAiBrB,EAAiB4pB,EAAU1oB,gBAC5E0F,IAAK,CAAC5G,EAAiB4pB,EAAUpoB,mBAAoBxB,EAAiB4pB,EAAUroB,mBAChF0F,IAAK,CAAC4iB,EAAgBC,GACtBC,MAAOH,EAAUnoB,cACjBwG,IAAKxH,GAASC,KAIlB,OAAOjB,EA1GQuqB,CAAa7pB,EAAM+oB,EAAQloB,GACtCipB,EAAU,CACZf,OAAQA,EACRxiB,SAAUA,GAGZ,OADAhH,EAAelO,GAAOy4B,EACfA,GiETT,aAAkB55B,GAClB,QAAaua,GACb,WAAgB,cCSD,SAAU5b,GACvBA,EAAM65B,KAAKnmB,YAAY3E,IAAI+V,IAC3B9kB,EAAM65B,KAAKnmB,YAAY3E,IAAImX,IAC3BlmB,EAAM65B,KAAKnmB,YAAY3E,IAAIuN,IAC3Btc,EAAM65B,KAAKnmB,YAAY3E,IAAImsB,IAC3Bl7B,EAAM65B,KAAKnmB,YAAY3E,IAAIosB,IAC3Bn7B,EAAM65B,KAAKnmB,YAAY3E,IAAIqsB,IAC3Bp7B,EAAM65B,KAAKnmB,YAAY3E,IAAIssB,IAC3Br7B,EAAM65B,KAAKnmB,YAAY3E,IAAIusB,IAC3Bt7B,EAAM65B,KAAKnmB,YAAY3E,IAAIwsB,IAC3Bv7B,EAAM65B,KAAKnmB,YAAY3E,IAAIysB,IAC3Bx7B,EAAM65B,KAAKnmB,YAAY3E,IAAI0sB,IAC3Bz7B,EAAM65B,KAAKnmB,YAAY3E,IAAI2sB,IAC3B17B,EAAM65B,KAAKnmB,YAAY3E,IAAI4sB,IAC3B37B,EAAM65B,KAAKnmB,YAAY3E,IAAI6sB,IAC3B57B,EAAM65B,KAAKnmB,YAAY3E,IAAI8sB,IAC3B77B,EAAM65B,KAAKnmB,YAAY3E,IAAI+sB,IAC3B97B,EAAM65B,KAAKnmB,YAAY3E,IAAIgtB,IAC3B/7B,EAAM65B,KAAKnmB,YAAY3E,IAAIitB,IAC3Bh8B,EAAM65B,KAAKnmB,YAAY3E,IAAIktB,IAC3Bj8B,EAAM65B,KAAKnmB,YAAY3E,IAAImtB,IAC3Bl8B,EAAM65B,KAAKnmB,YAAY3E,IAAIotB,IAC3Bn8B,EAAM65B,KAAKnmB,YAAY3E,IAAIqtB,IAC3Bp8B,EAAM65B,KAAKnmB,YAAY3E,IAAIstB,IAC3Br8B,EAAM65B,KAAKnmB,YAAY3E,IAAIutB,IAC3Bt8B,EAAM65B,KAAKnmB,YAAY3E,IAAIwtB,IAC3Bv8B,EAAM65B,KAAKnmB,YAAY3E,IAAIytB,IAC3Bx8B,EAAM65B,KAAKnmB,YAAY3E,IAAI0tB,IAC3Bz8B,EAAM65B,KAAKnmB,YAAY3E,IAAI2tB,IDpC7B,CAAoB,IACpB","sources":["webpack://exmap/./node_modules/ol/proj/proj4.js","webpack://exmap/./node_modules/proj4/lib/constants/values.js","webpack://exmap/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://exmap/./node_modules/proj4/lib/constants/units.js","webpack://exmap/./node_modules/proj4/lib/match.js","webpack://exmap/./node_modules/proj4/lib/projString.js","webpack://exmap/./node_modules/wkt-parser/parser.js","webpack://exmap/./node_modules/wkt-parser/process.js","webpack://exmap/./node_modules/wkt-parser/index.js","webpack://exmap/./node_modules/proj4/lib/defs.js","webpack://exmap/./node_modules/proj4/lib/global.js","webpack://exmap/./node_modules/proj4/lib/parseCode.js","webpack://exmap/./node_modules/proj4/lib/extend.js","webpack://exmap/./node_modules/proj4/lib/common/msfnz.js","webpack://exmap/./node_modules/proj4/lib/common/sign.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_lon.js","webpack://exmap/./node_modules/proj4/lib/common/tsfnz.js","webpack://exmap/./node_modules/proj4/lib/common/phi2z.js","webpack://exmap/./node_modules/proj4/lib/projections/longlat.js","webpack://exmap/./node_modules/proj4/lib/projections.js","webpack://exmap/./node_modules/proj4/lib/projections/merc.js","webpack://exmap/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://exmap/./node_modules/proj4/lib/constants/Datum.js","webpack://exmap/./node_modules/proj4/lib/datum.js","webpack://exmap/./node_modules/proj4/lib/nadgrid.js","webpack://exmap/./node_modules/proj4/lib/Proj.js","webpack://exmap/./node_modules/proj4/lib/deriveConstants.js","webpack://exmap/./node_modules/proj4/lib/datumUtils.js","webpack://exmap/./node_modules/proj4/lib/datum_transform.js","webpack://exmap/./node_modules/proj4/lib/adjust_axis.js","webpack://exmap/./node_modules/proj4/lib/common/toPoint.js","webpack://exmap/./node_modules/proj4/lib/checkSanity.js","webpack://exmap/./node_modules/proj4/lib/transform.js","webpack://exmap/./node_modules/proj4/lib/core.js","webpack://exmap/./node_modules/mgrs/mgrs.js","webpack://exmap/./node_modules/proj4/lib/Point.js","webpack://exmap/./node_modules/proj4/lib/common/pj_enfn.js","webpack://exmap/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://exmap/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://exmap/./node_modules/proj4/lib/projections/tmerc.js","webpack://exmap/./node_modules/proj4/lib/common/sinh.js","webpack://exmap/./node_modules/proj4/lib/common/hypot.js","webpack://exmap/./node_modules/proj4/lib/common/asinhy.js","webpack://exmap/./node_modules/proj4/lib/common/log1py.js","webpack://exmap/./node_modules/proj4/lib/common/gatg.js","webpack://exmap/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://exmap/./node_modules/proj4/lib/common/cosh.js","webpack://exmap/./node_modules/proj4/lib/projections/etmerc.js","webpack://exmap/./node_modules/proj4/lib/common/clens.js","webpack://exmap/./node_modules/proj4/lib/projections/utm.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_zone.js","webpack://exmap/./node_modules/proj4/lib/common/srat.js","webpack://exmap/./node_modules/proj4/lib/projections/gauss.js","webpack://exmap/./node_modules/proj4/lib/projections/sterea.js","webpack://exmap/./node_modules/proj4/lib/projections/stere.js","webpack://exmap/./node_modules/proj4/lib/projections/somerc.js","webpack://exmap/./node_modules/proj4/lib/projections/omerc.js","webpack://exmap/./node_modules/proj4/lib/projections/lcc.js","webpack://exmap/./node_modules/proj4/lib/projections/krovak.js","webpack://exmap/./node_modules/proj4/lib/common/mlfn.js","webpack://exmap/./node_modules/proj4/lib/common/e0fn.js","webpack://exmap/./node_modules/proj4/lib/common/e1fn.js","webpack://exmap/./node_modules/proj4/lib/common/e2fn.js","webpack://exmap/./node_modules/proj4/lib/common/e3fn.js","webpack://exmap/./node_modules/proj4/lib/common/gN.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_lat.js","webpack://exmap/./node_modules/proj4/lib/common/imlfn.js","webpack://exmap/./node_modules/proj4/lib/projections/cass.js","webpack://exmap/./node_modules/proj4/lib/common/qsfnz.js","webpack://exmap/./node_modules/proj4/lib/projections/laea.js","webpack://exmap/./node_modules/proj4/lib/common/asinz.js","webpack://exmap/./node_modules/proj4/lib/projections/aea.js","webpack://exmap/./node_modules/proj4/lib/projections/gnom.js","webpack://exmap/./node_modules/proj4/lib/projections/cea.js","webpack://exmap/./node_modules/proj4/lib/common/iqsfnz.js","webpack://exmap/./node_modules/proj4/lib/projections/eqc.js","webpack://exmap/./node_modules/proj4/lib/projections/poly.js","webpack://exmap/./node_modules/proj4/lib/projections/nzmg.js","webpack://exmap/./node_modules/proj4/lib/projections/mill.js","webpack://exmap/./node_modules/proj4/lib/projections/sinu.js","webpack://exmap/./node_modules/proj4/lib/projections/moll.js","webpack://exmap/./node_modules/proj4/lib/projections/eqdc.js","webpack://exmap/./node_modules/proj4/lib/projections/vandg.js","webpack://exmap/./node_modules/proj4/lib/projections/aeqd.js","webpack://exmap/./node_modules/proj4/lib/projections/ortho.js","webpack://exmap/./node_modules/proj4/lib/projections/qsc.js","webpack://exmap/./node_modules/proj4/lib/projections/robin.js","webpack://exmap/./node_modules/proj4/lib/projections/geocent.js","webpack://exmap/./node_modules/proj4/lib/projections/tpers.js","webpack://exmap/./node_modules/proj4/lib/index.js","webpack://exmap/./node_modules/proj4/projs.js"],"sourcesContent":["/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { addCoordinateTransforms, addEquivalentProjections, addProjection, createSafeCoordinateTransform, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\n\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      var units = def.units;\n\n      if (!units && def.projName === 'longlat') {\n        units = Units.DEGREES;\n      }\n\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: units\n      }));\n    }\n  }\n\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, createSafeCoordinateTransform(proj1, proj2, transform.forward), createSafeCoordinateTransform(proj2, proj1, transform.inverse));\n        }\n      }\n    }\n  }\n}","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\n\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\n\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\n\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\n\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\n\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2; // ellipoid pj_set_ell.c\n\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\n\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\n\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10; // you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2; // SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\n\nexport var SPI = 3.14159265359;","var exports = {};\nexport { exports as default };\nexports.greenwich = 0.0; //\"0dE\",\n\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\n\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\n\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\n\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\n\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\n\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\n\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\n\nexports.ferro = -17.666666666667; //\"17d40'W\",\n\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\n\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\n\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\n\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"","export default {\n  ft: {\n    to_meter: 0.3048\n  },\n  'us-ft': {\n    to_meter: 1200 / 3937\n  }\n};","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport _units from './constants/units';\nimport match from './match';\nexport default function (defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function rf(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function lat_0(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function lat_1(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function lat_2(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function lat_ts(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function lon_0(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function lon_1(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function lon_2(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function alpha(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function gamma(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function lonc(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function x_0(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function y_0(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function k_0(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function k(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function a(v) {\n      self.a = parseFloat(v);\n    },\n    b: function b(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function r_a() {\n      self.R_A = true;\n    },\n    zone: function zone(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function south() {\n      self.utmSouth = true;\n    },\n    towgs84: function towgs84(v) {\n      self.datum_params = v.split(\",\").map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function to_meter(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function units(v) {\n      self.units = v;\n      var unit = match(_units, v);\n\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function from_greenwich(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function pm(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function nadgrids(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function axis(v) {\n      var legalAxis = \"ewnsud\";\n\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function approx() {\n      self.approx = true;\n    }\n  };\n\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n\n    if (paramName in params) {\n      paramOutname = params[paramName];\n\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n\n  if (typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\") {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n\n  return self;\n}","export default parseString;\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/; // const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\n\nParser.prototype.readCharicter = function () {\n  var char = this.text[this.place++];\n\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n\n      char = this.text[this.place++];\n    }\n  }\n\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n\n    case KEYWORD:\n      return this.keyword(char);\n\n    case QUOTED:\n      return this.quoted(char);\n\n    case AFTERQUOTE:\n      return this.afterquote(char);\n\n    case NUMBER:\n      return this.number(char);\n\n    case ENDED:\n      return;\n  }\n};\n\nParser.prototype.afterquote = function (char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\n\nParser.prototype.afterItem = function (char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (char === ']') {\n    this.level--;\n\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\n\nParser.prototype.number = function (char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\n\nParser.prototype.quoted = function (char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n\n  this.word += char;\n  return;\n};\n\nParser.prototype.keyword = function (char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\n\nParser.prototype.neutral = function (char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\n\nParser.prototype.output = function () {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n\n  if (this.state === ENDED) {\n    return this.root;\n  }\n\n  throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}","function mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n\n  var key = v.shift();\n\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n\n    obj[key] = v[0];\n    return;\n  }\n\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n\n    obj[key].push(v);\n    return;\n  }\n\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n\n      return;\n\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n\n      return;\n\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n\n    default:\n      i = -1;\n\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n\n      return mapit(obj, key, v);\n  }\n}","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport { sExpr } from './process';\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n\n  if (!(outName in obj) && inName in obj) {\n    obj[outName] = obj[inName];\n\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n\n  if (wkt.AXIS) {\n    var axisOrder = '';\n\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n\n      if (axis[0].indexOf('north') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north') {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south') {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east') {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west') {\n        axisOrder += 'w';\n      }\n    }\n\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert * wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n\n  var geogcs = wkt.GEOGCS;\n\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n\n      wkt.datumCode = 'wgs84';\n    }\n\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, -6);\n    }\n\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, -8);\n    }\n\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n\n    if (~wkt.datumCode.indexOf('tm65') || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n\n  var renamer = function renamer(a) {\n    return rename(wkt, a);\n  };\n\n  var list = [['standard_parallel_1', 'Standard_Parallel_1'], ['standard_parallel_1', 'Latitude of 1st standard parallel'], ['standard_parallel_2', 'Standard_Parallel_2'], ['standard_parallel_2', 'Latitude of 2nd standard parallel'], ['false_easting', 'False_Easting'], ['false_easting', 'False easting'], ['false-easting', 'Easting at false origin'], ['false_northing', 'False_Northing'], ['false_northing', 'False northing'], ['false_northing', 'Northing at false origin'], ['central_meridian', 'Central_Meridian'], ['central_meridian', 'Longitude of natural origin'], ['central_meridian', 'Longitude of false origin'], ['latitude_of_origin', 'Latitude_Of_Origin'], ['latitude_of_origin', 'Central_Parallel'], ['latitude_of_origin', 'Latitude of natural origin'], ['latitude_of_origin', 'Latitude of false origin'], ['scale_factor', 'Scale_Factor'], ['k0', 'scale_factor'], ['latitude_of_center', 'Latitude_Of_Center'], ['latitude_of_center', 'Latitude_of_center'], ['lat0', 'latitude_of_center', d2r], ['longitude_of_center', 'Longitude_Of_Center'], ['longitude_of_center', 'Longitude_of_center'], ['longc', 'longitude_of_center', d2r], ['x0', 'false_easting', toMeter], ['y0', 'false_northing', toMeter], ['long0', 'central_meridian', d2r], ['lat0', 'latitude_of_origin', d2r], ['lat0', 'standard_parallel_1', d2r], ['lat1', 'standard_parallel_1', d2r], ['lat2', 'standard_parallel_2', d2r], ['azimuth', 'Azimuth'], ['alpha', 'azimuth', d2r], ['srsCode', 'name']];\n  list.forEach(renamer);\n\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\n\nexport default function (wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n\n  if (arguments.length === 2) {\n    var def = arguments[1];\n\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n\n    return;\n  }\n}\n\nglobals(defs);\nexport default defs;","export default function (defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\n\nfunction testObj(code) {\n  return typeof code === 'string';\n}\n\nfunction testDef(code) {\n  return code in defs;\n}\n\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction testWKT(code) {\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\n\nvar codes = ['3857', '900913', '3785', '102113'];\n\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n\n  if (!auth) {\n    return;\n  }\n\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\n\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n\n  if (!ext) {\n    return;\n  }\n\n  return match(ext, 'proj4');\n}\n\nfunction testProj(code) {\n  return code[0] === '+';\n}\n\nfunction parse(code) {\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n\n    if (testWKT(code)) {\n      var out = wkt(code); // test of spetial case, due to this being a very common and often malformed\n\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n\n      var maybeProjStr = checkProjStr(out);\n\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n\n      return out;\n    }\n\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else {\n    return code;\n  }\n}\n\nexport default parse;","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n\n  if (!source) {\n    return destination;\n  }\n\n  for (property in source) {\n    value = source[property];\n\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n\n  return destination;\n}","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / Math.sqrt(1 - con * con);\n}","export default function (x) {\n  return x < 0 ? -1 : 1;\n}","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\nexport default function (x) {\n  return Math.abs(x) <= SPI ? x : x - sign(x) * TWO_PI;\n}","import { HALF_PI } from '../constants/values';\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow((1 - con) / (1 + con), com);\n  return Math.tan(0.5 * (HALF_PI - phi)) / con;\n}","import { HALF_PI } from '../constants/values';\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * Math.pow((1 - con) / (1 + con), eccnth)) - phi;\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"phi2z has NoConvergence\");\n\n\n  return -9999;\n}","export function init() {//no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\n\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n\n  var n = name.toLowerCase();\n\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};","import msfnz from '../common/msfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n\n  this.e = Math.sqrt(this.es);\n\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y; // convert to radians\n\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\n\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  }\n\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","var exports = {};\nexport { exports as default };\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};","var exports = {};\nexport { exports as default };\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = out.datum_params[6] / 1000000.0 + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n\n  out.a = a; //datum object also uses these values\n\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\nvar loadedNadgrids = {};\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\n\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {\n    header: header,\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\n\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n\n  var optional = value[0] === '@';\n\n  if (optional) {\n    value = value.slice(1);\n  }\n\n  if (value === 'null') {\n    return {\n      name: 'null',\n      mandatory: !optional,\n      grid: null,\n      isNull: true\n    };\n  }\n\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return seconds / 3600 * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n\n  if (nFields === 11) {\n    return false;\n  }\n\n  nFields = view.getInt32(8, true);\n\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval); // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian)\n    };\n    gridShiftRecords.push(record);\n  }\n\n  return gridShiftRecords;\n}","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from \"./nadgrid\";\n\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n\n  var json = parseCode(srsCode);\n\n  if (typeof json !== 'object') {\n    callback(srsCode);\n    return;\n  }\n\n  var ourProj = Projection.projections.get(json.projName);\n\n  if (!ourProj) {\n    callback(srsCode);\n    return;\n  }\n\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2, nadgrids);\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n\n  extend(this, ourProj); // transfer all the methods from the projection\n  // copy the 4 things over we calulated in deriveConstants.sphere\n\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere; // copy the 3 things we calculated in deriveConstants.eccentricity\n\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2; // add in the datum object\n\n  this.datum = datumObj; // init the projection\n\n  this.init(); // legecy callback from back in the day when it went to spatialreference.org\n\n  callback(null, this);\n}\n\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid, WGS84 } from './constants/Ellipsoid';\nimport match from './match';\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n\n  var b2 = b * b; // used in geocentric\n\n  var es = (a2 - b2) / a2; // e ^ 2\n\n  var e = 0;\n\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) {\n    // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}","'use strict';\n\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2];\n  } else if (source.datum_type === PJD_7PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6];\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\n\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn;\n  /*  Earth radius at location  */\n\n  var Sin_Lat;\n  /*  Math.sin(Latitude)  */\n\n  var Sin2_Lat;\n  /*  Square of Math.sin(Latitude)  */\n\n  var Cos_Lat;\n  /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return {\n      x: -Infinity,\n      y: -Infinity,\n      z: p.z\n    };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return {\n      x: Infinity,\n      y: Infinity,\n      z: p.z\n    };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= 2 * Math.PI;\n  }\n\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / Math.sqrt(1.0e0 - es * Sin2_Lat);\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: (Rn * (1 - es) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = genau * genau;\n  var maxiter = 30;\n  var P;\n  /* distance between semi-minor axis and location */\n\n  var RR;\n  /* distance between center and location */\n\n  var CT;\n  /* sin of geocentric latitude */\n\n  var ST;\n  /* cos of geocentric latitude */\n\n  var RX;\n  var RK;\n  var RN;\n  /* Earth radius at location */\n\n  var CPHI0;\n  /* cos of start or old geodetic latitude in iterations */\n\n  var SPHI0;\n  /* sin of start or old geodetic latitude in iterations */\n\n  var CPHI;\n  /* cos of searched geodetic latitude */\n\n  var SPHI;\n  /* sin of searched geodetic latitude */\n\n  var SDPHI;\n  /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n\n  var iter;\n  /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n\n  var Longitude;\n  var Latitude;\n  var Height;\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n  /*      special cases for latitude and longitude */\n\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n\n\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n    /*  ellipsoidal (geodetic) height */\n\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  } while (SDPHI * SDPHI > genau2 && iter < maxiter);\n  /*      ellipsoidal (geodetic) latitude */\n\n\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\n\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6]; // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\n\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF; //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n\n}","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_NODATUM, R2D, SRS_WGS84_ESQUARED, SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR } from './constants/values';\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\n\nfunction checkParams(type) {\n  return type === PJD_3PARAM || type === PJD_7PARAM;\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  } // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n\n\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  } // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n\n  var source_a = source.a;\n  var source_es = source.es;\n\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  } // Do we need to go through geocentric coordinates?\n\n\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  } // Convert to geocentric coordinates.\n\n\n  point = geodeticToGeocentric(point, source_es, source_a); // Convert between datums\n\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n\n  var input = {\n    x: -point.x,\n    y: point.y\n  };\n  var output = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n\n    onlyMandatoryGrids = grid.mandatory;\n\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n\n      continue;\n    }\n\n    var subgrid = grid.grid.subgrids[0]; // skip tables that don't match our point at all\n\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n      continue;\n    }\n\n    output = applySubgridShift(input, inverse, subgrid);\n\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\" + -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n\n  if (isNaN(pin.x)) {\n    return val;\n  }\n\n  var tb = {\n    x: pin.x,\n    y: pin.y\n  };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9,\n        tol = 1e-12;\n    var dif, del;\n\n    do {\n      del = nadInterpolate(t, ct);\n\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n\n      dif = {\n        x: tb.x - (del.x + t.x),\n        y: tb.y - (del.y + t.y)\n      };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {\n    x: pin.x / ct.del[0],\n    y: pin.y / ct.del[1]\n  };\n  var indx = {\n    x: Math.floor(t.x),\n    y: Math.floor(t.y)\n  };\n  var frct = {\n    x: t.x - 1.0 * indx.x,\n    y: t.y - 1.0 * indx.y\n  };\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var inx;\n\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n\n  inx = indx.y * ct.lim[0] + indx.x;\n  var f00 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx++;\n  var f10 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx += ct.lim[0];\n  var f11 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx--;\n  var f01 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  var m11 = frct.x * frct.y,\n      m10 = frct.x * (1.0 - frct.y),\n      m00 = (1.0 - frct.x) * (1.0 - frct.y),\n      m01 = (1.0 - frct.x) * frct.y;\n  val.x = m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x;\n  val.y = m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y;\n  return val;\n}","export default function (crs, denorm, point) {\n  var xin = point.x,\n      yin = point.y,\n      zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n\n    if (i === 0) {\n      v = xin;\n\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n\n      case 'w':\n        out[t] = -v;\n        break;\n\n      case 'n':\n        out[t] = v;\n        break;\n\n      case 's':\n        out[t] = -v;\n        break;\n\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n\n        break;\n\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n\n        break;\n\n      default:\n        //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n\n  return out;\n}","export default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\n\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n\n    throw new TypeError('coordinates must be finite numbers');\n  }\n\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84' || (dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84';\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n\n  checkSanity(point); // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  } // Transform source points to long/lat, if they aren't already.\n\n\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n\n    point = source.inverse(point); // Convert Cartesian to longlat\n\n    if (!point) {\n      return;\n    }\n  } // Adjust for the prime meridian if necessary\n\n\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  } // Convert datums if needed, and if possible.\n\n\n  point = datum_transform(source.datum, dest.datum, point);\n\n  if (!point) {\n    return;\n  } // Adjust for the prime meridian if necessary\n\n\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else {\n    // else project\n    point = dest.forward(point);\n\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {\n      x: NaN,\n      y: NaN\n    };\n\n    if (coords.length > 2) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n\n    if (keys.length === 2) {\n      return out;\n    }\n\n    keys.forEach(function (key) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n\n  if (item.oProj) {\n    return item.oProj;\n  }\n\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n\n  toProj = checkProj(toProj);\n\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function forward(coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function inverse(coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n\n    if (single) {\n      obj.oProj = toProj;\n    }\n\n    return obj;\n  }\n}\n\nexport default proj4;","/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\nvar A = 65; // A\n\nvar I = 73; // I\n\nvar O = 79; // O\n\nvar V = 86; // V\n\nvar Z = 90; // Z\n\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\n\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n}\n;\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\n\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n}\n;\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n}\n;\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\n\nfunction degToRad(deg) {\n  return deg * (Math.PI / 180.0);\n}\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\n\n\nfunction radToDeg(rad) {\n  return 180.0 * (rad / Math.PI);\n}\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\n\n\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber; // (int)\n\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1; //Make sure the longitude 180.00 is in Zone 60\n\n  if (Long === 180) {\n    ZoneNumber = 60;\n  } // Special zone for Norway\n\n\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  } // Special zones for Svalbard\n\n\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    } else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    } else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    } else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n\n  LongOriginRad = degToRad(LongOrigin);\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - 35 * eccSquared * eccSquared * eccSquared / 3072 * Math.sin(6 * LatRad));\n  var UTMEasting = k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0;\n  var UTMNorthing = k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0));\n\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\n\n\nfunction UTMtoLL(utm) {\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber; // check the ZoneNummber is valid\n\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad; // remove 500,000 meter offset for longitude\n\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing; // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  } // There are 60 zones with zone 1 being at West -180 to -174\n\n\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + 151 * e1 * e1 * e1 / 96 * Math.sin(6 * mu); // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n  var lat = phi1Rad - N1 * Math.tan(phi1Rad) / R1 * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n  var result;\n\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  } else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n\n  return result;\n}\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\n\n\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if (84 >= lat && lat >= 72) {\n    LetterDesignator = 'X';\n  } else if (72 > lat && lat >= 64) {\n    LetterDesignator = 'W';\n  } else if (64 > lat && lat >= 56) {\n    LetterDesignator = 'V';\n  } else if (56 > lat && lat >= 48) {\n    LetterDesignator = 'U';\n  } else if (48 > lat && lat >= 40) {\n    LetterDesignator = 'T';\n  } else if (40 > lat && lat >= 32) {\n    LetterDesignator = 'S';\n  } else if (32 > lat && lat >= 24) {\n    LetterDesignator = 'R';\n  } else if (24 > lat && lat >= 16) {\n    LetterDesignator = 'Q';\n  } else if (16 > lat && lat >= 8) {\n    LetterDesignator = 'P';\n  } else if (8 > lat && lat >= 0) {\n    LetterDesignator = 'N';\n  } else if (0 > lat && lat >= -8) {\n    LetterDesignator = 'M';\n  } else if (-8 > lat && lat >= -16) {\n    LetterDesignator = 'L';\n  } else if (-16 > lat && lat >= -24) {\n    LetterDesignator = 'K';\n  } else if (-24 > lat && lat >= -32) {\n    LetterDesignator = 'J';\n  } else if (-32 > lat && lat >= -40) {\n    LetterDesignator = 'H';\n  } else if (-40 > lat && lat >= -48) {\n    LetterDesignator = 'G';\n  } else if (-48 > lat && lat >= -56) {\n    LetterDesignator = 'F';\n  } else if (-56 > lat && lat >= -64) {\n    LetterDesignator = 'E';\n  } else if (-64 > lat && lat >= -72) {\n    LetterDesignator = 'D';\n  } else if (-72 > lat && lat >= -80) {\n    LetterDesignator = 'C';\n  }\n\n  return LetterDesignator;\n}\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\n\n\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n      snorthing = \"00000\" + utm.northing;\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\n\n\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\n\n\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\n\n\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index); // colInt and rowInt are the letters to build to return\n\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || colOrigin < I && colInt > I || (colInt > I || colOrigin < I) && rollover) {\n    colInt++;\n  }\n\n  if (colInt === O || colOrigin < O && colInt > O || (colInt > O || colOrigin < O) && rollover) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  } else {\n    rollover = false;\n  }\n\n  if (rowInt === I || rowOrigin < I && rowInt > I || (rowInt > I || rowOrigin < I) && rollover) {\n    rowInt++;\n  }\n\n  if (rowInt === O || rowOrigin < O && rowInt > O || (rowInt > O || rowOrigin < O) && rollover) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\n\n\nfunction decode(mgrsString) {\n  if (mgrsString && mgrsString.length === 0) {\n    throw \"MGRSPoint coverting from nothing\";\n  }\n\n  var length = mgrsString.length;\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0; // get Zone number\n\n  while (!/[A-Z]/.test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw \"MGRSPoint bad conversion from: \" + mgrsString;\n    }\n\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw \"MGRSPoint bad conversion from: \" + mgrsString;\n  }\n\n  var zoneLetter = mgrsString.charAt(i++); // Should we check the zone letter here? Why not.\n\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw \"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString;\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n  var set = get100kSetForZone(zoneNumber);\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set); // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  } // calculate the char index for easting/northing separator\n\n\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw \"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString;\n  }\n\n  var sep = remainder / 2;\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\n\n\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n\n    if (curCol === I) {\n      curCol++;\n    }\n\n    if (curCol === O) {\n      curCol++;\n    }\n\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw \"Bad character: \" + e;\n      }\n\n      curCol = A;\n      rewindMarker = true;\n    }\n\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\n\n\nfunction getNorthingFromChar(n, set) {\n  if (n > 'V') {\n    throw \"MGRSPoint given invalid Northing \" + n;\n  } // rowOrigin is the letter at the origin of the set for the\n  // column\n\n\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n\n    if (curRow === I) {\n      curRow++;\n    }\n\n    if (curRow === O) {\n      curRow++;\n    } // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n\n\n    if (curRow > V) {\n      if (rewindMarker) {\n        // making sure that this loop ends\n        throw \"Bad character: \" + n;\n      }\n\n      curRow = A;\n      rewindMarker = true;\n    }\n\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\n\n\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n\n  switch (zoneLetter) {\n    case 'C':\n      northing = 1100000.0;\n      break;\n\n    case 'D':\n      northing = 2000000.0;\n      break;\n\n    case 'E':\n      northing = 2800000.0;\n      break;\n\n    case 'F':\n      northing = 3700000.0;\n      break;\n\n    case 'G':\n      northing = 4600000.0;\n      break;\n\n    case 'H':\n      northing = 5500000.0;\n      break;\n\n    case 'J':\n      northing = 6400000.0;\n      break;\n\n    case 'K':\n      northing = 7300000.0;\n      break;\n\n    case 'L':\n      northing = 8200000.0;\n      break;\n\n    case 'M':\n      northing = 9100000.0;\n      break;\n\n    case 'N':\n      northing = 0.0;\n      break;\n\n    case 'P':\n      northing = 800000.0;\n      break;\n\n    case 'Q':\n      northing = 1700000.0;\n      break;\n\n    case 'R':\n      northing = 2600000.0;\n      break;\n\n    case 'S':\n      northing = 3500000.0;\n      break;\n\n    case 'T':\n      northing = 4400000.0;\n      break;\n\n    case 'U':\n      northing = 5300000.0;\n      break;\n\n    case 'V':\n      northing = 6200000.0;\n      break;\n\n    case 'W':\n      northing = 7000000.0;\n      break;\n\n    case 'X':\n      northing = 7900000.0;\n      break;\n\n    default:\n      northing = -1.0;\n  }\n\n  if (northing >= 0.0) {\n    return northing;\n  } else {\n    throw \"Invalid zone letter: \" + zoneLetter;\n  }\n}","import { toPoint, forward } from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\n\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\n\nexport default Point;","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4])));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport { EPSLN } from '../constants/values';\nvar MAX_ITER = 20;\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n\n  for (var i = MAX_ITER; i; --i) {\n    /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s; //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  } //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n\n\n  return phi;\n}","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if (Math.abs(Math.abs(b) - 1) < EPSLN) {\n      return 93;\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if (b - 1 > EPSLN) {\n          return 93;\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n    x = this.a * (this.k0 * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c + als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) + this.x0;\n    y = this.a * (this.k0 * (ml - this.ml0 + sin_phi * delta_lon * al / 2 * (1 + als / 12 * (5 - t + 9 * c + 4 * cs + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\n\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if (g === 0 && h === 0) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else {\n    // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n      lat = phi - con * ds / (1 - this.es) * 0.5 * (1 - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n      lon = adjust_lon(this.long0 + d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi);\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}","import hypot from './hypot';\nimport log1py from './log1py';\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n  return x < 0 ? -y : y;\n}","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n  return z === 0 ? x : x * Math.log(y) / z;\n}","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return B + h * Math.sin(2 * B);\n}","import sinh from './sinh';\nimport cosh from './cosh';\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n  return [r * hr - i * hi, r * hi + i * hr];\n}","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n\n  this.lat0 = 0;\n  this.long0 = (6 * Math.abs(zone) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};","import adjust_lon from './adjust_lon';\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n\n  return zone;\n}","export default function (esinp, exp) {\n  return Math.pow((1 - esinp) / (1 + esinp), exp);\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n\n    p.y = lat;\n  }\n  /* convergence failed */\n\n\n  if (!i) {\n    return null;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  gauss.init.apply(this);\n\n  if (!this.rc) {\n    return;\n  }\n\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rho = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\", \"Oblique Stereographic Alternative\", \"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen);\n}\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      } else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n} // Stereographic forward equations--mapping lat,long to x,y\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0); //trace(p.toString());\n\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  } //trace(p.toString());\n\n\n  return p;\n} //* Stereographic inverse equations--mapping x,y to lat/long\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat; //trace(p.toString());\n\n        return p;\n      }\n\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat; //trace(p.toString());\n\n  return p;\n}\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K; // spheric latitude\n\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4); // spheric longitude\n\n  var I = this.alpha * (p.x - this.lambda0); // psoeudo equatorial rotation\n\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n  var lambda = this.lambda0 + I / this.alpha;\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    } //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n\n\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\n\n\nexport function init() {\n  var con,\n      com,\n      cosph0,\n      D,\n      F,\n      H,\n      L,\n      sinph0,\n      p,\n      J,\n      gamma = 0,\n      gamma0,\n      lamc = 0,\n      lam1 = 0,\n      lam2 = 0,\n      phi1 = 0,\n      phi2 = 0,\n      alpha_c = 0,\n      AB; // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  var alp = false;\n\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle * D2R;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\n\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = this.a * coords.x + this.x0;\n  coords.y = this.a * coords.y + this.y0;\n  return coords;\n}\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n  return coords;\n}\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n\n\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0; // Standard Parallels cannot be equal and on opposite sides of the equator\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n} // Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y; // singular cases :\n\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n\n    if (con <= 0) {\n      return null;\n    }\n\n    rh1 = 0;\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n  return p;\n} // Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = this.rh - (p.y - this.y0) / this.k0;\n\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * x, con * y);\n  }\n\n  if (rh1 !== 0 || this.ns > 0) {\n    con = 1 / this.ns;\n    ts = Math.pow(rh1 / (this.a * this.f0), con);\n    lat = phi2z(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n\n  lon = adjust_lon(theta / this.ns + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_1SP\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n\n\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n\n  this.s45 = 0.785398163397448;\n  /* 45 */\n\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n/* ellipsoid */\n\n/* calculate xy from lat/lon */\n\n/* Constants, identical to inverse transform function */\n\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n\n  gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  return p;\n}\n/* calculate lat/lon from xy */\n\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n  /* Transformation */\n\n  /* revert y, x*/\n\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n\n  if (iter >= 15) {\n    return null;\n  }\n\n  return p;\n}\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (e0, e1, e2, e3, phi) {\n  return e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi);\n}","export default function (x) {\n  return 1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x));\n}","export default function (x) {\n  return 0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x));\n}","export default function (x) {\n  return 0.05859375 * x * x * (1 + 0.75 * x);\n}","export default function (x) {\n  return x * x * x * (35 / 3072);\n}","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\nexport default function (x) {\n  return Math.abs(x) < HALF_PI ? x : x - sign(x) * Math.PI;\n}","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n  phi = ml / e0;\n\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n\n\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n\n      if (y < 0) {\n        p.y *= -1;\n      }\n\n      return p;\n    }\n\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (eccent, sinphi) {\n  var con;\n\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return (1 - eccent * eccent) * (sinphi / (1 - con * con) - 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n  } else {\n    return 2 * sinphi;\n  }\n}","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\n\nexport function init() {\n  var t = Math.abs(this.lat0);\n\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  } else {\n    this.mode = this.OBLIQ;\n  }\n\n  if (this.es > 0) {\n    var sinphi;\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n\n    switch (this.mode) {\n      case this.N_POLE:\n        this.dd = 1;\n        break;\n\n      case this.S_POLE:\n        this.dd = 1;\n        break;\n\n      case this.EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n\n      case this.OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = this.mode === this.EQUIT ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n\n      if (y <= EPSLN) {\n        return null;\n      }\n\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= this.mode === this.EQUIT ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n\n      y = FORTPI - phi * 0.5;\n      y = 2 * (this.mode === this.S_POLE ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n\n        x = this.xmf * b * cosb * sinlam;\n        break;\n\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * (this.mode === this.S_POLE ? b : -b);\n        } else {\n          x = y = 0;\n        }\n\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n\n  if (this.sphere) {\n    var cosz = 0,\n        rh,\n        sinz = 0;\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n\n    if (phi > 1) {\n      return null;\n    }\n\n    phi = 2 * Math.asin(phi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = Math.abs(rh) <= EPSLN ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n\n      case this.OBLIQ:\n        phi = Math.abs(rh) <= EPSLN ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n\n    lam = y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= sCe = Math.sin(sCe);\n\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n\n      q = x * x + y * y;\n\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      ab = 1 - q / this.qp;\n\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n/* determine latitude from authalic latitude */\n\nvar P00 = 0.33333333333333333333;\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t);\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = x > 1 ? 1 : -1;\n  }\n\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  con = rh1 * this.ns0 / this.a;\n\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\n\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n\n  return null;\n}\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0); // Approximation for projecting points to the horizon (infinity)\n\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = adjust_lon(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= EPSLN) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh;\n  /* Rho */\n\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rh = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = asinz(cosc * this.sin_p14 + p.y * sinc * this.cos_p14 / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\n\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + p.x / this.a / Math.cos(this.lat_ts));\n    lat = Math.asin(p.y / this.a * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { HALF_PI } from '../constants/values';\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return -1 * HALF_PI;\n    } else {\n      return HALF_PI;\n    }\n  } //var phi = 0.5* q/(1-eccent*eccent);\n\n\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n\n\n  return NaN;\n}","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n  this.rc = Math.cos(this.lat_ts);\n} // forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + this.a * dlon * this.rc;\n  p.y = this.y0 + this.a * dlat;\n  return p;\n} // inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n  p.x = adjust_lon(this.long0 + (x - this.x0) / (this.a * this.rc));\n  p.y = adjust_lat(this.lat0 + (y - this.y0) / this.a);\n  return p;\n}\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      lon = adjust_lon(this.long0 + Math.asin(x * Math.tan(phi) / this.a) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      } //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n\n\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { SEC_TO_RAD } from '../constants/values';\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\n\nexport var iterations = 1;\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0; // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  } // 2. Calculate theta\n\n\n  var th_re = d_psi;\n  var th_im = d_lambda; // 3. Calculate z\n\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n\n  var th_n_re1;\n  var th_n_im1;\n  var z_re = 0;\n  var z_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  } // 4. Calculate easting and northing\n\n\n  p.x = z_im * this.a + this.x0;\n  p.y = z_re * this.a + this.y0;\n  return p;\n}\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\n\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0; // 1. Calculate z\n\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a; // 2a. Calculate theta - first approximation gives km accuracy\n\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n\n  var z_n_re1;\n  var z_n_im1;\n  var th_re = 0;\n  var th_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  } // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n\n\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n    var num_re = z_re;\n    var num_im = z_im;\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    } // Complex division\n\n\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  } // 3. Calculate d_phi              ...                                    // and d_lambda\n\n\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  } // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n\n\n  var lat = this.lat0 + d_phi * SEC_TO_RAD * 1E5;\n  var lon = this.long0 + d_lambda;\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\n\nexport function init() {//no-op\n}\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport asinz from '../common/asinz';\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\n\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var lat, temp, lon, s;\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat)); //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n\n      lon = adjust_lon(temp);\n    } else if (s - EPSLN < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n\n  theta /= 2;\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var theta;\n  var arg;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + p.x / (0.900316316158 * this.a * Math.cos(theta)));\n\n  if (lon < -Math.PI) {\n    lon = -Math.PI;\n  }\n\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n\n  var lat = Math.asin(arg);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n  /* Forward equations\n      -----------------*/\n\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport asinz from '../common/asinz';\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\n\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n\n  if (Math.abs(dlon) <= EPSLN || Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    x = this.x0;\n\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    } //  return(OK);\n\n  }\n\n  var al = 0.5 * Math.abs(Math.PI / dlon - dlon / Math.PI);\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n\n  if (dlon < 0) {\n    con = -con;\n  }\n\n  x = this.x0 + con; //con = Math.abs(con / (Math.PI * this.R));\n\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\n\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n  /* inverse equations\n    -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = 3 * d / a1 / m1;\n\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n\n  th1 = Math.acos(con) / 3;\n\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n}\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n    if (rh > 2 * HALF_PI * this.a) {\n      return;\n    }\n\n    z = rh / this.a;\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n}\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = adjust_lon(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= EPSLN) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh;\n  /* height above ellipsoid      */\n\n  var z;\n  /* angle          */\n\n  var sinz, cosz;\n  /* sin of z and cos of z      */\n\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n  lon = this.long0;\n\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lat = asinz(cosz * this.sin_p14 + p.y * sinz * this.cos_p14 / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n/* constants */\n\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n  /* Determine the cube face from the center of projection. */\n\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n\n\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n} // QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var xy = {\n    x: 0,\n    y: 0\n  };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n\n  var area = {\n    value: 0\n  }; // move lon according to projection's lon\n\n  p.x -= this.long0;\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n\n  if (this.es !== 0) {\n    //if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n\n\n  lon = p.x; //lon = lp.lam;\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = lon > 0.0 ? lon - SPI : lon + SPI;\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon > 0.0 ? -lon + SPI : -lon - SPI;\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n\n\n  mu = Math.atan(12 / SPI * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n  /* Apply the result to the real area. */\n\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n  /* Now compute x, y from mu and nu */\n\n\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n} // QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var lp = {\n    lam: 0,\n    phi: 0\n  };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {\n    value: 0\n  };\n  /* de-offset */\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = mu < 0.0 ? mu + SPI : mu - SPI;\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n\n\n  t = SPI / 12 * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - 1 / Math.sqrt(2));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = theta < 0.0 ? theta + SPI : theta - SPI;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta;\n      }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta < 0.0 ? -theta - SPI : -theta + SPI;\n      }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n\n    t += s * s;\n\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n\n\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n\n\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n\n\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = lp.phi < 0 ? 1 : 0;\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\n\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = theta >= 0.0 ? theta - SPI : theta + SPI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n\n  return theta;\n}\n/* Helper function: shift the longitude. */\n\n\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\nvar COEFS_X = [[1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06], [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06], [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07], [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06], [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06], [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08], [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06], [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06], [0.9216, -0.00467746, -0.00010457, 4.81243e-06], [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06], [0.8679, -0.00609363, -0.000113898, 3.32484e-06], [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07], [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07], [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06], [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06], [0.6732, -0.00986209, -0.000199569, 1.91974e-05], [0.6213, -0.010418, 8.83923e-05, 6.24051e-06], [0.5722, -0.00906601, 0.000182, 6.24051e-06], [0.5322, -0.00677797, 0.000275608, 6.24051e-06]];\nvar COEFS_Y = [[-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11], [0.0620, 0.0124, -1.26793e-09, 4.22642e-10], [0.1240, 0.0124, 5.07171e-09, -1.60604e-09], [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09], [0.2480, 0.0124002, 7.10039e-08, -2.24e-08], [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08], [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07], [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07], [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07], [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07], [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07], [0.6769, 0.011713, -3.20223e-05, -5.16405e-07], [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07], [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06], [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09], [0.8936, 0.00969686, -6.4636e-05, -8.547e-06], [0.9394, 0.00840947, -0.000192841, -4.2106e-06], [0.9761, 0.00616527, -0.000256, -4.2106e-06], [1.0000, 0.00328947, -0.000319159, -4.2106e-06]];\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\n\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function poly3_val(coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function poly3_der(coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || \"Robinson\";\n}\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) {\n    // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    } // linear interpolation in 5 degree interval\n\n\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]); // find t so that poly3_val(coefs, t) = ll.y\n\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { geodeticToGeocentric, geocentricToGeodetic } from '../datumUtils';\nexport function init() {\n  this.name = 'geocent';\n}\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","var mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\nvar params = {\n  h: {\n    def: 100000,\n    num: true\n  },\n  // default is Karman line, no default in PROJ.7\n  azi: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is North\n  tilt: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is Nadir\n  long0: {\n    def: 0,\n    num: true\n  },\n  // default is Greenwich, conversion to rad is automatic\n  lat0: {\n    def: 0,\n    num: true\n  } // default is Equator, conversion to rad is automatic\n\n};\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  } // Tilt \n\n\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = {\n    x: p.x,\n    y: p.y\n  }; // Un-Tilt\n\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n  var rh = hypot(p.x, p.y);\n\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\nproj4.defaultDatum = 'WGS84'; //default datum\n\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}"],"names":["register","proj4","i","j","projCodes","Object","keys","defs","len","length","code","def","units","projName","axisOrientation","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","transform","forward","inverse","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","ignoredChar","match","obj","key","testkey","lkey","toLowerCase","replace","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","indexOf","substr","approx","txt","Parser","output","whitespace","latin","keyword","endThings","digets","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","d2r","input","wkt","lisp","parser","type","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","that","arguments","charAt","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","global","codeWords","codes","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","y","lon","lat","adjust_lon","tsfnz","exp","phi2z","names","projStore","add","n","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","a2","b2","sphere_","ecc","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","enforceAxis","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","Proj","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers"],"sourceRoot":""}