{"version":3,"file":"36-c8bf7988a90da7cdfbbe.js","mappings":"iOAQA,SAASA,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQC,UAAUC,QAAQC,KAAKP,QAAQC,UAAUG,QAAS,IAAI,iBAAyB,EAAQ,MAAOI,GAAK,OAAO,GAF9PC,GAA6B,OAAO,WAAkC,IAAsCC,EAAlCC,GAAQ,OAAgBb,GAAkB,GAAIC,EAA2B,CAAE,IAAIa,GAAY,OAAgBC,MAAMC,YAAaJ,EAASV,QAAQC,UAAUU,EAAOI,UAAWH,QAAqBF,EAASC,EAAMK,MAAMH,KAAME,WAAc,OAAO,OAA2BF,KAAMH,IAY5Z,IAAIO,EAA+B,SAAUC,IAC3C,OAAUD,EAAiBC,GAE3B,IAqBQC,EArBJC,EAASvB,EAAaoB,GAE1B,SAASA,IACP,IAAII,EAMJ,IAJA,OAAgBR,KAAMI,GAEtBI,EAAQD,EAAOb,KAAKM,MAEa,oBAAtBS,kBACT,MAAM,IAAIC,MAAM,kEACX,GAAwB,oBAAbC,UAAuD,oBAApBC,gBACnD,MAAM,IAAIF,MAAM,uFAGlB,OAAOF,EAiDT,OA9CA,OAAaJ,EAAiB,CAAC,CAC7BS,IAAK,SACLC,OACMR,GAAU,OAAgC,UAAyB,SAASS,EAAQC,EAAeC,GACrG,IAAIC,EAAMC,EAAaC,EAAQC,EAC/B,OAAO,UAAyB,SAAkBC,GAChD,OACE,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EAGH,OAFAN,EAAO,IAAIO,KAAK,CAACR,IACjBK,EAASE,KAAO,EACTf,kBAAkBS,GAE3B,KAAK,EAeH,OAdAC,EAAcG,EAASI,KAEC,oBAAbf,WACTS,EAAST,SAASgB,cAAc,WACzBC,MAAQT,EAAYS,MAC3BR,EAAOS,OAASV,EAAYU,QAE5BT,EAAS,IAAIR,gBAAgBO,EAAYS,MAAOT,EAAYU,SAG9DR,EAAMD,EAAOU,WAAW,OACpBC,UAAUZ,EAAa,EAAG,GAGvBG,EAASU,OAAO,SAAUX,EAAIY,aAAa,EAAG,EAAGd,EAAYS,MAAOT,EAAYU,QAAQK,KAAKjB,QAEtG,KAAK,EACL,IAAK,MACH,OAAOK,EAASa,UAGrBpB,OAGL,SAAgBqB,EAAIC,GAClB,OAAO/B,EAAQH,MAAMH,KAAME,gBAO1BE,EAnE0B,C,QAoEjC","sources":["webpack://exmap/./node_modules/geotiff/dist-module/compression/webimage.js"],"sourcesContent":["import _asyncToGenerator from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _regeneratorRuntime from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/regenerator/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseDecoder from './basedecoder.js';\n/**\n * class WebImageDecoder\n *\n * This decoder uses the browsers image decoding facilities to read image\n * formats like WebP when supported.\n */\n\nvar WebImageDecoder = /*#__PURE__*/function (_BaseDecoder) {\n  _inherits(WebImageDecoder, _BaseDecoder);\n\n  var _super = _createSuper(WebImageDecoder);\n\n  function WebImageDecoder() {\n    var _this;\n\n    _classCallCheck(this, WebImageDecoder);\n\n    _this = _super.call(this);\n\n    if (typeof createImageBitmap === 'undefined') {\n      throw new Error('Cannot decode WebImage as `createImageBitmap` is not available');\n    } else if (typeof document === 'undefined' && typeof OffscreenCanvas === 'undefined') {\n      throw new Error('Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available');\n    }\n\n    return _this;\n  }\n\n  _createClass(WebImageDecoder, [{\n    key: \"decode\",\n    value: function () {\n      var _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fileDirectory, buffer) {\n        var blob, imageBitmap, canvas, ctx;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                blob = new Blob([buffer]);\n                _context.next = 3;\n                return createImageBitmap(blob);\n\n              case 3:\n                imageBitmap = _context.sent;\n\n                if (typeof document !== 'undefined') {\n                  canvas = document.createElement('canvas');\n                  canvas.width = imageBitmap.width;\n                  canvas.height = imageBitmap.height;\n                } else {\n                  canvas = new OffscreenCanvas(imageBitmap.width, imageBitmap.height);\n                }\n\n                ctx = canvas.getContext('2d');\n                ctx.drawImage(imageBitmap, 0, 0); // TODO: check how many samples per pixel we have, and return RGB/RGBA accordingly\n                // it seems like GDAL always encodes via RGBA which does not require a translation\n\n                return _context.abrupt(\"return\", ctx.getImageData(0, 0, imageBitmap.width, imageBitmap.height).data.buffer);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function decode(_x, _x2) {\n        return _decode.apply(this, arguments);\n      }\n\n      return decode;\n    }()\n  }]);\n\n  return WebImageDecoder;\n}(BaseDecoder);\n\nexport { WebImageDecoder as default };"],"names":["_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","WebImageDecoder","_BaseDecoder","_decode","_super","_this","createImageBitmap","Error","document","OffscreenCanvas","key","value","_callee","fileDirectory","buffer","blob","imageBitmap","canvas","ctx","_context","prev","next","Blob","sent","createElement","width","height","getContext","drawImage","abrupt","getImageData","data","stop","_x","_x2"],"sourceRoot":""}