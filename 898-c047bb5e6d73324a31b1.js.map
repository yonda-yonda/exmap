{"version":3,"file":"898-c047bb5e6d73324a31b1.js","mappings":"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","sources":["webpack://exmap/./node_modules/geotiff/dist-module/compression/jpeg.js"],"sourcesContent":["import _inherits from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseDecoder from './basedecoder.js';\n/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n/*\n   Copyright 2011 notmasteryet\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar dctZigZag = new Int32Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\nvar dctCos1 = 4017; // cos(pi/16)\n\nvar dctSin1 = 799; // sin(pi/16)\n\nvar dctCos3 = 3406; // cos(3*pi/16)\n\nvar dctSin3 = 2276; // sin(3*pi/16)\n\nvar dctCos6 = 1567; // cos(6*pi/16)\n\nvar dctSin6 = 3784; // sin(6*pi/16)\n\nvar dctSqrt2 = 5793; // sqrt(2)\n\nvar dctSqrt1d2 = 2896; // sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  var k = 0;\n  var code = [];\n  var length = 16;\n\n  while (length > 0 && !codeLengths[length - 1]) {\n    --length;\n  }\n\n  code.push({\n    children: [],\n    index: 0\n  });\n  var p = code[0];\n  var q;\n\n  for (var i = 0; i < length; i++) {\n    for (var j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n\n      while (p.index > 0) {\n        p = code.pop();\n      }\n\n      p.index++;\n      code.push(p);\n\n      while (code.length <= i) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n\n      k++;\n    }\n\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push(q = {\n        children: [],\n        index: 0\n      });\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n\n  return code[0].children;\n}\n\nfunction decodeScan(data, initialOffset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n  var mcusPerLine = frame.mcusPerLine,\n      progressive = frame.progressive;\n  var startOffset = initialOffset;\n  var offset = initialOffset;\n  var bitsData = 0;\n  var bitsCount = 0;\n\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return bitsData >> bitsCount & 1;\n    }\n\n    bitsData = data[offset++];\n\n    if (bitsData === 0xFF) {\n      var nextByte = data[offset++];\n\n      if (nextByte) {\n        throw new Error(\"unexpected marker: \".concat((bitsData << 8 | nextByte).toString(16)));\n      } // unstuff 0\n\n    }\n\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n\n  function decodeHuffman(tree) {\n    var node = tree;\n    var bit;\n\n    while ((bit = readBit()) !== null) {\n      // eslint-disable-line no-cond-assign\n      node = node[bit];\n\n      if (typeof node === 'number') {\n        return node;\n      }\n\n      if (typeof node !== 'object') {\n        throw new Error('invalid huffman sequence');\n      }\n    }\n\n    return null;\n  }\n\n  function receive(initialLength) {\n    var length = initialLength;\n    var n = 0;\n\n    while (length > 0) {\n      var bit = readBit();\n\n      if (bit === null) {\n        return undefined;\n      }\n\n      n = n << 1 | bit;\n      --length;\n    }\n\n    return n;\n  }\n\n  function receiveAndExtend(length) {\n    var n = receive(length);\n\n    if (n >= 1 << length - 1) {\n      return n;\n    }\n\n    return n + (-1 << length) + 1;\n  }\n\n  function decodeBaseline(component, zz) {\n    var t = decodeHuffman(component.huffmanTableDC);\n    var diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.pred += diff;\n    zz[0] = component.pred;\n    var k = 1;\n\n    while (k < 64) {\n      var rs = decodeHuffman(component.huffmanTableAC);\n      var s = rs & 15;\n      var r = rs >> 4;\n\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n\n        k += 16;\n      } else {\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n  }\n\n  function decodeDCFirst(component, zz) {\n    var t = decodeHuffman(component.huffmanTableDC);\n    var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n    component.pred += diff;\n    zz[0] = component.pred;\n  }\n\n  function decodeDCSuccessive(component, zz) {\n    zz[0] |= readBit() << successive;\n  }\n\n  var eobrun = 0;\n\n  function decodeACFirst(component, zz) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n\n    var k = spectralStart;\n    var e = spectralEnd;\n\n    while (k <= e) {\n      var rs = decodeHuffman(component.huffmanTableAC);\n      var s = rs & 15;\n      var r = rs >> 4;\n\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n\n        k += 16;\n      } else {\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n  }\n\n  var successiveACState = 0;\n  var successiveACNextValue;\n\n  function decodeACSuccessive(component, zz) {\n    var k = spectralStart;\n    var e = spectralEnd;\n    var r = 0;\n\n    while (k <= e) {\n      var z = dctZigZag[k];\n      var direction = zz[z] < 0 ? -1 : 1;\n\n      switch (successiveACState) {\n        case 0:\n          {\n            // initial state\n            var rs = decodeHuffman(component.huffmanTableAC);\n            var s = rs & 15;\n            r = rs >> 4;\n\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new Error('invalid ACn encoding');\n              }\n\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n\n            continue; // eslint-disable-line no-continue\n          }\n\n        case 1: // skipping r zero items\n\n        case 2:\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            r--;\n\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n\n          break;\n\n        case 3:\n          // set value for a zero item\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n\n          break;\n\n        case 4:\n          // eob\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      k++;\n    }\n\n    if (successiveACState === 4) {\n      eobrun--;\n\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n\n  function decodeMcu(component, decodeFunction, mcu, row, col) {\n    var mcuRow = mcu / mcusPerLine | 0;\n    var mcuCol = mcu % mcusPerLine;\n    var blockRow = mcuRow * component.v + row;\n    var blockCol = mcuCol * component.h + col;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n\n  function decodeBlock(component, decodeFunction, mcu) {\n    var blockRow = mcu / component.blocksPerLine | 0;\n    var blockCol = mcu % component.blocksPerLine;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n\n  var componentsLength = components.length;\n  var component;\n  var i;\n  var j;\n  var k;\n  var n;\n  var decodeFn;\n\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  var mcu = 0;\n  var marker;\n  var mcuExpected;\n\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  var usedResetInterval = resetInterval || mcuExpected;\n\n  while (mcu < mcuExpected) {\n    // reset interval stuff\n    for (i = 0; i < componentsLength; i++) {\n      components[i].pred = 0;\n    }\n\n    eobrun = 0;\n\n    if (componentsLength === 1) {\n      component = components[0];\n\n      for (n = 0; n < usedResetInterval; n++) {\n        decodeBlock(component, decodeFn, mcu);\n        mcu++;\n      }\n    } else {\n      for (n = 0; n < usedResetInterval; n++) {\n        for (i = 0; i < componentsLength; i++) {\n          component = components[i];\n          var _component = component,\n              h = _component.h,\n              v = _component.v;\n\n          for (j = 0; j < v; j++) {\n            for (k = 0; k < h; k++) {\n              decodeMcu(component, decodeFn, mcu, j, k);\n            }\n          }\n        }\n\n        mcu++; // If we've reached our expected MCU's, stop decoding\n\n        if (mcu === mcuExpected) {\n          break;\n        }\n      }\n    } // find marker\n\n\n    bitsCount = 0;\n    marker = data[offset] << 8 | data[offset + 1];\n\n    if (marker < 0xFF00) {\n      throw new Error('marker was not found');\n    }\n\n    if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n      // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\nfunction buildComponentData(frame, component) {\n  var lines = [];\n  var blocksPerLine = component.blocksPerLine,\n      blocksPerColumn = component.blocksPerColumn;\n  var samplesPerLine = blocksPerLine << 3;\n  var R = new Int32Array(64);\n  var r = new Uint8Array(64); // A port of poppler's IDCT method which in turn is taken from:\n  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n  //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n  //   988-991.\n\n  function quantizeAndInverse(zz, dataOut, dataIn) {\n    var qt = component.quantizationTable;\n    var v0;\n    var v1;\n    var v2;\n    var v3;\n    var v4;\n    var v5;\n    var v6;\n    var v7;\n    var t;\n    var p = dataIn;\n    var i; // dequant\n\n    for (i = 0; i < 64; i++) {\n      p[i] = zz[i] * qt[i];\n    } // inverse DCT on rows\n\n\n    for (i = 0; i < 8; ++i) {\n      var row = 8 * i; // check for all-zero AC coefficients\n\n      if (p[1 + row] === 0 && p[2 + row] === 0 && p[3 + row] === 0 && p[4 + row] === 0 && p[5 + row] === 0 && p[6 + row] === 0 && p[7 + row] === 0) {\n        t = dctSqrt2 * p[0 + row] + 512 >> 10;\n        p[0 + row] = t;\n        p[1 + row] = t;\n        p[2 + row] = t;\n        p[3 + row] = t;\n        p[4 + row] = t;\n        p[5 + row] = t;\n        p[6 + row] = t;\n        p[7 + row] = t;\n        continue; // eslint-disable-line no-continue\n      } // stage 4\n\n\n      v0 = dctSqrt2 * p[0 + row] + 128 >> 8;\n      v1 = dctSqrt2 * p[4 + row] + 128 >> 8;\n      v2 = p[2 + row];\n      v3 = p[6 + row];\n      v4 = dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128 >> 8;\n      v5 = p[3 + row] << 4;\n      v6 = p[5 + row] << 4; // stage 3\n\n      t = v0 - v1 + 1 >> 1;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = t;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      t = v4 - v6 + 1 >> 1;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = t;\n      t = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5 + 1 >> 1;\n      v7 = t; // stage 2\n\n      t = v0 - v3 + 1 >> 1;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = t;\n      t = v1 - v2 + 1 >> 1;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = t;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t; // stage 1\n\n      p[0 + row] = v0 + v7;\n      p[7 + row] = v0 - v7;\n      p[1 + row] = v1 + v6;\n      p[6 + row] = v1 - v6;\n      p[2 + row] = v2 + v5;\n      p[5 + row] = v2 - v5;\n      p[3 + row] = v3 + v4;\n      p[4 + row] = v3 - v4;\n    } // inverse DCT on columns\n\n\n    for (i = 0; i < 8; ++i) {\n      var col = i; // check for all-zero AC coefficients\n\n      if (p[1 * 8 + col] === 0 && p[2 * 8 + col] === 0 && p[3 * 8 + col] === 0 && p[4 * 8 + col] === 0 && p[5 * 8 + col] === 0 && p[6 * 8 + col] === 0 && p[7 * 8 + col] === 0) {\n        t = dctSqrt2 * dataIn[i + 0] + 8192 >> 14;\n        p[0 * 8 + col] = t;\n        p[1 * 8 + col] = t;\n        p[2 * 8 + col] = t;\n        p[3 * 8 + col] = t;\n        p[4 * 8 + col] = t;\n        p[5 * 8 + col] = t;\n        p[6 * 8 + col] = t;\n        p[7 * 8 + col] = t;\n        continue; // eslint-disable-line no-continue\n      } // stage 4\n\n\n      v0 = dctSqrt2 * p[0 * 8 + col] + 2048 >> 12;\n      v1 = dctSqrt2 * p[4 * 8 + col] + 2048 >> 12;\n      v2 = p[2 * 8 + col];\n      v3 = p[6 * 8 + col];\n      v4 = dctSqrt1d2 * (p[1 * 8 + col] - p[7 * 8 + col]) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p[1 * 8 + col] + p[7 * 8 + col]) + 2048 >> 12;\n      v5 = p[3 * 8 + col];\n      v6 = p[5 * 8 + col]; // stage 3\n\n      t = v0 - v1 + 1 >> 1;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = t;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      t = v4 - v6 + 1 >> 1;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = t;\n      t = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5 + 1 >> 1;\n      v7 = t; // stage 2\n\n      t = v0 - v3 + 1 >> 1;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = t;\n      t = v1 - v2 + 1 >> 1;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = t;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t; // stage 1\n\n      p[0 * 8 + col] = v0 + v7;\n      p[7 * 8 + col] = v0 - v7;\n      p[1 * 8 + col] = v1 + v6;\n      p[6 * 8 + col] = v1 - v6;\n      p[2 * 8 + col] = v2 + v5;\n      p[5 * 8 + col] = v2 - v5;\n      p[3 * 8 + col] = v3 + v4;\n      p[4 * 8 + col] = v3 - v4;\n    } // convert to 8-bit integers\n\n\n    for (i = 0; i < 64; ++i) {\n      var sample = 128 + (p[i] + 8 >> 4);\n\n      if (sample < 0) {\n        dataOut[i] = 0;\n      } else if (sample > 0XFF) {\n        dataOut[i] = 0xFF;\n      } else {\n        dataOut[i] = sample;\n      }\n    }\n  }\n\n  for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    var scanLine = blockRow << 3;\n\n    for (var i = 0; i < 8; i++) {\n      lines.push(new Uint8Array(samplesPerLine));\n    }\n\n    for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n      var offset = 0;\n      var sample = blockCol << 3;\n\n      for (var j = 0; j < 8; j++) {\n        var line = lines[scanLine + j];\n\n        for (var _i = 0; _i < 8; _i++) {\n          line[sample + _i] = r[offset++];\n        }\n      }\n    }\n  }\n\n  return lines;\n}\n\nvar JpegStreamReader = /*#__PURE__*/function () {\n  function JpegStreamReader() {\n    _classCallCheck(this, JpegStreamReader);\n\n    this.jfif = null;\n    this.adobe = null;\n    this.quantizationTables = [];\n    this.huffmanTablesAC = [];\n    this.huffmanTablesDC = [];\n    this.resetFrames();\n  }\n\n  _createClass(JpegStreamReader, [{\n    key: \"resetFrames\",\n    value: function resetFrames() {\n      this.frames = [];\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      var offset = 0; // const { length } = data;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n\n      function prepareComponents(frame) {\n        var maxH = 0;\n        var maxV = 0;\n        var component;\n        var componentId;\n\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n\n            if (maxH < component.h) {\n              maxH = component.h;\n            }\n\n            if (maxV < component.v) {\n              maxV = component.v;\n            }\n          }\n        }\n\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / maxV);\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocks = [];\n\n            for (var i = 0; i < blocksPerColumnForMcu; i++) {\n              var row = [];\n\n              for (var j = 0; j < blocksPerLineForMcu; j++) {\n                row.push(new Int32Array(64));\n              }\n\n              blocks.push(row);\n            }\n\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n            component.blocks = blocks;\n          }\n        }\n\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n\n      var fileMarker = readUint16();\n\n      if (fileMarker !== 0xFFD8) {\n        // SOI (Start of Image)\n        throw new Error('SOI not found');\n      }\n\n      fileMarker = readUint16();\n\n      while (fileMarker !== 0xFFD9) {\n        // EOI (End of image)\n        switch (fileMarker) {\n          case 0xFF00:\n            break;\n\n          case 0xFFE0: // APP0 (Application Specific)\n\n          case 0xFFE1: // APP1\n\n          case 0xFFE2: // APP2\n\n          case 0xFFE3: // APP3\n\n          case 0xFFE4: // APP4\n\n          case 0xFFE5: // APP5\n\n          case 0xFFE6: // APP6\n\n          case 0xFFE7: // APP7\n\n          case 0xFFE8: // APP8\n\n          case 0xFFE9: // APP9\n\n          case 0xFFEA: // APP10\n\n          case 0xFFEB: // APP11\n\n          case 0xFFEC: // APP12\n\n          case 0xFFED: // APP13\n\n          case 0xFFEE: // APP14\n\n          case 0xFFEF: // APP15\n\n          case 0xFFFE:\n            {\n              // COM (Comment)\n              var appData = readDataBlock();\n\n              if (fileMarker === 0xFFE0) {\n                if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                  // 'JFIF\\x00'\n                  this.jfif = {\n                    version: {\n                      major: appData[5],\n                      minor: appData[6]\n                    },\n                    densityUnits: appData[7],\n                    xDensity: appData[8] << 8 | appData[9],\n                    yDensity: appData[10] << 8 | appData[11],\n                    thumbWidth: appData[12],\n                    thumbHeight: appData[13],\n                    thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                  };\n                }\n              } // TODO APP1 - Exif\n\n\n              if (fileMarker === 0xFFEE) {\n                if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) {\n                  // 'Adobe\\x00'\n                  this.adobe = {\n                    version: appData[6],\n                    flags0: appData[7] << 8 | appData[8],\n                    flags1: appData[9] << 8 | appData[10],\n                    transformCode: appData[11]\n                  };\n                }\n              }\n\n              break;\n            }\n\n          case 0xFFDB:\n            {\n              // DQT (Define Quantization Tables)\n              var quantizationTablesLength = readUint16();\n              var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n\n              while (offset < quantizationTablesEnd) {\n                var quantizationTableSpec = data[offset++];\n                var tableData = new Int32Array(64);\n\n                if (quantizationTableSpec >> 4 === 0) {\n                  // 8 bit values\n                  for (var j = 0; j < 64; j++) {\n                    var z = dctZigZag[j];\n                    tableData[z] = data[offset++];\n                  }\n                } else if (quantizationTableSpec >> 4 === 1) {\n                  // 16 bit\n                  for (var _j = 0; _j < 64; _j++) {\n                    var _z = dctZigZag[_j];\n                    tableData[_z] = readUint16();\n                  }\n                } else {\n                  throw new Error('DQT: invalid table spec');\n                }\n\n                this.quantizationTables[quantizationTableSpec & 15] = tableData;\n              }\n\n              break;\n            }\n\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n\n          case 0xFFC2:\n            {\n              // SOF2 (Start of Frame, Progressive DCT)\n              readUint16(); // skip data length\n\n              var frame = {\n                extended: fileMarker === 0xFFC1,\n                progressive: fileMarker === 0xFFC2,\n                precision: data[offset++],\n                scanLines: readUint16(),\n                samplesPerLine: readUint16(),\n                components: {},\n                componentsOrder: []\n              };\n              var componentsCount = data[offset++];\n              var componentId = void 0; // let maxH = 0;\n              // let maxV = 0;\n\n              for (var i = 0; i < componentsCount; i++) {\n                componentId = data[offset];\n                var h = data[offset + 1] >> 4;\n                var v = data[offset + 1] & 15;\n                var qId = data[offset + 2];\n                frame.componentsOrder.push(componentId);\n                frame.components[componentId] = {\n                  h: h,\n                  v: v,\n                  quantizationIdx: qId\n                };\n                offset += 3;\n              }\n\n              prepareComponents(frame);\n              this.frames.push(frame);\n              break;\n            }\n\n          case 0xFFC4:\n            {\n              // DHT (Define Huffman Tables)\n              var huffmanLength = readUint16();\n\n              for (var _i2 = 2; _i2 < huffmanLength;) {\n                var huffmanTableSpec = data[offset++];\n                var codeLengths = new Uint8Array(16);\n                var codeLengthSum = 0;\n\n                for (var _j2 = 0; _j2 < 16; _j2++, offset++) {\n                  codeLengths[_j2] = data[offset];\n                  codeLengthSum += codeLengths[_j2];\n                }\n\n                var huffmanValues = new Uint8Array(codeLengthSum);\n\n                for (var _j3 = 0; _j3 < codeLengthSum; _j3++, offset++) {\n                  huffmanValues[_j3] = data[offset];\n                }\n\n                _i2 += 17 + codeLengthSum;\n\n                if (huffmanTableSpec >> 4 === 0) {\n                  this.huffmanTablesDC[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n                } else {\n                  this.huffmanTablesAC[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n                }\n              }\n\n              break;\n            }\n\n          case 0xFFDD:\n            // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n\n            this.resetInterval = readUint16();\n            break;\n\n          case 0xFFDA:\n            {\n              // SOS (Start of Scan)\n              readUint16(); // skip length\n\n              var selectorsCount = data[offset++];\n              var components = [];\n              var _frame = this.frames[0];\n\n              for (var _i3 = 0; _i3 < selectorsCount; _i3++) {\n                var component = _frame.components[data[offset++]];\n                var tableSpec = data[offset++];\n                component.huffmanTableDC = this.huffmanTablesDC[tableSpec >> 4];\n                component.huffmanTableAC = this.huffmanTablesAC[tableSpec & 15];\n                components.push(component);\n              }\n\n              var spectralStart = data[offset++];\n              var spectralEnd = data[offset++];\n              var successiveApproximation = data[offset++];\n              var processed = decodeScan(data, offset, _frame, components, this.resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n              offset += processed;\n              break;\n            }\n\n          case 0xFFFF:\n            // Fill bytes\n            if (data[offset] !== 0xFF) {\n              // Avoid skipping a valid marker.\n              offset--;\n            }\n\n            break;\n\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            }\n\n            throw new Error(\"unknown JPEG marker \".concat(fileMarker.toString(16)));\n        }\n\n        fileMarker = readUint16();\n      }\n    }\n  }, {\n    key: \"getResult\",\n    value: function getResult() {\n      var frames = this.frames;\n\n      if (this.frames.length === 0) {\n        throw new Error('no frames were decoded');\n      } else if (this.frames.length > 1) {\n        console.warn('more than one frame is not supported');\n      } // set each frame's components quantization table\n\n\n      for (var i = 0; i < this.frames.length; i++) {\n        var cp = this.frames[i].components;\n\n        for (var _i4 = 0, _Object$keys = Object.keys(cp); _i4 < _Object$keys.length; _i4++) {\n          var j = _Object$keys[_i4];\n          cp[j].quantizationTable = this.quantizationTables[cp[j].quantizationIdx];\n          delete cp[j].quantizationIdx;\n        }\n      }\n\n      var frame = frames[0];\n      var components = frame.components,\n          componentsOrder = frame.componentsOrder;\n      var outComponents = [];\n      var width = frame.samplesPerLine;\n      var height = frame.scanLines;\n\n      for (var _i5 = 0; _i5 < componentsOrder.length; _i5++) {\n        var component = components[componentsOrder[_i5]];\n        outComponents.push({\n          lines: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV\n        });\n      }\n\n      var out = new Uint8Array(width * height * outComponents.length);\n      var oi = 0;\n\n      for (var y = 0; y < height; ++y) {\n        for (var x = 0; x < width; ++x) {\n          for (var _i6 = 0; _i6 < outComponents.length; ++_i6) {\n            var _component2 = outComponents[_i6];\n            out[oi] = _component2.lines[0 | y * _component2.scaleY][0 | x * _component2.scaleX];\n            ++oi;\n          }\n        }\n      }\n\n      return out;\n    }\n  }]);\n\n  return JpegStreamReader;\n}();\n\nvar JpegDecoder = /*#__PURE__*/function (_BaseDecoder) {\n  _inherits(JpegDecoder, _BaseDecoder);\n\n  var _super = _createSuper(JpegDecoder);\n\n  function JpegDecoder(fileDirectory) {\n    var _this;\n\n    _classCallCheck(this, JpegDecoder);\n\n    _this = _super.call(this);\n    _this.reader = new JpegStreamReader();\n\n    if (fileDirectory.JPEGTables) {\n      _this.reader.parse(fileDirectory.JPEGTables);\n    }\n\n    return _this;\n  }\n\n  _createClass(JpegDecoder, [{\n    key: \"decodeBlock\",\n    value: function decodeBlock(buffer) {\n      this.reader.resetFrames();\n      this.reader.parse(new Uint8Array(buffer));\n      return this.reader.getResult().buffer;\n    }\n  }]);\n\n  return JpegDecoder;\n}(BaseDecoder);\n\nexport { JpegDecoder as default };"],"names":["_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","dctZigZag","Int32Array","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","values","k","code","length","push","children","index","q","p","i","j","pop","decodeScan","data","initialOffset","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","offset","bitsData","bitsCount","readBit","nextByte","Error","concat","toString","decodeHuffman","tree","bit","node","receive","initialLength","n","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","component","decodeFunction","mcu","row","col","mcuCol","blockRow","v","blockCol","h","blocks","decodeBlock","blocksPerLine","decodeFn","componentsLength","zz","t","huffmanTableDC","diff","pred","rs","huffmanTableAC","s","r","z","direction","marker","mcuExpected","blocksPerColumn","mcusPerColumn","usedResetInterval","_component","buildComponentData","lines","samplesPerLine","R","Uint8Array","quantizeAndInverse","dataOut","dataIn","v0","v1","v2","v3","v4","v5","v6","v7","qt","quantizationTable","sample","scanLine","line","_i","JpegStreamReader","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","resetFrames","key","value","frames","readUint16","prepareComponents","componentId","maxH","maxV","hasOwnProperty","Math","ceil","scanLines","blocksPerLineForMcu","blocksPerColumnForMcu","array","fileMarker","appData","subarray","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","_j","extended","precision","componentsOrder","componentsCount","qId","quantizationIdx","huffmanLength","_i2","huffmanTableSpec","codeLengthSum","_j2","huffmanValues","_j3","selectorsCount","_frame","_i3","tableSpec","successiveApproximation","processed","console","warn","cp","_i4","_Object$keys","Object","keys","outComponents","width","height","_i5","scaleX","scaleY","out","oi","y","x","_i6","_component2","JpegDecoder","_BaseDecoder","_super","fileDirectory","_this","reader","JPEGTables","parse","buffer","getResult"],"sourceRoot":""}