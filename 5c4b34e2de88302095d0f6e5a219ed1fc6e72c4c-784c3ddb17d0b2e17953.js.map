{"version":3,"file":"5c4b34e2de88302095d0f6e5a219ed1fc6e72c4c-784c3ddb17d0b2e17953.js","mappings":"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","sources":["webpack://exmap/./node_modules/mgrs/mgrs.js","webpack://exmap/./node_modules/ol/proj/proj4.js","webpack://exmap/./node_modules/proj4/lib/constants/values.js","webpack://exmap/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://exmap/./node_modules/proj4/lib/constants/units.js","webpack://exmap/./node_modules/proj4/lib/match.js","webpack://exmap/./node_modules/proj4/lib/projString.js","webpack://exmap/./node_modules/proj4/lib/defs.js","webpack://exmap/./node_modules/proj4/lib/global.js","webpack://exmap/./node_modules/proj4/lib/parseCode.js","webpack://exmap/./node_modules/proj4/lib/extend.js","webpack://exmap/./node_modules/proj4/lib/common/msfnz.js","webpack://exmap/./node_modules/proj4/lib/common/sign.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_lon.js","webpack://exmap/./node_modules/proj4/lib/common/tsfnz.js","webpack://exmap/./node_modules/proj4/lib/common/phi2z.js","webpack://exmap/./node_modules/proj4/lib/projections/longlat.js","webpack://exmap/./node_modules/proj4/lib/projections.js","webpack://exmap/./node_modules/proj4/lib/projections/merc.js","webpack://exmap/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://exmap/./node_modules/proj4/lib/constants/Datum.js","webpack://exmap/./node_modules/proj4/lib/datum.js","webpack://exmap/./node_modules/proj4/lib/nadgrid.js","webpack://exmap/./node_modules/proj4/lib/Proj.js","webpack://exmap/./node_modules/proj4/lib/deriveConstants.js","webpack://exmap/./node_modules/proj4/lib/datumUtils.js","webpack://exmap/./node_modules/proj4/lib/datum_transform.js","webpack://exmap/./node_modules/proj4/lib/adjust_axis.js","webpack://exmap/./node_modules/proj4/lib/common/toPoint.js","webpack://exmap/./node_modules/proj4/lib/checkSanity.js","webpack://exmap/./node_modules/proj4/lib/transform.js","webpack://exmap/./node_modules/proj4/lib/core.js","webpack://exmap/./node_modules/proj4/lib/Point.js","webpack://exmap/./node_modules/proj4/lib/common/pj_enfn.js","webpack://exmap/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://exmap/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://exmap/./node_modules/proj4/lib/projections/tmerc.js","webpack://exmap/./node_modules/proj4/lib/common/sinh.js","webpack://exmap/./node_modules/proj4/lib/common/hypot.js","webpack://exmap/./node_modules/proj4/lib/common/asinhy.js","webpack://exmap/./node_modules/proj4/lib/common/log1py.js","webpack://exmap/./node_modules/proj4/lib/common/gatg.js","webpack://exmap/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://exmap/./node_modules/proj4/lib/common/cosh.js","webpack://exmap/./node_modules/proj4/lib/projections/etmerc.js","webpack://exmap/./node_modules/proj4/lib/common/clens.js","webpack://exmap/./node_modules/proj4/lib/projections/utm.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_zone.js","webpack://exmap/./node_modules/proj4/lib/common/srat.js","webpack://exmap/./node_modules/proj4/lib/projections/gauss.js","webpack://exmap/./node_modules/proj4/lib/projections/sterea.js","webpack://exmap/./node_modules/proj4/lib/projections/stere.js","webpack://exmap/./node_modules/proj4/lib/projections/somerc.js","webpack://exmap/./node_modules/proj4/lib/projections/omerc.js","webpack://exmap/./node_modules/proj4/lib/projections/lcc.js","webpack://exmap/./node_modules/proj4/lib/projections/krovak.js","webpack://exmap/./node_modules/proj4/lib/common/mlfn.js","webpack://exmap/./node_modules/proj4/lib/common/e0fn.js","webpack://exmap/./node_modules/proj4/lib/common/e1fn.js","webpack://exmap/./node_modules/proj4/lib/common/e2fn.js","webpack://exmap/./node_modules/proj4/lib/common/e3fn.js","webpack://exmap/./node_modules/proj4/lib/common/gN.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_lat.js","webpack://exmap/./node_modules/proj4/lib/common/imlfn.js","webpack://exmap/./node_modules/proj4/lib/projections/cass.js","webpack://exmap/./node_modules/proj4/lib/common/qsfnz.js","webpack://exmap/./node_modules/proj4/lib/projections/laea.js","webpack://exmap/./node_modules/proj4/lib/common/asinz.js","webpack://exmap/./node_modules/proj4/lib/projections/aea.js","webpack://exmap/./node_modules/proj4/lib/projections/gnom.js","webpack://exmap/./node_modules/proj4/lib/projections/cea.js","webpack://exmap/./node_modules/proj4/lib/common/iqsfnz.js","webpack://exmap/./node_modules/proj4/lib/projections/eqc.js","webpack://exmap/./node_modules/proj4/lib/projections/poly.js","webpack://exmap/./node_modules/proj4/lib/projections/nzmg.js","webpack://exmap/./node_modules/proj4/lib/projections/mill.js","webpack://exmap/./node_modules/proj4/lib/projections/sinu.js","webpack://exmap/./node_modules/proj4/lib/projections/moll.js","webpack://exmap/./node_modules/proj4/lib/projections/eqdc.js","webpack://exmap/./node_modules/proj4/lib/projections/vandg.js","webpack://exmap/./node_modules/proj4/lib/projections/aeqd.js","webpack://exmap/./node_modules/proj4/lib/projections/ortho.js","webpack://exmap/./node_modules/proj4/lib/projections/qsc.js","webpack://exmap/./node_modules/proj4/lib/projections/robin.js","webpack://exmap/./node_modules/proj4/lib/projections/geocent.js","webpack://exmap/./node_modules/proj4/lib/projections/tpers.js","webpack://exmap/./node_modules/proj4/lib/index.js","webpack://exmap/./node_modules/proj4/projs.js","webpack://exmap/./node_modules/wkt-parser/parser.js","webpack://exmap/./node_modules/wkt-parser/process.js","webpack://exmap/./node_modules/wkt-parser/index.js"],"sourcesContent":["/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\nvar A = 65; // A\n\nvar I = 73; // I\n\nvar O = 79; // O\n\nvar V = 86; // V\n\nvar Z = 90; // Z\n\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\n\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n}\n;\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\n\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n}\n;\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n}\n;\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\n\nfunction degToRad(deg) {\n  return deg * (Math.PI / 180.0);\n}\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\n\n\nfunction radToDeg(rad) {\n  return 180.0 * (rad / Math.PI);\n}\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\n\n\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber; // (int)\n\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1; //Make sure the longitude 180.00 is in Zone 60\n\n  if (Long === 180) {\n    ZoneNumber = 60;\n  } // Special zone for Norway\n\n\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  } // Special zones for Svalbard\n\n\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    } else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    } else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    } else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n\n  LongOriginRad = degToRad(LongOrigin);\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - 35 * eccSquared * eccSquared * eccSquared / 3072 * Math.sin(6 * LatRad));\n  var UTMEasting = k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0;\n  var UTMNorthing = k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0));\n\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\n\n\nfunction UTMtoLL(utm) {\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber; // check the ZoneNummber is valid\n\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad; // remove 500,000 meter offset for longitude\n\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing; // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  } // There are 60 zones with zone 1 being at West -180 to -174\n\n\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + 151 * e1 * e1 * e1 / 96 * Math.sin(6 * mu); // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n  var lat = phi1Rad - N1 * Math.tan(phi1Rad) / R1 * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n  var result;\n\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  } else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n\n  return result;\n}\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\n\n\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if (84 >= lat && lat >= 72) {\n    LetterDesignator = 'X';\n  } else if (72 > lat && lat >= 64) {\n    LetterDesignator = 'W';\n  } else if (64 > lat && lat >= 56) {\n    LetterDesignator = 'V';\n  } else if (56 > lat && lat >= 48) {\n    LetterDesignator = 'U';\n  } else if (48 > lat && lat >= 40) {\n    LetterDesignator = 'T';\n  } else if (40 > lat && lat >= 32) {\n    LetterDesignator = 'S';\n  } else if (32 > lat && lat >= 24) {\n    LetterDesignator = 'R';\n  } else if (24 > lat && lat >= 16) {\n    LetterDesignator = 'Q';\n  } else if (16 > lat && lat >= 8) {\n    LetterDesignator = 'P';\n  } else if (8 > lat && lat >= 0) {\n    LetterDesignator = 'N';\n  } else if (0 > lat && lat >= -8) {\n    LetterDesignator = 'M';\n  } else if (-8 > lat && lat >= -16) {\n    LetterDesignator = 'L';\n  } else if (-16 > lat && lat >= -24) {\n    LetterDesignator = 'K';\n  } else if (-24 > lat && lat >= -32) {\n    LetterDesignator = 'J';\n  } else if (-32 > lat && lat >= -40) {\n    LetterDesignator = 'H';\n  } else if (-40 > lat && lat >= -48) {\n    LetterDesignator = 'G';\n  } else if (-48 > lat && lat >= -56) {\n    LetterDesignator = 'F';\n  } else if (-56 > lat && lat >= -64) {\n    LetterDesignator = 'E';\n  } else if (-64 > lat && lat >= -72) {\n    LetterDesignator = 'D';\n  } else if (-72 > lat && lat >= -80) {\n    LetterDesignator = 'C';\n  }\n\n  return LetterDesignator;\n}\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\n\n\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n      snorthing = \"00000\" + utm.northing;\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\n\n\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\n\n\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\n\n\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index); // colInt and rowInt are the letters to build to return\n\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || colOrigin < I && colInt > I || (colInt > I || colOrigin < I) && rollover) {\n    colInt++;\n  }\n\n  if (colInt === O || colOrigin < O && colInt > O || (colInt > O || colOrigin < O) && rollover) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  } else {\n    rollover = false;\n  }\n\n  if (rowInt === I || rowOrigin < I && rowInt > I || (rowInt > I || rowOrigin < I) && rollover) {\n    rowInt++;\n  }\n\n  if (rowInt === O || rowOrigin < O && rowInt > O || (rowInt > O || rowOrigin < O) && rollover) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\n\n\nfunction decode(mgrsString) {\n  if (mgrsString && mgrsString.length === 0) {\n    throw \"MGRSPoint coverting from nothing\";\n  }\n\n  var length = mgrsString.length;\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0; // get Zone number\n\n  while (!/[A-Z]/.test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw \"MGRSPoint bad conversion from: \" + mgrsString;\n    }\n\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw \"MGRSPoint bad conversion from: \" + mgrsString;\n  }\n\n  var zoneLetter = mgrsString.charAt(i++); // Should we check the zone letter here? Why not.\n\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw \"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString;\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n  var set = get100kSetForZone(zoneNumber);\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set); // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  } // calculate the char index for easting/northing separator\n\n\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw \"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString;\n  }\n\n  var sep = remainder / 2;\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\n\n\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n\n    if (curCol === I) {\n      curCol++;\n    }\n\n    if (curCol === O) {\n      curCol++;\n    }\n\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw \"Bad character: \" + e;\n      }\n\n      curCol = A;\n      rewindMarker = true;\n    }\n\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\n\n\nfunction getNorthingFromChar(n, set) {\n  if (n > 'V') {\n    throw \"MGRSPoint given invalid Northing \" + n;\n  } // rowOrigin is the letter at the origin of the set for the\n  // column\n\n\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n\n    if (curRow === I) {\n      curRow++;\n    }\n\n    if (curRow === O) {\n      curRow++;\n    } // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n\n\n    if (curRow > V) {\n      if (rewindMarker) {\n        // making sure that this loop ends\n        throw \"Bad character: \" + n;\n      }\n\n      curRow = A;\n      rewindMarker = true;\n    }\n\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\n\n\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n\n  switch (zoneLetter) {\n    case 'C':\n      northing = 1100000.0;\n      break;\n\n    case 'D':\n      northing = 2000000.0;\n      break;\n\n    case 'E':\n      northing = 2800000.0;\n      break;\n\n    case 'F':\n      northing = 3700000.0;\n      break;\n\n    case 'G':\n      northing = 4600000.0;\n      break;\n\n    case 'H':\n      northing = 5500000.0;\n      break;\n\n    case 'J':\n      northing = 6400000.0;\n      break;\n\n    case 'K':\n      northing = 7300000.0;\n      break;\n\n    case 'L':\n      northing = 8200000.0;\n      break;\n\n    case 'M':\n      northing = 9100000.0;\n      break;\n\n    case 'N':\n      northing = 0.0;\n      break;\n\n    case 'P':\n      northing = 800000.0;\n      break;\n\n    case 'Q':\n      northing = 1700000.0;\n      break;\n\n    case 'R':\n      northing = 2600000.0;\n      break;\n\n    case 'S':\n      northing = 3500000.0;\n      break;\n\n    case 'T':\n      northing = 4400000.0;\n      break;\n\n    case 'U':\n      northing = 5300000.0;\n      break;\n\n    case 'V':\n      northing = 6200000.0;\n      break;\n\n    case 'W':\n      northing = 7000000.0;\n      break;\n\n    case 'X':\n      northing = 7900000.0;\n      break;\n\n    default:\n      northing = -1.0;\n  }\n\n  if (northing >= 0.0) {\n    return northing;\n  } else {\n    throw \"Invalid zone letter: \" + zoneLetter;\n  }\n}","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { addCoordinateTransforms, addEquivalentProjections, addProjection, createSafeCoordinateTransform, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\n\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      var units = def.units;\n\n      if (!units && def.projName === 'longlat') {\n        units = Units.DEGREES;\n      }\n\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: units\n      }));\n    }\n  }\n\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, createSafeCoordinateTransform(proj1, proj2, transform.forward), createSafeCoordinateTransform(proj2, proj1, transform.inverse));\n        }\n      }\n    }\n  }\n}","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\n\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\n\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\n\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\n\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\n\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2; // ellipoid pj_set_ell.c\n\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\n\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\n\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10; // you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2; // SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\n\nexport var SPI = 3.14159265359;","var exports = {};\nexport { exports as default };\nexports.greenwich = 0.0; //\"0dE\",\n\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\n\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\n\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\n\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\n\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\n\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\n\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\n\nexports.ferro = -17.666666666667; //\"17d40'W\",\n\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\n\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\n\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\n\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"","export default {\n  ft: {\n    to_meter: 0.3048\n  },\n  'us-ft': {\n    to_meter: 1200 / 3937\n  }\n};","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport _units from './constants/units';\nimport match from './match';\nexport default function (defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function rf(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function lat_0(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function lat_1(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function lat_2(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function lat_ts(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function lon_0(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function lon_1(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function lon_2(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function alpha(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function gamma(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function lonc(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function x_0(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function y_0(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function k_0(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function k(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function a(v) {\n      self.a = parseFloat(v);\n    },\n    b: function b(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function r_a() {\n      self.R_A = true;\n    },\n    zone: function zone(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function south() {\n      self.utmSouth = true;\n    },\n    towgs84: function towgs84(v) {\n      self.datum_params = v.split(\",\").map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function to_meter(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function units(v) {\n      self.units = v;\n      var unit = match(_units, v);\n\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function from_greenwich(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function pm(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function nadgrids(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function axis(v) {\n      var legalAxis = \"ewnsud\";\n\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function approx() {\n      self.approx = true;\n    }\n  };\n\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n\n    if (paramName in params) {\n      paramOutname = params[paramName];\n\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n\n  if (typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\") {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n\n  return self;\n}","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n\n  if (arguments.length === 2) {\n    var def = arguments[1];\n\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n\n    return;\n  }\n}\n\nglobals(defs);\nexport default defs;","export default function (defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\n\nfunction testObj(code) {\n  return typeof code === 'string';\n}\n\nfunction testDef(code) {\n  return code in defs;\n}\n\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction testWKT(code) {\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\n\nvar codes = ['3857', '900913', '3785', '102113'];\n\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n\n  if (!auth) {\n    return;\n  }\n\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\n\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n\n  if (!ext) {\n    return;\n  }\n\n  return match(ext, 'proj4');\n}\n\nfunction testProj(code) {\n  return code[0] === '+';\n}\n\nfunction parse(code) {\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n\n    if (testWKT(code)) {\n      var out = wkt(code); // test of spetial case, due to this being a very common and often malformed\n\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n\n      var maybeProjStr = checkProjStr(out);\n\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n\n      return out;\n    }\n\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else {\n    return code;\n  }\n}\n\nexport default parse;","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n\n  if (!source) {\n    return destination;\n  }\n\n  for (property in source) {\n    value = source[property];\n\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n\n  return destination;\n}","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / Math.sqrt(1 - con * con);\n}","export default function (x) {\n  return x < 0 ? -1 : 1;\n}","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\nexport default function (x) {\n  return Math.abs(x) <= SPI ? x : x - sign(x) * TWO_PI;\n}","import { HALF_PI } from '../constants/values';\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow((1 - con) / (1 + con), com);\n  return Math.tan(0.5 * (HALF_PI - phi)) / con;\n}","import { HALF_PI } from '../constants/values';\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * Math.pow((1 - con) / (1 + con), eccnth)) - phi;\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"phi2z has NoConvergence\");\n\n\n  return -9999;\n}","export function init() {//no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\n\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n\n  var n = name.toLowerCase();\n\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};","import msfnz from '../common/msfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n\n  this.e = Math.sqrt(this.es);\n\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y; // convert to radians\n\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\n\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  }\n\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","var exports = {};\nexport { exports as default };\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};","var exports = {};\nexport { exports as default };\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = out.datum_params[6] / 1000000.0 + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n\n  out.a = a; //datum object also uses these values\n\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\nvar loadedNadgrids = {};\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\n\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {\n    header: header,\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\n\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n\n  var optional = value[0] === '@';\n\n  if (optional) {\n    value = value.slice(1);\n  }\n\n  if (value === 'null') {\n    return {\n      name: 'null',\n      mandatory: !optional,\n      grid: null,\n      isNull: true\n    };\n  }\n\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return seconds / 3600 * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n\n  if (nFields === 11) {\n    return false;\n  }\n\n  nFields = view.getInt32(8, true);\n\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval); // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian)\n    };\n    gridShiftRecords.push(record);\n  }\n\n  return gridShiftRecords;\n}","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from \"./nadgrid\";\n\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n\n  var json = parseCode(srsCode);\n\n  if (typeof json !== 'object') {\n    callback(srsCode);\n    return;\n  }\n\n  var ourProj = Projection.projections.get(json.projName);\n\n  if (!ourProj) {\n    callback(srsCode);\n    return;\n  }\n\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2, nadgrids);\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n\n  extend(this, ourProj); // transfer all the methods from the projection\n  // copy the 4 things over we calulated in deriveConstants.sphere\n\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere; // copy the 3 things we calculated in deriveConstants.eccentricity\n\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2; // add in the datum object\n\n  this.datum = datumObj; // init the projection\n\n  this.init(); // legecy callback from back in the day when it went to spatialreference.org\n\n  callback(null, this);\n}\n\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid, WGS84 } from './constants/Ellipsoid';\nimport match from './match';\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n\n  var b2 = b * b; // used in geocentric\n\n  var es = (a2 - b2) / a2; // e ^ 2\n\n  var e = 0;\n\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) {\n    // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}","'use strict';\n\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2];\n  } else if (source.datum_type === PJD_7PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6];\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\n\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn;\n  /*  Earth radius at location  */\n\n  var Sin_Lat;\n  /*  Math.sin(Latitude)  */\n\n  var Sin2_Lat;\n  /*  Square of Math.sin(Latitude)  */\n\n  var Cos_Lat;\n  /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return {\n      x: -Infinity,\n      y: -Infinity,\n      z: p.z\n    };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return {\n      x: Infinity,\n      y: Infinity,\n      z: p.z\n    };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= 2 * Math.PI;\n  }\n\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / Math.sqrt(1.0e0 - es * Sin2_Lat);\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: (Rn * (1 - es) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = genau * genau;\n  var maxiter = 30;\n  var P;\n  /* distance between semi-minor axis and location */\n\n  var RR;\n  /* distance between center and location */\n\n  var CT;\n  /* sin of geocentric latitude */\n\n  var ST;\n  /* cos of geocentric latitude */\n\n  var RX;\n  var RK;\n  var RN;\n  /* Earth radius at location */\n\n  var CPHI0;\n  /* cos of start or old geodetic latitude in iterations */\n\n  var SPHI0;\n  /* sin of start or old geodetic latitude in iterations */\n\n  var CPHI;\n  /* cos of searched geodetic latitude */\n\n  var SPHI;\n  /* sin of searched geodetic latitude */\n\n  var SDPHI;\n  /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n\n  var iter;\n  /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n\n  var Longitude;\n  var Latitude;\n  var Height;\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n  /*      special cases for latitude and longitude */\n\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n\n\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n    /*  ellipsoidal (geodetic) height */\n\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  } while (SDPHI * SDPHI > genau2 && iter < maxiter);\n  /*      ellipsoidal (geodetic) latitude */\n\n\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\n\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6]; // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\n\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF; //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n\n}","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_NODATUM, R2D, SRS_WGS84_ESQUARED, SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR } from './constants/values';\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\n\nfunction checkParams(type) {\n  return type === PJD_3PARAM || type === PJD_7PARAM;\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  } // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n\n\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  } // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n\n  var source_a = source.a;\n  var source_es = source.es;\n\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  } // Do we need to go through geocentric coordinates?\n\n\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  } // Convert to geocentric coordinates.\n\n\n  point = geodeticToGeocentric(point, source_es, source_a); // Convert between datums\n\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n\n  var input = {\n    x: -point.x,\n    y: point.y\n  };\n  var output = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n\n    onlyMandatoryGrids = grid.mandatory;\n\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n\n      continue;\n    }\n\n    var subgrid = grid.grid.subgrids[0]; // skip tables that don't match our point at all\n\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n      continue;\n    }\n\n    output = applySubgridShift(input, inverse, subgrid);\n\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\" + -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n\n  if (isNaN(pin.x)) {\n    return val;\n  }\n\n  var tb = {\n    x: pin.x,\n    y: pin.y\n  };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9,\n        tol = 1e-12;\n    var dif, del;\n\n    do {\n      del = nadInterpolate(t, ct);\n\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n\n      dif = {\n        x: tb.x - (del.x + t.x),\n        y: tb.y - (del.y + t.y)\n      };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {\n    x: pin.x / ct.del[0],\n    y: pin.y / ct.del[1]\n  };\n  var indx = {\n    x: Math.floor(t.x),\n    y: Math.floor(t.y)\n  };\n  var frct = {\n    x: t.x - 1.0 * indx.x,\n    y: t.y - 1.0 * indx.y\n  };\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var inx;\n\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n\n  inx = indx.y * ct.lim[0] + indx.x;\n  var f00 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx++;\n  var f10 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx += ct.lim[0];\n  var f11 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx--;\n  var f01 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  var m11 = frct.x * frct.y,\n      m10 = frct.x * (1.0 - frct.y),\n      m00 = (1.0 - frct.x) * (1.0 - frct.y),\n      m01 = (1.0 - frct.x) * frct.y;\n  val.x = m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x;\n  val.y = m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y;\n  return val;\n}","export default function (crs, denorm, point) {\n  var xin = point.x,\n      yin = point.y,\n      zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n\n    if (i === 0) {\n      v = xin;\n\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n\n      case 'w':\n        out[t] = -v;\n        break;\n\n      case 'n':\n        out[t] = v;\n        break;\n\n      case 's':\n        out[t] = -v;\n        break;\n\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n\n        break;\n\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n\n        break;\n\n      default:\n        //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n\n  return out;\n}","export default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\n\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n\n    throw new TypeError('coordinates must be finite numbers');\n  }\n\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84' || (dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84';\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n\n  checkSanity(point); // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  } // Transform source points to long/lat, if they aren't already.\n\n\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n\n    point = source.inverse(point); // Convert Cartesian to longlat\n\n    if (!point) {\n      return;\n    }\n  } // Adjust for the prime meridian if necessary\n\n\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  } // Convert datums if needed, and if possible.\n\n\n  point = datum_transform(source.datum, dest.datum, point);\n\n  if (!point) {\n    return;\n  } // Adjust for the prime meridian if necessary\n\n\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else {\n    // else project\n    point = dest.forward(point);\n\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {\n      x: NaN,\n      y: NaN\n    };\n\n    if (coords.length > 2) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n\n    if (keys.length === 2) {\n      return out;\n    }\n\n    keys.forEach(function (key) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n\n  if (item.oProj) {\n    return item.oProj;\n  }\n\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n\n  toProj = checkProj(toProj);\n\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function forward(coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function inverse(coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n\n    if (single) {\n      obj.oProj = toProj;\n    }\n\n    return obj;\n  }\n}\n\nexport default proj4;","import { toPoint, forward } from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\n\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\n\nexport default Point;","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4])));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport { EPSLN } from '../constants/values';\nvar MAX_ITER = 20;\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n\n  for (var i = MAX_ITER; i; --i) {\n    /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s; //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  } //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n\n\n  return phi;\n}","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if (Math.abs(Math.abs(b) - 1) < EPSLN) {\n      return 93;\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if (b - 1 > EPSLN) {\n          return 93;\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n    x = this.a * (this.k0 * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c + als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) + this.x0;\n    y = this.a * (this.k0 * (ml - this.ml0 + sin_phi * delta_lon * al / 2 * (1 + als / 12 * (5 - t + 9 * c + 4 * cs + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\n\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if (g === 0 && h === 0) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else {\n    // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n      lat = phi - con * ds / (1 - this.es) * 0.5 * (1 - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n      lon = adjust_lon(this.long0 + d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi);\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}","import hypot from './hypot';\nimport log1py from './log1py';\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n  return x < 0 ? -y : y;\n}","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n  return z === 0 ? x : x * Math.log(y) / z;\n}","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return B + h * Math.sin(2 * B);\n}","import sinh from './sinh';\nimport cosh from './cosh';\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n  return [r * hr - i * hi, r * hi + i * hr];\n}","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n\n  this.lat0 = 0;\n  this.long0 = (6 * Math.abs(zone) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};","import adjust_lon from './adjust_lon';\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n\n  return zone;\n}","export default function (esinp, exp) {\n  return Math.pow((1 - esinp) / (1 + esinp), exp);\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n\n    p.y = lat;\n  }\n  /* convergence failed */\n\n\n  if (!i) {\n    return null;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  gauss.init.apply(this);\n\n  if (!this.rc) {\n    return;\n  }\n\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rho = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\", \"Oblique Stereographic Alternative\", \"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen);\n}\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      } else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n} // Stereographic forward equations--mapping lat,long to x,y\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0); //trace(p.toString());\n\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  } //trace(p.toString());\n\n\n  return p;\n} //* Stereographic inverse equations--mapping x,y to lat/long\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat; //trace(p.toString());\n\n        return p;\n      }\n\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat; //trace(p.toString());\n\n  return p;\n}\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K; // spheric latitude\n\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4); // spheric longitude\n\n  var I = this.alpha * (p.x - this.lambda0); // psoeudo equatorial rotation\n\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n  var lambda = this.lambda0 + I / this.alpha;\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    } //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n\n\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\n\n\nexport function init() {\n  var con,\n      com,\n      cosph0,\n      D,\n      F,\n      H,\n      L,\n      sinph0,\n      p,\n      J,\n      gamma = 0,\n      gamma0,\n      lamc = 0,\n      lam1 = 0,\n      lam2 = 0,\n      phi1 = 0,\n      phi2 = 0,\n      alpha_c = 0,\n      AB; // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  var alp = false;\n\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle * D2R;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\n\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = this.a * coords.x + this.x0;\n  coords.y = this.a * coords.y + this.y0;\n  return coords;\n}\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n  return coords;\n}\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n\n\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0; // Standard Parallels cannot be equal and on opposite sides of the equator\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n} // Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y; // singular cases :\n\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n\n    if (con <= 0) {\n      return null;\n    }\n\n    rh1 = 0;\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n  return p;\n} // Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = this.rh - (p.y - this.y0) / this.k0;\n\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * x, con * y);\n  }\n\n  if (rh1 !== 0 || this.ns > 0) {\n    con = 1 / this.ns;\n    ts = Math.pow(rh1 / (this.a * this.f0), con);\n    lat = phi2z(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n\n  lon = adjust_lon(theta / this.ns + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_1SP\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n\n\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n\n  this.s45 = 0.785398163397448;\n  /* 45 */\n\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n/* ellipsoid */\n\n/* calculate xy from lat/lon */\n\n/* Constants, identical to inverse transform function */\n\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n\n  gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  return p;\n}\n/* calculate lat/lon from xy */\n\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n  /* Transformation */\n\n  /* revert y, x*/\n\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n\n  if (iter >= 15) {\n    return null;\n  }\n\n  return p;\n}\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (e0, e1, e2, e3, phi) {\n  return e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi);\n}","export default function (x) {\n  return 1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x));\n}","export default function (x) {\n  return 0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x));\n}","export default function (x) {\n  return 0.05859375 * x * x * (1 + 0.75 * x);\n}","export default function (x) {\n  return x * x * x * (35 / 3072);\n}","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\nexport default function (x) {\n  return Math.abs(x) < HALF_PI ? x : x - sign(x) * Math.PI;\n}","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n  phi = ml / e0;\n\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n\n\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n\n      if (y < 0) {\n        p.y *= -1;\n      }\n\n      return p;\n    }\n\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (eccent, sinphi) {\n  var con;\n\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return (1 - eccent * eccent) * (sinphi / (1 - con * con) - 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n  } else {\n    return 2 * sinphi;\n  }\n}","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\n\nexport function init() {\n  var t = Math.abs(this.lat0);\n\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  } else {\n    this.mode = this.OBLIQ;\n  }\n\n  if (this.es > 0) {\n    var sinphi;\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n\n    switch (this.mode) {\n      case this.N_POLE:\n        this.dd = 1;\n        break;\n\n      case this.S_POLE:\n        this.dd = 1;\n        break;\n\n      case this.EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n\n      case this.OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = this.mode === this.EQUIT ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n\n      if (y <= EPSLN) {\n        return null;\n      }\n\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= this.mode === this.EQUIT ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n\n      y = FORTPI - phi * 0.5;\n      y = 2 * (this.mode === this.S_POLE ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n\n        x = this.xmf * b * cosb * sinlam;\n        break;\n\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * (this.mode === this.S_POLE ? b : -b);\n        } else {\n          x = y = 0;\n        }\n\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n\n  if (this.sphere) {\n    var cosz = 0,\n        rh,\n        sinz = 0;\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n\n    if (phi > 1) {\n      return null;\n    }\n\n    phi = 2 * Math.asin(phi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = Math.abs(rh) <= EPSLN ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n\n      case this.OBLIQ:\n        phi = Math.abs(rh) <= EPSLN ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n\n    lam = y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= sCe = Math.sin(sCe);\n\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n\n      q = x * x + y * y;\n\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      ab = 1 - q / this.qp;\n\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n/* determine latitude from authalic latitude */\n\nvar P00 = 0.33333333333333333333;\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t);\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = x > 1 ? 1 : -1;\n  }\n\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  con = rh1 * this.ns0 / this.a;\n\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\n\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n\n  return null;\n}\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0); // Approximation for projecting points to the horizon (infinity)\n\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = adjust_lon(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= EPSLN) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh;\n  /* Rho */\n\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rh = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = asinz(cosc * this.sin_p14 + p.y * sinc * this.cos_p14 / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\n\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + p.x / this.a / Math.cos(this.lat_ts));\n    lat = Math.asin(p.y / this.a * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { HALF_PI } from '../constants/values';\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return -1 * HALF_PI;\n    } else {\n      return HALF_PI;\n    }\n  } //var phi = 0.5* q/(1-eccent*eccent);\n\n\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n\n\n  return NaN;\n}","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n  this.rc = Math.cos(this.lat_ts);\n} // forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + this.a * dlon * this.rc;\n  p.y = this.y0 + this.a * dlat;\n  return p;\n} // inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n  p.x = adjust_lon(this.long0 + (x - this.x0) / (this.a * this.rc));\n  p.y = adjust_lat(this.lat0 + (y - this.y0) / this.a);\n  return p;\n}\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      lon = adjust_lon(this.long0 + Math.asin(x * Math.tan(phi) / this.a) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      } //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n\n\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { SEC_TO_RAD } from '../constants/values';\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\n\nexport var iterations = 1;\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0; // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  } // 2. Calculate theta\n\n\n  var th_re = d_psi;\n  var th_im = d_lambda; // 3. Calculate z\n\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n\n  var th_n_re1;\n  var th_n_im1;\n  var z_re = 0;\n  var z_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  } // 4. Calculate easting and northing\n\n\n  p.x = z_im * this.a + this.x0;\n  p.y = z_re * this.a + this.y0;\n  return p;\n}\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\n\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0; // 1. Calculate z\n\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a; // 2a. Calculate theta - first approximation gives km accuracy\n\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n\n  var z_n_re1;\n  var z_n_im1;\n  var th_re = 0;\n  var th_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  } // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n\n\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n    var num_re = z_re;\n    var num_im = z_im;\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    } // Complex division\n\n\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  } // 3. Calculate d_phi              ...                                    // and d_lambda\n\n\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  } // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n\n\n  var lat = this.lat0 + d_phi * SEC_TO_RAD * 1E5;\n  var lon = this.long0 + d_lambda;\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\n\nexport function init() {//no-op\n}\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport asinz from '../common/asinz';\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\n\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var lat, temp, lon, s;\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat)); //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n\n      lon = adjust_lon(temp);\n    } else if (s - EPSLN < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n\n  theta /= 2;\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var theta;\n  var arg;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + p.x / (0.900316316158 * this.a * Math.cos(theta)));\n\n  if (lon < -Math.PI) {\n    lon = -Math.PI;\n  }\n\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n\n  var lat = Math.asin(arg);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n  /* Forward equations\n      -----------------*/\n\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport asinz from '../common/asinz';\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\n\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n\n  if (Math.abs(dlon) <= EPSLN || Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    x = this.x0;\n\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    } //  return(OK);\n\n  }\n\n  var al = 0.5 * Math.abs(Math.PI / dlon - dlon / Math.PI);\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n\n  if (dlon < 0) {\n    con = -con;\n  }\n\n  x = this.x0 + con; //con = Math.abs(con / (Math.PI * this.R));\n\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\n\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n  /* inverse equations\n    -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = 3 * d / a1 / m1;\n\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n\n  th1 = Math.acos(con) / 3;\n\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n}\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n    if (rh > 2 * HALF_PI * this.a) {\n      return;\n    }\n\n    z = rh / this.a;\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n}\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = adjust_lon(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= EPSLN) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh;\n  /* height above ellipsoid      */\n\n  var z;\n  /* angle          */\n\n  var sinz, cosz;\n  /* sin of z and cos of z      */\n\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n  lon = this.long0;\n\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lat = asinz(cosz * this.sin_p14 + p.y * sinz * this.cos_p14 / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n/* constants */\n\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n  /* Determine the cube face from the center of projection. */\n\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n\n\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n} // QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var xy = {\n    x: 0,\n    y: 0\n  };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n\n  var area = {\n    value: 0\n  }; // move lon according to projection's lon\n\n  p.x -= this.long0;\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n\n  if (this.es !== 0) {\n    //if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n\n\n  lon = p.x; //lon = lp.lam;\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = lon > 0.0 ? lon - SPI : lon + SPI;\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon > 0.0 ? -lon + SPI : -lon - SPI;\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n\n\n  mu = Math.atan(12 / SPI * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n  /* Apply the result to the real area. */\n\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n  /* Now compute x, y from mu and nu */\n\n\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n} // QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var lp = {\n    lam: 0,\n    phi: 0\n  };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {\n    value: 0\n  };\n  /* de-offset */\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = mu < 0.0 ? mu + SPI : mu - SPI;\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n\n\n  t = SPI / 12 * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - 1 / Math.sqrt(2));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = theta < 0.0 ? theta + SPI : theta - SPI;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta;\n      }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta < 0.0 ? -theta - SPI : -theta + SPI;\n      }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n\n    t += s * s;\n\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n\n\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n\n\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n\n\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = lp.phi < 0 ? 1 : 0;\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\n\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = theta >= 0.0 ? theta - SPI : theta + SPI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n\n  return theta;\n}\n/* Helper function: shift the longitude. */\n\n\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\nvar COEFS_X = [[1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06], [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06], [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07], [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06], [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06], [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08], [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06], [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06], [0.9216, -0.00467746, -0.00010457, 4.81243e-06], [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06], [0.8679, -0.00609363, -0.000113898, 3.32484e-06], [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07], [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07], [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06], [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06], [0.6732, -0.00986209, -0.000199569, 1.91974e-05], [0.6213, -0.010418, 8.83923e-05, 6.24051e-06], [0.5722, -0.00906601, 0.000182, 6.24051e-06], [0.5322, -0.00677797, 0.000275608, 6.24051e-06]];\nvar COEFS_Y = [[-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11], [0.0620, 0.0124, -1.26793e-09, 4.22642e-10], [0.1240, 0.0124, 5.07171e-09, -1.60604e-09], [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09], [0.2480, 0.0124002, 7.10039e-08, -2.24e-08], [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08], [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07], [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07], [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07], [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07], [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07], [0.6769, 0.011713, -3.20223e-05, -5.16405e-07], [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07], [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06], [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09], [0.8936, 0.00969686, -6.4636e-05, -8.547e-06], [0.9394, 0.00840947, -0.000192841, -4.2106e-06], [0.9761, 0.00616527, -0.000256, -4.2106e-06], [1.0000, 0.00328947, -0.000319159, -4.2106e-06]];\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\n\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function poly3_val(coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function poly3_der(coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || \"Robinson\";\n}\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) {\n    // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    } // linear interpolation in 5 degree interval\n\n\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]); // find t so that poly3_val(coefs, t) = ll.y\n\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { geodeticToGeocentric, geocentricToGeodetic } from '../datumUtils';\nexport function init() {\n  this.name = 'geocent';\n}\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","var mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\nvar params = {\n  h: {\n    def: 100000,\n    num: true\n  },\n  // default is Karman line, no default in PROJ.7\n  azi: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is North\n  tilt: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is Nadir\n  long0: {\n    def: 0,\n    num: true\n  },\n  // default is Greenwich, conversion to rad is automatic\n  lat0: {\n    def: 0,\n    num: true\n  } // default is Equator, conversion to rad is automatic\n\n};\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  } // Tilt \n\n\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = {\n    x: p.x,\n    y: p.y\n  }; // Un-Tilt\n\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n  var rh = hypot(p.x, p.y);\n\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\nproj4.defaultDatum = 'WGS84'; //default datum\n\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","export default parseString;\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/; // const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\n\nParser.prototype.readCharicter = function () {\n  var char = this.text[this.place++];\n\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n\n      char = this.text[this.place++];\n    }\n  }\n\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n\n    case KEYWORD:\n      return this.keyword(char);\n\n    case QUOTED:\n      return this.quoted(char);\n\n    case AFTERQUOTE:\n      return this.afterquote(char);\n\n    case NUMBER:\n      return this.number(char);\n\n    case ENDED:\n      return;\n  }\n};\n\nParser.prototype.afterquote = function (char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\n\nParser.prototype.afterItem = function (char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (char === ']') {\n    this.level--;\n\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\n\nParser.prototype.number = function (char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\n\nParser.prototype.quoted = function (char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n\n  this.word += char;\n  return;\n};\n\nParser.prototype.keyword = function (char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\n\nParser.prototype.neutral = function (char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\n\nParser.prototype.output = function () {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n\n  if (this.state === ENDED) {\n    return this.root;\n  }\n\n  throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}","function mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n\n  var key = v.shift();\n\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n\n    obj[key] = v[0];\n    return;\n  }\n\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n\n    obj[key].push(v);\n    return;\n  }\n\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n\n      return;\n\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n\n      return;\n\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n\n    default:\n      i = -1;\n\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n\n      return mapit(obj, key, v);\n  }\n}","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport { sExpr } from './process';\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n\n  if (!(outName in obj) && inName in obj) {\n    obj[outName] = obj[inName];\n\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n\n  if (wkt.AXIS) {\n    var axisOrder = '';\n\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n\n      if (axis[0].indexOf('north') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north') {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south') {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east') {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west') {\n        axisOrder += 'w';\n      }\n    }\n\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert * wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n\n  var geogcs = wkt.GEOGCS;\n\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n\n      wkt.datumCode = 'wgs84';\n    }\n\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, -6);\n    }\n\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, -8);\n    }\n\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n\n    if (~wkt.datumCode.indexOf('tm65') || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n\n  var renamer = function renamer(a) {\n    return rename(wkt, a);\n  };\n\n  var list = [['standard_parallel_1', 'Standard_Parallel_1'], ['standard_parallel_1', 'Latitude of 1st standard parallel'], ['standard_parallel_2', 'Standard_Parallel_2'], ['standard_parallel_2', 'Latitude of 2nd standard parallel'], ['false_easting', 'False_Easting'], ['false_easting', 'False easting'], ['false-easting', 'Easting at false origin'], ['false_northing', 'False_Northing'], ['false_northing', 'False northing'], ['false_northing', 'Northing at false origin'], ['central_meridian', 'Central_Meridian'], ['central_meridian', 'Longitude of natural origin'], ['central_meridian', 'Longitude of false origin'], ['latitude_of_origin', 'Latitude_Of_Origin'], ['latitude_of_origin', 'Central_Parallel'], ['latitude_of_origin', 'Latitude of natural origin'], ['latitude_of_origin', 'Latitude of false origin'], ['scale_factor', 'Scale_Factor'], ['k0', 'scale_factor'], ['latitude_of_center', 'Latitude_Of_Center'], ['latitude_of_center', 'Latitude_of_center'], ['lat0', 'latitude_of_center', d2r], ['longitude_of_center', 'Longitude_Of_Center'], ['longitude_of_center', 'Longitude_of_center'], ['longc', 'longitude_of_center', d2r], ['x0', 'false_easting', toMeter], ['y0', 'false_northing', toMeter], ['long0', 'central_meridian', d2r], ['lat0', 'latitude_of_origin', d2r], ['lat0', 'standard_parallel_1', d2r], ['lat1', 'standard_parallel_1', d2r], ['lat2', 'standard_parallel_2', d2r], ['azimuth', 'Azimuth'], ['alpha', 'azimuth', d2r], ['srsCode', 'name']];\n  list.forEach(renamer);\n\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\n\nexport default function (wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}"],"names":["SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","Z","forward","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","Math","floor","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","String","fromCharCode","substr","length","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","lat","Long","lon","a","eccSquared","k0","LatRad","degToRad","LongRad","sqrt","sin","tan","cos","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","toPoint","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","right","top","bottom","deg","PI","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","x","y","pow","result","topRight","LetterDesignator","i","mgrsString","testChar","hunK","sb","test","charAt","parseInt","substring","set","east100k","e","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","n","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","parseFloat","inverse","register","proj4","j","projCodes","Object","keys","defs","len","code","def","units","projName","axisOrientation","axis","metersPerUnit","to_meter","code1","proj1","code2","proj2","transform","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","ignoredChar","match","obj","key","testkey","lkey","toLowerCase","replace","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","reduce","p","push","params","proj","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k","b","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","legalAxis","indexOf","approx","name","that","this","arguments","Array","isArray","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","global","codeWords","codes","testObj","testDef","some","word","testWKT","out","item","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","destination","source","value","property","undefined","eccent","sinphi","cosphi","con","abs","sign","phi","com","ts","dphi","eccnth","atan","identity","pt","projs","init","es","sphere","msfnz","adjust_lon","tsfnz","exp","phi2z","names","projStore","add","forEach","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","slice","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","ellps","a2","b2","sphere_","ecc","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","atan2","checkParams","type","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","input","output","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","isFinite","TypeError","enforceAxis","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","Point","warn","fromMGRS","mgrsStr","prototype","toMGRS","C04","C06","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","Error","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","PROJECTION","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","Proj","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","txt","Parser","whitespace","latin","keyword","endThings","digets","text","level","place","root","stack","currentObject","state","mapit","unshift","thing","newObj","sExpr","shift","convert","readCharicter","char","neutral","quoted","afterquote","number","afterItem","pop","newObjects","d2r","wkt","lisp","parser","local","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","TOWGS84","outName","inName","cleanWKT"],"sourceRoot":""}