{"version":3,"file":"5c4b34e2de88302095d0f6e5a219ed1fc6e72c4c-df3b73812d04b336c77a.js","mappings":"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","sources":["webpack://exmap/./node_modules/proj4/lib/constants/values.js","webpack://exmap/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://exmap/./node_modules/proj4/lib/constants/units.js","webpack://exmap/./node_modules/proj4/lib/match.js","webpack://exmap/./node_modules/proj4/lib/projString.js","webpack://exmap/./node_modules/wkt-parser/parser.js","webpack://exmap/./node_modules/wkt-parser/process.js","webpack://exmap/./node_modules/wkt-parser/index.js","webpack://exmap/./node_modules/proj4/lib/defs.js","webpack://exmap/./node_modules/proj4/lib/global.js","webpack://exmap/./node_modules/proj4/lib/parseCode.js","webpack://exmap/./node_modules/proj4/lib/extend.js","webpack://exmap/./node_modules/proj4/lib/common/msfnz.js","webpack://exmap/./node_modules/proj4/lib/common/sign.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_lon.js","webpack://exmap/./node_modules/proj4/lib/common/tsfnz.js","webpack://exmap/./node_modules/proj4/lib/common/phi2z.js","webpack://exmap/./node_modules/proj4/lib/projections/longlat.js","webpack://exmap/./node_modules/proj4/lib/projections.js","webpack://exmap/./node_modules/proj4/lib/projections/merc.js","webpack://exmap/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://exmap/./node_modules/proj4/lib/constants/Datum.js","webpack://exmap/./node_modules/proj4/lib/datum.js","webpack://exmap/./node_modules/proj4/lib/nadgrid.js","webpack://exmap/./node_modules/proj4/lib/Proj.js","webpack://exmap/./node_modules/proj4/lib/deriveConstants.js","webpack://exmap/./node_modules/proj4/lib/datumUtils.js","webpack://exmap/./node_modules/proj4/lib/datum_transform.js","webpack://exmap/./node_modules/proj4/lib/adjust_axis.js","webpack://exmap/./node_modules/proj4/lib/common/toPoint.js","webpack://exmap/./node_modules/proj4/lib/checkSanity.js","webpack://exmap/./node_modules/proj4/lib/transform.js","webpack://exmap/./node_modules/proj4/lib/core.js","webpack://exmap/./node_modules/mgrs/mgrs.js","webpack://exmap/./node_modules/proj4/lib/Point.js","webpack://exmap/./node_modules/proj4/lib/common/pj_enfn.js","webpack://exmap/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://exmap/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://exmap/./node_modules/proj4/lib/projections/tmerc.js","webpack://exmap/./node_modules/proj4/lib/common/sinh.js","webpack://exmap/./node_modules/proj4/lib/common/hypot.js","webpack://exmap/./node_modules/proj4/lib/common/asinhy.js","webpack://exmap/./node_modules/proj4/lib/common/log1py.js","webpack://exmap/./node_modules/proj4/lib/common/gatg.js","webpack://exmap/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://exmap/./node_modules/proj4/lib/common/cosh.js","webpack://exmap/./node_modules/proj4/lib/projections/etmerc.js","webpack://exmap/./node_modules/proj4/lib/common/clens.js","webpack://exmap/./node_modules/proj4/lib/projections/utm.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_zone.js","webpack://exmap/./node_modules/proj4/lib/common/srat.js","webpack://exmap/./node_modules/proj4/lib/projections/gauss.js","webpack://exmap/./node_modules/proj4/lib/projections/sterea.js","webpack://exmap/./node_modules/proj4/lib/projections/stere.js","webpack://exmap/./node_modules/proj4/lib/projections/somerc.js","webpack://exmap/./node_modules/proj4/lib/projections/omerc.js","webpack://exmap/./node_modules/proj4/lib/projections/lcc.js","webpack://exmap/./node_modules/proj4/lib/projections/krovak.js","webpack://exmap/./node_modules/proj4/lib/common/mlfn.js","webpack://exmap/./node_modules/proj4/lib/common/e0fn.js","webpack://exmap/./node_modules/proj4/lib/common/e1fn.js","webpack://exmap/./node_modules/proj4/lib/common/e2fn.js","webpack://exmap/./node_modules/proj4/lib/common/e3fn.js","webpack://exmap/./node_modules/proj4/lib/common/gN.js","webpack://exmap/./node_modules/proj4/lib/common/adjust_lat.js","webpack://exmap/./node_modules/proj4/lib/common/imlfn.js","webpack://exmap/./node_modules/proj4/lib/projections/cass.js","webpack://exmap/./node_modules/proj4/lib/common/qsfnz.js","webpack://exmap/./node_modules/proj4/lib/projections/laea.js","webpack://exmap/./node_modules/proj4/lib/common/asinz.js","webpack://exmap/./node_modules/proj4/lib/projections/aea.js","webpack://exmap/./node_modules/proj4/lib/projections/gnom.js","webpack://exmap/./node_modules/proj4/lib/projections/cea.js","webpack://exmap/./node_modules/proj4/lib/common/iqsfnz.js","webpack://exmap/./node_modules/proj4/lib/projections/eqc.js","webpack://exmap/./node_modules/proj4/lib/projections/poly.js","webpack://exmap/./node_modules/proj4/lib/projections/nzmg.js","webpack://exmap/./node_modules/proj4/lib/projections/mill.js","webpack://exmap/./node_modules/proj4/lib/projections/sinu.js","webpack://exmap/./node_modules/proj4/lib/projections/moll.js","webpack://exmap/./node_modules/proj4/lib/projections/eqdc.js","webpack://exmap/./node_modules/proj4/lib/projections/vandg.js","webpack://exmap/./node_modules/proj4/lib/projections/aeqd.js","webpack://exmap/./node_modules/proj4/lib/projections/ortho.js","webpack://exmap/./node_modules/proj4/lib/projections/qsc.js","webpack://exmap/./node_modules/proj4/lib/projections/robin.js","webpack://exmap/./node_modules/proj4/lib/projections/geocent.js","webpack://exmap/./node_modules/proj4/lib/projections/tpers.js","webpack://exmap/./node_modules/proj4/lib/index.js","webpack://exmap/./node_modules/proj4/projs.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\n\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\n\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\n\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\n\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\n\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2; // ellipoid pj_set_ell.c\n\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\n\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\n\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10; // you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2; // SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\n\nexport var SPI = 3.14159265359;","var exports = {};\nexport { exports as default };\nexports.greenwich = 0.0; //\"0dE\",\n\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\n\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\n\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\n\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\n\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\n\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\n\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\n\nexports.ferro = -17.666666666667; //\"17d40'W\",\n\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\n\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\n\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\n\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"","export default {\n  ft: {\n    to_meter: 0.3048\n  },\n  'us-ft': {\n    to_meter: 1200 / 3937\n  }\n};","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport _units from './constants/units';\nimport match from './match';\nexport default function (defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function rf(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function lat_0(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function lat_1(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function lat_2(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function lat_ts(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function lon_0(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function lon_1(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function lon_2(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function alpha(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function gamma(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function lonc(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function x_0(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function y_0(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function k_0(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function k(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function a(v) {\n      self.a = parseFloat(v);\n    },\n    b: function b(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function r_a() {\n      self.R_A = true;\n    },\n    zone: function zone(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function south() {\n      self.utmSouth = true;\n    },\n    towgs84: function towgs84(v) {\n      self.datum_params = v.split(\",\").map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function to_meter(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function units(v) {\n      self.units = v;\n      var unit = match(_units, v);\n\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function from_greenwich(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function pm(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function nadgrids(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function axis(v) {\n      var legalAxis = \"ewnsud\";\n\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function approx() {\n      self.approx = true;\n    }\n  };\n\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n\n    if (paramName in params) {\n      paramOutname = params[paramName];\n\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n\n  if (typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\") {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n\n  return self;\n}","export default parseString;\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/; // const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\n\nParser.prototype.readCharicter = function () {\n  var char = this.text[this.place++];\n\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n\n      char = this.text[this.place++];\n    }\n  }\n\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n\n    case KEYWORD:\n      return this.keyword(char);\n\n    case QUOTED:\n      return this.quoted(char);\n\n    case AFTERQUOTE:\n      return this.afterquote(char);\n\n    case NUMBER:\n      return this.number(char);\n\n    case ENDED:\n      return;\n  }\n};\n\nParser.prototype.afterquote = function (char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\n\nParser.prototype.afterItem = function (char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (char === ']') {\n    this.level--;\n\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\n\nParser.prototype.number = function (char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\n\nParser.prototype.quoted = function (char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n\n  this.word += char;\n  return;\n};\n\nParser.prototype.keyword = function (char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\n\nParser.prototype.neutral = function (char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\n\nParser.prototype.output = function () {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n\n  if (this.state === ENDED) {\n    return this.root;\n  }\n\n  throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}","function mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n\n  var key = v.shift();\n\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n\n    obj[key] = v[0];\n    return;\n  }\n\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n\n    obj[key].push(v);\n    return;\n  }\n\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n\n      return;\n\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n\n      return;\n\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n\n    default:\n      i = -1;\n\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n\n      return mapit(obj, key, v);\n  }\n}","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport { sExpr } from './process';\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n\n  if (!(outName in obj) && inName in obj) {\n    obj[outName] = obj[inName];\n\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n\n  if (wkt.AXIS) {\n    var axisOrder = '';\n\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n\n      if (axis[0].indexOf('north') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north') {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south') {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east') {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west') {\n        axisOrder += 'w';\n      }\n    }\n\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert * wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n\n  var geogcs = wkt.GEOGCS;\n\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n\n      wkt.datumCode = 'wgs84';\n    }\n\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, -6);\n    }\n\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, -8);\n    }\n\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n\n    if (~wkt.datumCode.indexOf('tm65') || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n\n  var renamer = function renamer(a) {\n    return rename(wkt, a);\n  };\n\n  var list = [['standard_parallel_1', 'Standard_Parallel_1'], ['standard_parallel_1', 'Latitude of 1st standard parallel'], ['standard_parallel_2', 'Standard_Parallel_2'], ['standard_parallel_2', 'Latitude of 2nd standard parallel'], ['false_easting', 'False_Easting'], ['false_easting', 'False easting'], ['false-easting', 'Easting at false origin'], ['false_northing', 'False_Northing'], ['false_northing', 'False northing'], ['false_northing', 'Northing at false origin'], ['central_meridian', 'Central_Meridian'], ['central_meridian', 'Longitude of natural origin'], ['central_meridian', 'Longitude of false origin'], ['latitude_of_origin', 'Latitude_Of_Origin'], ['latitude_of_origin', 'Central_Parallel'], ['latitude_of_origin', 'Latitude of natural origin'], ['latitude_of_origin', 'Latitude of false origin'], ['scale_factor', 'Scale_Factor'], ['k0', 'scale_factor'], ['latitude_of_center', 'Latitude_Of_Center'], ['latitude_of_center', 'Latitude_of_center'], ['lat0', 'latitude_of_center', d2r], ['longitude_of_center', 'Longitude_Of_Center'], ['longitude_of_center', 'Longitude_of_center'], ['longc', 'longitude_of_center', d2r], ['x0', 'false_easting', toMeter], ['y0', 'false_northing', toMeter], ['long0', 'central_meridian', d2r], ['lat0', 'latitude_of_origin', d2r], ['lat0', 'standard_parallel_1', d2r], ['lat1', 'standard_parallel_1', d2r], ['lat2', 'standard_parallel_2', d2r], ['azimuth', 'Azimuth'], ['alpha', 'azimuth', d2r], ['srsCode', 'name']];\n  list.forEach(renamer);\n\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\n\nexport default function (wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n\n  if (arguments.length === 2) {\n    var def = arguments[1];\n\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      } else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n\n    return;\n  }\n}\n\nglobals(defs);\nexport default defs;","export default function (defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\n\nfunction testObj(code) {\n  return typeof code === 'string';\n}\n\nfunction testDef(code) {\n  return code in defs;\n}\n\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction testWKT(code) {\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\n\nvar codes = ['3857', '900913', '3785', '102113'];\n\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n\n  if (!auth) {\n    return;\n  }\n\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\n\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n\n  if (!ext) {\n    return;\n  }\n\n  return match(ext, 'proj4');\n}\n\nfunction testProj(code) {\n  return code[0] === '+';\n}\n\nfunction parse(code) {\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n\n    if (testWKT(code)) {\n      var out = wkt(code); // test of spetial case, due to this being a very common and often malformed\n\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n\n      var maybeProjStr = checkProjStr(out);\n\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n\n      return out;\n    }\n\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else {\n    return code;\n  }\n}\n\nexport default parse;","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n\n  if (!source) {\n    return destination;\n  }\n\n  for (property in source) {\n    value = source[property];\n\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n\n  return destination;\n}","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / Math.sqrt(1 - con * con);\n}","export default function (x) {\n  return x < 0 ? -1 : 1;\n}","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\nexport default function (x) {\n  return Math.abs(x) <= SPI ? x : x - sign(x) * TWO_PI;\n}","import { HALF_PI } from '../constants/values';\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow((1 - con) / (1 + con), com);\n  return Math.tan(0.5 * (HALF_PI - phi)) / con;\n}","import { HALF_PI } from '../constants/values';\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * Math.pow((1 - con) / (1 + con), eccnth)) - phi;\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"phi2z has NoConvergence\");\n\n\n  return -9999;\n}","export function init() {//no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\n\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n\n  var n = name.toLowerCase();\n\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};","import msfnz from '../common/msfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n\n  this.e = Math.sqrt(this.es);\n\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y; // convert to radians\n\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\n\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  }\n\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","var exports = {};\nexport { exports as default };\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};","var exports = {};\nexport { exports as default };\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = out.datum_params[6] / 1000000.0 + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n\n  out.a = a; //datum object also uses these values\n\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\nvar loadedNadgrids = {};\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\n\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {\n    header: header,\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\n\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n\n  var optional = value[0] === '@';\n\n  if (optional) {\n    value = value.slice(1);\n  }\n\n  if (value === 'null') {\n    return {\n      name: 'null',\n      mandatory: !optional,\n      grid: null,\n      isNull: true\n    };\n  }\n\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return seconds / 3600 * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n\n  if (nFields === 11) {\n    return false;\n  }\n\n  nFields = view.getInt32(8, true);\n\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval); // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian)\n    };\n    gridShiftRecords.push(record);\n  }\n\n  return gridShiftRecords;\n}","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from \"./nadgrid\";\n\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n\n  var json = parseCode(srsCode);\n\n  if (typeof json !== 'object') {\n    callback(srsCode);\n    return;\n  }\n\n  var ourProj = Projection.projections.get(json.projName);\n\n  if (!ourProj) {\n    callback(srsCode);\n    return;\n  }\n\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2, nadgrids);\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n\n  extend(this, ourProj); // transfer all the methods from the projection\n  // copy the 4 things over we calulated in deriveConstants.sphere\n\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere; // copy the 3 things we calculated in deriveConstants.eccentricity\n\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2; // add in the datum object\n\n  this.datum = datumObj; // init the projection\n\n  this.init(); // legecy callback from back in the day when it went to spatialreference.org\n\n  callback(null, this);\n}\n\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid, WGS84 } from './constants/Ellipsoid';\nimport match from './match';\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n\n  var b2 = b * b; // used in geocentric\n\n  var es = (a2 - b2) / a2; // e ^ 2\n\n  var e = 0;\n\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) {\n    // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}","'use strict';\n\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2];\n  } else if (source.datum_type === PJD_7PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6];\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\n\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn;\n  /*  Earth radius at location  */\n\n  var Sin_Lat;\n  /*  Math.sin(Latitude)  */\n\n  var Sin2_Lat;\n  /*  Square of Math.sin(Latitude)  */\n\n  var Cos_Lat;\n  /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return {\n      x: -Infinity,\n      y: -Infinity,\n      z: p.z\n    };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return {\n      x: Infinity,\n      y: Infinity,\n      z: p.z\n    };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= 2 * Math.PI;\n  }\n\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / Math.sqrt(1.0e0 - es * Sin2_Lat);\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: (Rn * (1 - es) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = genau * genau;\n  var maxiter = 30;\n  var P;\n  /* distance between semi-minor axis and location */\n\n  var RR;\n  /* distance between center and location */\n\n  var CT;\n  /* sin of geocentric latitude */\n\n  var ST;\n  /* cos of geocentric latitude */\n\n  var RX;\n  var RK;\n  var RN;\n  /* Earth radius at location */\n\n  var CPHI0;\n  /* cos of start or old geodetic latitude in iterations */\n\n  var SPHI0;\n  /* sin of start or old geodetic latitude in iterations */\n\n  var CPHI;\n  /* cos of searched geodetic latitude */\n\n  var SPHI;\n  /* sin of searched geodetic latitude */\n\n  var SDPHI;\n  /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n\n  var iter;\n  /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n\n  var Longitude;\n  var Latitude;\n  var Height;\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n  /*      special cases for latitude and longitude */\n\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n\n\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n    /*  ellipsoidal (geodetic) height */\n\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  } while (SDPHI * SDPHI > genau2 && iter < maxiter);\n  /*      ellipsoidal (geodetic) latitude */\n\n\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\n\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6]; // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\n\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF; //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n\n}","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_NODATUM, R2D, SRS_WGS84_ESQUARED, SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR } from './constants/values';\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\n\nfunction checkParams(type) {\n  return type === PJD_3PARAM || type === PJD_7PARAM;\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  } // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n\n\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  } // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n\n  var source_a = source.a;\n  var source_es = source.es;\n\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  } // Do we need to go through geocentric coordinates?\n\n\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  } // Convert to geocentric coordinates.\n\n\n  point = geodeticToGeocentric(point, source_es, source_a); // Convert between datums\n\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n\n  var input = {\n    x: -point.x,\n    y: point.y\n  };\n  var output = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n\n    onlyMandatoryGrids = grid.mandatory;\n\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n\n      continue;\n    }\n\n    var subgrid = grid.grid.subgrids[0]; // skip tables that don't match our point at all\n\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n      continue;\n    }\n\n    output = applySubgridShift(input, inverse, subgrid);\n\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\" + -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n\n  if (isNaN(pin.x)) {\n    return val;\n  }\n\n  var tb = {\n    x: pin.x,\n    y: pin.y\n  };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9,\n        tol = 1e-12;\n    var dif, del;\n\n    do {\n      del = nadInterpolate(t, ct);\n\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n\n      dif = {\n        x: tb.x - (del.x + t.x),\n        y: tb.y - (del.y + t.y)\n      };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {\n    x: pin.x / ct.del[0],\n    y: pin.y / ct.del[1]\n  };\n  var indx = {\n    x: Math.floor(t.x),\n    y: Math.floor(t.y)\n  };\n  var frct = {\n    x: t.x - 1.0 * indx.x,\n    y: t.y - 1.0 * indx.y\n  };\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var inx;\n\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n\n  inx = indx.y * ct.lim[0] + indx.x;\n  var f00 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx++;\n  var f10 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx += ct.lim[0];\n  var f11 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx--;\n  var f01 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  var m11 = frct.x * frct.y,\n      m10 = frct.x * (1.0 - frct.y),\n      m00 = (1.0 - frct.x) * (1.0 - frct.y),\n      m01 = (1.0 - frct.x) * frct.y;\n  val.x = m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x;\n  val.y = m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y;\n  return val;\n}","export default function (crs, denorm, point) {\n  var xin = point.x,\n      yin = point.y,\n      zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n\n    if (i === 0) {\n      v = xin;\n\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n\n      case 'w':\n        out[t] = -v;\n        break;\n\n      case 'n':\n        out[t] = v;\n        break;\n\n      case 's':\n        out[t] = -v;\n        break;\n\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n\n        break;\n\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n\n        break;\n\n      default:\n        //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n\n  return out;\n}","export default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\n\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n\n    throw new TypeError('coordinates must be finite numbers');\n  }\n\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84' || (dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84';\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n\n  checkSanity(point); // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  } // Transform source points to long/lat, if they aren't already.\n\n\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n\n    point = source.inverse(point); // Convert Cartesian to longlat\n\n    if (!point) {\n      return;\n    }\n  } // Adjust for the prime meridian if necessary\n\n\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  } // Convert datums if needed, and if possible.\n\n\n  point = datum_transform(source.datum, dest.datum, point);\n\n  if (!point) {\n    return;\n  } // Adjust for the prime meridian if necessary\n\n\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else {\n    // else project\n    point = dest.forward(point);\n\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {\n      x: NaN,\n      y: NaN\n    };\n\n    if (coords.length > 2) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n\n    if (keys.length === 2) {\n      return out;\n    }\n\n    keys.forEach(function (key) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n\n  if (item.oProj) {\n    return item.oProj;\n  }\n\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n\n  toProj = checkProj(toProj);\n\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function forward(coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function inverse(coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n\n    if (single) {\n      obj.oProj = toProj;\n    }\n\n    return obj;\n  }\n}\n\nexport default proj4;","/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\nvar A = 65; // A\n\nvar I = 73; // I\n\nvar O = 79; // O\n\nvar V = 86; // V\n\nvar Z = 90; // Z\n\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\n\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n}\n;\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\n\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n}\n;\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n}\n;\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\n\nfunction degToRad(deg) {\n  return deg * (Math.PI / 180.0);\n}\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\n\n\nfunction radToDeg(rad) {\n  return 180.0 * (rad / Math.PI);\n}\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\n\n\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber; // (int)\n\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1; //Make sure the longitude 180.00 is in Zone 60\n\n  if (Long === 180) {\n    ZoneNumber = 60;\n  } // Special zone for Norway\n\n\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  } // Special zones for Svalbard\n\n\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    } else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    } else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    } else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n\n  LongOriginRad = degToRad(LongOrigin);\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - 35 * eccSquared * eccSquared * eccSquared / 3072 * Math.sin(6 * LatRad));\n  var UTMEasting = k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0;\n  var UTMNorthing = k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0));\n\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\n\n\nfunction UTMtoLL(utm) {\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber; // check the ZoneNummber is valid\n\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad; // remove 500,000 meter offset for longitude\n\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing; // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  } // There are 60 zones with zone 1 being at West -180 to -174\n\n\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + 151 * e1 * e1 * e1 / 96 * Math.sin(6 * mu); // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n  var lat = phi1Rad - N1 * Math.tan(phi1Rad) / R1 * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n  var result;\n\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  } else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n\n  return result;\n}\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\n\n\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if (84 >= lat && lat >= 72) {\n    LetterDesignator = 'X';\n  } else if (72 > lat && lat >= 64) {\n    LetterDesignator = 'W';\n  } else if (64 > lat && lat >= 56) {\n    LetterDesignator = 'V';\n  } else if (56 > lat && lat >= 48) {\n    LetterDesignator = 'U';\n  } else if (48 > lat && lat >= 40) {\n    LetterDesignator = 'T';\n  } else if (40 > lat && lat >= 32) {\n    LetterDesignator = 'S';\n  } else if (32 > lat && lat >= 24) {\n    LetterDesignator = 'R';\n  } else if (24 > lat && lat >= 16) {\n    LetterDesignator = 'Q';\n  } else if (16 > lat && lat >= 8) {\n    LetterDesignator = 'P';\n  } else if (8 > lat && lat >= 0) {\n    LetterDesignator = 'N';\n  } else if (0 > lat && lat >= -8) {\n    LetterDesignator = 'M';\n  } else if (-8 > lat && lat >= -16) {\n    LetterDesignator = 'L';\n  } else if (-16 > lat && lat >= -24) {\n    LetterDesignator = 'K';\n  } else if (-24 > lat && lat >= -32) {\n    LetterDesignator = 'J';\n  } else if (-32 > lat && lat >= -40) {\n    LetterDesignator = 'H';\n  } else if (-40 > lat && lat >= -48) {\n    LetterDesignator = 'G';\n  } else if (-48 > lat && lat >= -56) {\n    LetterDesignator = 'F';\n  } else if (-56 > lat && lat >= -64) {\n    LetterDesignator = 'E';\n  } else if (-64 > lat && lat >= -72) {\n    LetterDesignator = 'D';\n  } else if (-72 > lat && lat >= -80) {\n    LetterDesignator = 'C';\n  }\n\n  return LetterDesignator;\n}\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\n\n\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n      snorthing = \"00000\" + utm.northing;\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\n\n\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\n\n\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\n\n\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index); // colInt and rowInt are the letters to build to return\n\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || colOrigin < I && colInt > I || (colInt > I || colOrigin < I) && rollover) {\n    colInt++;\n  }\n\n  if (colInt === O || colOrigin < O && colInt > O || (colInt > O || colOrigin < O) && rollover) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  } else {\n    rollover = false;\n  }\n\n  if (rowInt === I || rowOrigin < I && rowInt > I || (rowInt > I || rowOrigin < I) && rollover) {\n    rowInt++;\n  }\n\n  if (rowInt === O || rowOrigin < O && rowInt > O || (rowInt > O || rowOrigin < O) && rollover) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\n\n\nfunction decode(mgrsString) {\n  if (mgrsString && mgrsString.length === 0) {\n    throw \"MGRSPoint coverting from nothing\";\n  }\n\n  var length = mgrsString.length;\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0; // get Zone number\n\n  while (!/[A-Z]/.test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw \"MGRSPoint bad conversion from: \" + mgrsString;\n    }\n\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw \"MGRSPoint bad conversion from: \" + mgrsString;\n  }\n\n  var zoneLetter = mgrsString.charAt(i++); // Should we check the zone letter here? Why not.\n\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw \"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString;\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n  var set = get100kSetForZone(zoneNumber);\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set); // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  } // calculate the char index for easting/northing separator\n\n\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw \"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString;\n  }\n\n  var sep = remainder / 2;\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\n\n\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n\n    if (curCol === I) {\n      curCol++;\n    }\n\n    if (curCol === O) {\n      curCol++;\n    }\n\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw \"Bad character: \" + e;\n      }\n\n      curCol = A;\n      rewindMarker = true;\n    }\n\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\n\n\nfunction getNorthingFromChar(n, set) {\n  if (n > 'V') {\n    throw \"MGRSPoint given invalid Northing \" + n;\n  } // rowOrigin is the letter at the origin of the set for the\n  // column\n\n\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n\n    if (curRow === I) {\n      curRow++;\n    }\n\n    if (curRow === O) {\n      curRow++;\n    } // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n\n\n    if (curRow > V) {\n      if (rewindMarker) {\n        // making sure that this loop ends\n        throw \"Bad character: \" + n;\n      }\n\n      curRow = A;\n      rewindMarker = true;\n    }\n\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\n\n\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n\n  switch (zoneLetter) {\n    case 'C':\n      northing = 1100000.0;\n      break;\n\n    case 'D':\n      northing = 2000000.0;\n      break;\n\n    case 'E':\n      northing = 2800000.0;\n      break;\n\n    case 'F':\n      northing = 3700000.0;\n      break;\n\n    case 'G':\n      northing = 4600000.0;\n      break;\n\n    case 'H':\n      northing = 5500000.0;\n      break;\n\n    case 'J':\n      northing = 6400000.0;\n      break;\n\n    case 'K':\n      northing = 7300000.0;\n      break;\n\n    case 'L':\n      northing = 8200000.0;\n      break;\n\n    case 'M':\n      northing = 9100000.0;\n      break;\n\n    case 'N':\n      northing = 0.0;\n      break;\n\n    case 'P':\n      northing = 800000.0;\n      break;\n\n    case 'Q':\n      northing = 1700000.0;\n      break;\n\n    case 'R':\n      northing = 2600000.0;\n      break;\n\n    case 'S':\n      northing = 3500000.0;\n      break;\n\n    case 'T':\n      northing = 4400000.0;\n      break;\n\n    case 'U':\n      northing = 5300000.0;\n      break;\n\n    case 'V':\n      northing = 6200000.0;\n      break;\n\n    case 'W':\n      northing = 7000000.0;\n      break;\n\n    case 'X':\n      northing = 7900000.0;\n      break;\n\n    default:\n      northing = -1.0;\n  }\n\n  if (northing >= 0.0) {\n    return northing;\n  } else {\n    throw \"Invalid zone letter: \" + zoneLetter;\n  }\n}","import { toPoint, forward } from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\n\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\n\nexport default Point;","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4])));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport { EPSLN } from '../constants/values';\nvar MAX_ITER = 20;\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n\n  for (var i = MAX_ITER; i; --i) {\n    /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s; //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  } //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n\n\n  return phi;\n}","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if (Math.abs(Math.abs(b) - 1) < EPSLN) {\n      return 93;\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if (b - 1 > EPSLN) {\n          return 93;\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n    x = this.a * (this.k0 * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c + als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) + this.x0;\n    y = this.a * (this.k0 * (ml - this.ml0 + sin_phi * delta_lon * al / 2 * (1 + als / 12 * (5 - t + 9 * c + 4 * cs + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\n\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if (g === 0 && h === 0) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else {\n    // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n      lat = phi - con * ds / (1 - this.es) * 0.5 * (1 - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n      lon = adjust_lon(this.long0 + d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi);\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}","import hypot from './hypot';\nimport log1py from './log1py';\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n  return x < 0 ? -y : y;\n}","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n  return z === 0 ? x : x * Math.log(y) / z;\n}","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return B + h * Math.sin(2 * B);\n}","import sinh from './sinh';\nimport cosh from './cosh';\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n  return [r * hr - i * hi, r * hi + i * hr];\n}","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n\n  this.lat0 = 0;\n  this.long0 = (6 * Math.abs(zone) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};","import adjust_lon from './adjust_lon';\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n\n  return zone;\n}","export default function (esinp, exp) {\n  return Math.pow((1 - esinp) / (1 + esinp), exp);\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n\n    p.y = lat;\n  }\n  /* convergence failed */\n\n\n  if (!i) {\n    return null;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nexport function init() {\n  gauss.init.apply(this);\n\n  if (!this.rc) {\n    return;\n  }\n\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rho = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\", \"Oblique Stereographic Alternative\", \"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen);\n}\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      } else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n} // Stereographic forward equations--mapping lat,long to x,y\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0); //trace(p.toString());\n\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  } //trace(p.toString());\n\n\n  return p;\n} //* Stereographic inverse equations--mapping x,y to lat/long\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat; //trace(p.toString());\n\n        return p;\n      }\n\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat; //trace(p.toString());\n\n  return p;\n}\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K; // spheric latitude\n\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4); // spheric longitude\n\n  var I = this.alpha * (p.x - this.lambda0); // psoeudo equatorial rotation\n\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n  var lambda = this.lambda0 + I / this.alpha;\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    } //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n\n\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\n\n\nexport function init() {\n  var con,\n      com,\n      cosph0,\n      D,\n      F,\n      H,\n      L,\n      sinph0,\n      p,\n      J,\n      gamma = 0,\n      gamma0,\n      lamc = 0,\n      lam1 = 0,\n      lam2 = 0,\n      phi1 = 0,\n      phi2 = 0,\n      alpha_c = 0,\n      AB; // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  var alp = false;\n\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle * D2R;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\n\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = this.a * coords.x + this.x0;\n  coords.y = this.a * coords.y + this.y0;\n  return coords;\n}\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n  return coords;\n}\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n\n\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0; // Standard Parallels cannot be equal and on opposite sides of the equator\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n} // Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y; // singular cases :\n\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n\n    if (con <= 0) {\n      return null;\n    }\n\n    rh1 = 0;\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n  return p;\n} // Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = this.rh - (p.y - this.y0) / this.k0;\n\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * x, con * y);\n  }\n\n  if (rh1 !== 0 || this.ns > 0) {\n    con = 1 / this.ns;\n    ts = Math.pow(rh1 / (this.a * this.f0), con);\n    lat = phi2z(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n\n  lon = adjust_lon(theta / this.ns + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_1SP\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n\n\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n\n  this.s45 = 0.785398163397448;\n  /* 45 */\n\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n/* ellipsoid */\n\n/* calculate xy from lat/lon */\n\n/* Constants, identical to inverse transform function */\n\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n\n  gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  return p;\n}\n/* calculate lat/lon from xy */\n\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n  /* Transformation */\n\n  /* revert y, x*/\n\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n\n  if (iter >= 15) {\n    return null;\n  }\n\n  return p;\n}\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (e0, e1, e2, e3, phi) {\n  return e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi);\n}","export default function (x) {\n  return 1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x));\n}","export default function (x) {\n  return 0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x));\n}","export default function (x) {\n  return 0.05859375 * x * x * (1 + 0.75 * x);\n}","export default function (x) {\n  return x * x * x * (35 / 3072);\n}","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\nexport default function (x) {\n  return Math.abs(x) < HALF_PI ? x : x - sign(x) * Math.PI;\n}","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n  phi = ml / e0;\n\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n\n\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n\n      if (y < 0) {\n        p.y *= -1;\n      }\n\n      return p;\n    }\n\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","export default function (eccent, sinphi) {\n  var con;\n\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return (1 - eccent * eccent) * (sinphi / (1 - con * con) - 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n  } else {\n    return 2 * sinphi;\n  }\n}","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\n\nexport function init() {\n  var t = Math.abs(this.lat0);\n\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  } else {\n    this.mode = this.OBLIQ;\n  }\n\n  if (this.es > 0) {\n    var sinphi;\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n\n    switch (this.mode) {\n      case this.N_POLE:\n        this.dd = 1;\n        break;\n\n      case this.S_POLE:\n        this.dd = 1;\n        break;\n\n      case this.EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n\n      case this.OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = this.mode === this.EQUIT ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n\n      if (y <= EPSLN) {\n        return null;\n      }\n\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= this.mode === this.EQUIT ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n\n      y = FORTPI - phi * 0.5;\n      y = 2 * (this.mode === this.S_POLE ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n\n        x = this.xmf * b * cosb * sinlam;\n        break;\n\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * (this.mode === this.S_POLE ? b : -b);\n        } else {\n          x = y = 0;\n        }\n\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n\n  if (this.sphere) {\n    var cosz = 0,\n        rh,\n        sinz = 0;\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n\n    if (phi > 1) {\n      return null;\n    }\n\n    phi = 2 * Math.asin(phi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = Math.abs(rh) <= EPSLN ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n\n      case this.OBLIQ:\n        phi = Math.abs(rh) <= EPSLN ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n\n    lam = y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= sCe = Math.sin(sCe);\n\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n\n      q = x * x + y * y;\n\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      ab = 1 - q / this.qp;\n\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n/* determine latitude from authalic latitude */\n\nvar P00 = 0.33333333333333333333;\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t);\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = x > 1 ? 1 : -1;\n  }\n\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  con = rh1 * this.ns0 / this.a;\n\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\n\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n\n  return null;\n}\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0); // Approximation for projecting points to the horizon (infinity)\n\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = adjust_lon(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= EPSLN) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh;\n  /* Rho */\n\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rh = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = asinz(cosc * this.sin_p14 + p.y * sinc * this.cos_p14 / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\n\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + p.x / this.a / Math.cos(this.lat_ts));\n    lat = Math.asin(p.y / this.a * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { HALF_PI } from '../constants/values';\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return -1 * HALF_PI;\n    } else {\n      return HALF_PI;\n    }\n  } //var phi = 0.5* q/(1-eccent*eccent);\n\n\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n\n\n  return NaN;\n}","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n  this.rc = Math.cos(this.lat_ts);\n} // forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + this.a * dlon * this.rc;\n  p.y = this.y0 + this.a * dlat;\n  return p;\n} // inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n  p.x = adjust_lon(this.long0 + (x - this.x0) / (this.a * this.rc));\n  p.y = adjust_lat(this.lat0 + (y - this.y0) / this.a);\n  return p;\n}\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      lon = adjust_lon(this.long0 + Math.asin(x * Math.tan(phi) / this.a) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      } //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n\n\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { SEC_TO_RAD } from '../constants/values';\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\n\nexport var iterations = 1;\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0; // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  } // 2. Calculate theta\n\n\n  var th_re = d_psi;\n  var th_im = d_lambda; // 3. Calculate z\n\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n\n  var th_n_re1;\n  var th_n_im1;\n  var z_re = 0;\n  var z_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  } // 4. Calculate easting and northing\n\n\n  p.x = z_im * this.a + this.x0;\n  p.y = z_re * this.a + this.y0;\n  return p;\n}\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\n\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0; // 1. Calculate z\n\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a; // 2a. Calculate theta - first approximation gives km accuracy\n\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n\n  var z_n_re1;\n  var z_n_im1;\n  var th_re = 0;\n  var th_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  } // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n\n\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n    var num_re = z_re;\n    var num_im = z_im;\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    } // Complex division\n\n\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  } // 3. Calculate d_phi              ...                                    // and d_lambda\n\n\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  } // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n\n\n  var lat = this.lat0 + d_phi * SEC_TO_RAD * 1E5;\n  var lon = this.long0 + d_lambda;\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\n\nexport function init() {//no-op\n}\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport asinz from '../common/asinz';\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\n\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var lat, temp, lon, s;\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat)); //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n\n      lon = adjust_lon(temp);\n    } else if (s - EPSLN < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\n\nexport function forward(p) {\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n\n  theta /= 2;\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var theta;\n  var arg;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + p.x / (0.900316316158 * this.a * Math.cos(theta)));\n\n  if (lon < -Math.PI) {\n    lon = -Math.PI;\n  }\n\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n\n  var lat = Math.asin(arg);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n  /* Forward equations\n      -----------------*/\n\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport asinz from '../common/asinz';\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\n\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n\n  if (Math.abs(dlon) <= EPSLN || Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    x = this.x0;\n\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    } //  return(OK);\n\n  }\n\n  var al = 0.5 * Math.abs(Math.PI / dlon - dlon / Math.PI);\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n\n  if (dlon < 0) {\n    con = -con;\n  }\n\n  x = this.x0 + con; //con = Math.abs(con / (Math.PI * this.R));\n\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\n\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n  /* inverse equations\n    -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = 3 * d / a1 / m1;\n\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n\n  th1 = Math.acos(con) / 3;\n\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n}\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n    if (rh > 2 * HALF_PI * this.a) {\n      return;\n    }\n\n    z = rh / this.a;\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n}\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nexport function forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = adjust_lon(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= EPSLN) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nexport function inverse(p) {\n  var rh;\n  /* height above ellipsoid      */\n\n  var z;\n  /* angle          */\n\n  var sinz, cosz;\n  /* sin of z and cos of z      */\n\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n  lon = this.long0;\n\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lat = asinz(cosz * this.sin_p14 + p.y * sinz * this.cos_p14 / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n/* constants */\n\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n  /* Determine the cube face from the center of projection. */\n\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n\n\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n} // QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nexport function forward(p) {\n  var xy = {\n    x: 0,\n    y: 0\n  };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n\n  var area = {\n    value: 0\n  }; // move lon according to projection's lon\n\n  p.x -= this.long0;\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n\n  if (this.es !== 0) {\n    //if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n\n\n  lon = p.x; //lon = lp.lam;\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = lon > 0.0 ? lon - SPI : lon + SPI;\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon > 0.0 ? -lon + SPI : -lon - SPI;\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n\n\n  mu = Math.atan(12 / SPI * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n  /* Apply the result to the real area. */\n\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n  /* Now compute x, y from mu and nu */\n\n\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n} // QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nexport function inverse(p) {\n  var lp = {\n    lam: 0,\n    phi: 0\n  };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {\n    value: 0\n  };\n  /* de-offset */\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = mu < 0.0 ? mu + SPI : mu - SPI;\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n\n\n  t = SPI / 12 * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - 1 / Math.sqrt(2));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = theta < 0.0 ? theta + SPI : theta - SPI;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta;\n      }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta < 0.0 ? -theta - SPI : -theta + SPI;\n      }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n\n    t += s * s;\n\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n\n\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n\n\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n\n\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = lp.phi < 0 ? 1 : 0;\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\n\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = theta >= 0.0 ? theta - SPI : theta + SPI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n\n  return theta;\n}\n/* Helper function: shift the longitude. */\n\n\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\nvar COEFS_X = [[1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06], [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06], [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07], [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06], [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06], [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08], [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06], [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06], [0.9216, -0.00467746, -0.00010457, 4.81243e-06], [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06], [0.8679, -0.00609363, -0.000113898, 3.32484e-06], [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07], [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07], [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06], [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06], [0.6732, -0.00986209, -0.000199569, 1.91974e-05], [0.6213, -0.010418, 8.83923e-05, 6.24051e-06], [0.5722, -0.00906601, 0.000182, 6.24051e-06], [0.5322, -0.00677797, 0.000275608, 6.24051e-06]];\nvar COEFS_Y = [[-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11], [0.0620, 0.0124, -1.26793e-09, 4.22642e-10], [0.1240, 0.0124, 5.07171e-09, -1.60604e-09], [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09], [0.2480, 0.0124002, 7.10039e-08, -2.24e-08], [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08], [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07], [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07], [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07], [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07], [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07], [0.6769, 0.011713, -3.20223e-05, -5.16405e-07], [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07], [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06], [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09], [0.8936, 0.00969686, -6.4636e-05, -8.547e-06], [0.9394, 0.00840947, -0.000192841, -4.2106e-06], [0.9761, 0.00616527, -0.000256, -4.2106e-06], [1.0000, 0.00328947, -0.000319159, -4.2106e-06]];\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\n\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function poly3_val(coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function poly3_der(coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || \"Robinson\";\n}\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) {\n    // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    } // linear interpolation in 5 degree interval\n\n\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]); // find t so that poly3_val(coefs, t) = ll.y\n\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import { geodeticToGeocentric, geocentricToGeodetic } from '../datumUtils';\nexport function init() {\n  this.name = 'geocent';\n}\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","var mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\nvar params = {\n  h: {\n    def: 100000,\n    num: true\n  },\n  // default is Karman line, no default in PROJ.7\n  azi: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is North\n  tilt: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is Nadir\n  long0: {\n    def: 0,\n    num: true\n  },\n  // default is Greenwich, conversion to rad is automatic\n  lat0: {\n    def: 0,\n    num: true\n  } // default is Equator, conversion to rad is automatic\n\n};\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  } // Tilt \n\n\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = {\n    x: p.x,\n    y: p.y\n  }; // Un-Tilt\n\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n  var rh = hypot(p.x, p.y);\n\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\nproj4.defaultDatum = 'WGS84'; //default datum\n\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}"],"names":["SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","txt","Parser","output","whitespace","latin","keyword","endThings","digets","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","d2r","input","wkt","lisp","parser","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","global","codeWords","codes","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","n","start","get","ellipseName","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","a2","b2","sphere_","ecc","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","transform","enforceAxis","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","Proj","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","proj4","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers"],"sourceRoot":""}