{"version":3,"file":"component---src-pages-picture-index-tsx-21a3a19bad6e68c835af.js","mappings":"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","sources":["webpack://exmap/./src/scripts/ImageWGS84.ts","webpack://exmap/./src/pages/picture/index.tsx"],"sourcesContent":["import SourceState from \"ol/source/State\";\nimport TileState from \"ol/TileState\";\nimport {\n    DEFAULT_MAX_ZOOM,\n    DEFAULT_TILE_SIZE\n} from \"ol/tilegrid/common\";\nimport {\n    getHeight,\n    getWidth,\n}\n    from \"ol/extent\";\nimport {\n    toSize\n} from \"ol/size.js\";\nimport ImageTile from \"ol/ImageTile\";\nimport Tile from \"ol/Tile\";\nimport TileGrid from \"ol/tilegrid/TileGrid\";\nimport TileImage, { Options as TileImageOptions } from \"ol/source/TileImage\";\n\nfunction rotateExtent(extent: number[], rad: number): number[] {\n    const center = [(extent[2] - extent[0]) / 2 + extent[0], (extent[3] - extent[1]) / 2 + extent[1]];\n    const leftTop = [\n        (extent[0] - center[0]) * Math.cos(rad) - (extent[3] - center[1]) * Math.sin(rad),\n        (extent[0] - center[0]) * Math.sin(rad) + (extent[3] - center[1]) * Math.cos(rad),\n    ];\n    const leftBottom = [\n        (extent[0] - center[0]) * Math.cos(rad) - (extent[1] - center[1]) * Math.sin(rad),\n        (extent[0] - center[0]) * Math.sin(rad) + (extent[1] - center[1]) * Math.cos(rad),\n    ];\n    const rightBottom = [\n        (extent[2] - center[0]) * Math.cos(rad) - (extent[1] - center[1]) * Math.sin(rad),\n        (extent[2] - center[0]) * Math.sin(rad) + (extent[1] - center[1]) * Math.cos(rad),\n    ];\n    const rightTop = [\n        (extent[2] - center[0]) * Math.cos(rad) - (extent[3] - center[1]) * Math.sin(rad),\n        (extent[2] - center[0]) * Math.sin(rad) + (extent[3] - center[1]) * Math.cos(rad),\n    ];\n\n    return [\n        Math.min(leftTop[0], leftBottom[0], rightBottom[0], rightTop[0]) + center[0],\n        Math.min(leftTop[1], leftBottom[1], rightBottom[1], rightTop[1]) + center[1],\n        Math.max(leftTop[0], leftBottom[0], rightBottom[0], rightTop[0]) + center[0],\n        Math.max(leftTop[1], leftBottom[1], rightBottom[1], rightTop[1]) + center[1],\n    ];\n}\n\nfunction resolutionsFromExtent(\n    extent: number[],\n    opt_maxZoom?: number,\n    opt_tileSize?: number,\n    opt_maxResolution?: number\n): number[] {\n    const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n    const height = getHeight(extent);\n    const width = getWidth(extent);\n\n    const tileSize = toSize(\n        opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n    );\n    const maxResolution =\n        opt_maxResolution && opt_maxResolution > 0 ?\n            opt_maxResolution :\n            Math.max(width / tileSize[0], height / tileSize[1]);\n\n    const length = maxZoom + 1;\n    const resolutions: number[] = new Array(length);\n    for (let z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z + 1);\n    }\n    return resolutions;\n}\n\nfunction toLonLat(z: number, x: number, y: number): number[] {\n    const size = 180 / (2 ** z);\n    const lon = -180 + x * size;\n    const lat = 90 - y * size;\n    return [lon, lat, size]\n}\n\nfunction crossing(extentLeft: number[], extentRight: number[]): boolean {\n    return Math.max(extentLeft[0], extentRight[0]) <= Math.min(extentLeft[2], extentRight[2]) && Math.max(extentLeft[1], extentRight[1]) <= Math.min(extentLeft[3], extentRight[3])\n}\n\n\nexport type ImageWGS84Props = {\n    url: string;\n    imageExtent: number[];\n    rotate?: number;\n    minZoom?: number;\n    maxZoom?: number;\n    tileSize?: number;\n} & TileImageOptions;\n\nexport class ImageWGS84 extends TileImage {\n    private imageExtent_: number[];\n    private context_: CanvasRenderingContext2D | null;\n\n    constructor(opt_options: ImageWGS84Props) {\n        const options = opt_options || {};\n        const tileSize = options.tileSize ? options.tileSize : DEFAULT_TILE_SIZE;\n        const gridExtent = [-180, -90, 180, 90];\n        const tileGrid = new TileGrid({\n            extent: gridExtent,\n            tileSize: tileSize,\n            minZoom: opt_options.minZoom,\n            resolutions: resolutionsFromExtent(gridExtent, opt_options.maxZoom, tileSize, 360 / tileSize),\n        });\n\n        const tileLoadFunction =\n            (imageTile: Tile, coordString: string) => {\n                const [z, x, y] = coordString.split(\",\").map(Number);\n\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = tileSize;\n                canvas.height = tileSize;\n                const context = canvas.getContext(\"2d\");\n                if (!context || !this.context_) {\n                    imageTile.setState(TileState.ERROR);\n                    return;\n                }\n\n                const [leftTopLon, leftTopLat, size] = toLonLat(z, x, y);\n                const [\n                    imageExtentLeft, imageExtentBottom, imageExtentRight, imageExtentTop\n                ] = this.imageExtent_;\n\n                let tileLeft = leftTopLon;\n                let tileRight = leftTopLon + size;\n                const tileBottom = leftTopLat - size;\n                const tileTop = leftTopLat;\n\n                if (imageExtentLeft < -180 && 0 < tileRight) {\n                    tileLeft -= 360;\n                    tileRight -= 360;\n                } else if (180 < imageExtentRight && tileLeft < 0) {\n                    tileLeft += 360;\n                    tileRight += 360;\n                }\n\n                if (!crossing([\n                    imageExtentLeft, imageExtentBottom, imageExtentRight, imageExtentTop\n                ], [\n                    tileLeft, tileBottom, tileRight, tileTop\n                ])) {\n                    imageTile.setState(TileState.EMPTY);\n                }\n\n                const sourcePerPixel = [(imageExtentRight - imageExtentLeft) / this.context_.canvas.width, (imageExtentTop - imageExtentBottom) / this.context_.canvas.height];\n                const tilePerPixel = [(tileRight - tileLeft) / tileSize, (tileTop - tileBottom) / tileSize];\n                const leftBottom = [Math.max(tileLeft, imageExtentLeft), Math.max(imageExtentBottom, tileBottom)];\n                const rightTop = [Math.min(tileRight, imageExtentRight), Math.min(imageExtentTop, tileTop)];\n                const tileRect = [\n                    Math.round((leftBottom[0] - tileLeft) / tilePerPixel[0]), Math.round((tileTop - rightTop[1]) / tilePerPixel[1]),\n                    Math.round((rightTop[0] - tileLeft) / tilePerPixel[0]), Math.round((tileTop - leftBottom[1]) / tilePerPixel[1])\n                ];\n                const sourceRect = [\n                    Math.round((leftBottom[0] - imageExtentLeft) / sourcePerPixel[0]), Math.round((imageExtentTop - rightTop[1]) / sourcePerPixel[1]),\n                    Math.round((rightTop[0] - imageExtentLeft) / sourcePerPixel[0]), Math.round((imageExtentTop - leftBottom[1]) / sourcePerPixel[1])\n                ];\n                const sourceRectSize = [sourceRect[2] - sourceRect[0], sourceRect[3] - sourceRect[1]];\n                const tileRectSize = [tileRect[2] - tileRect[0], tileRect[3] - tileRect[1]];\n\n                if (Math.min(...sourceRectSize, ...tileRectSize) <= 0) {\n                    imageTile.setState(TileState.EMPTY);\n                    return\n                }\n\n                const tempCanvas = document.createElement(\"canvas\");\n                tempCanvas.width = sourceRectSize[0];\n                tempCanvas.height = sourceRectSize[1];\n                const tempContext = tempCanvas.getContext(\"2d\");\n                if (tempContext) {\n                    tempContext.clearRect(0, 0, sourceRectSize[0], sourceRectSize[1]);\n                    tempContext.putImageData(this.context_.getImageData(sourceRect[0], sourceRect[1], sourceRectSize[0], sourceRectSize[1]), 0, 0);\n                    context.drawImage(tempCanvas, 0, 0, sourceRectSize[0], sourceRectSize[1], tileRect[0], tileRect[1], tileRectSize[0], tileRectSize[1]);\n                }\n\n                ((imageTile as ImageTile).getImage() as HTMLImageElement).src =\n                    canvas.toDataURL();\n\n            };\n\n        let interpolate =\n            options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        super({\n            state: SourceState.LOADING,\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: \"EPSG:4326\",\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            url: \"{z},{x},{y}\",\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n        });\n\n\n        this.imageExtent_ = [Infinity, Infinity, -Infinity, -Infinity];\n        if (Array.isArray(options.imageExtent) && options.imageExtent.length > 3) {\n            this.imageExtent_ = options.imageExtent;\n        }\n        if (\n            this.imageExtent_[0] < -360 || 360 < this.imageExtent_[0] ||\n            this.imageExtent_[1] < -90 || 90 < this.imageExtent_[1] ||\n            this.imageExtent_[2] < -360 || 360 < this.imageExtent_[2] ||\n            this.imageExtent_[3] < -90 || 90 < this.imageExtent_[3] ||\n            this.imageExtent_[2] <= this.imageExtent_[0] ||\n            this.imageExtent_[0] - this.imageExtent_[2] > 360\n        ) throw new Error(\"invalid extent.\");\n\n        let rad = 0;\n        if (options.rotate) {\n            rad = options.rotate;\n            this.imageExtent_ = rotateExtent(this.imageExtent_, rad)\n        }\n\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n\n        if (!context) {\n            this.context_ = null;\n            return;\n        }\n        context.imageSmoothingEnabled = interpolate !== undefined ? interpolate : true;\n        this.context_ = context;\n\n        const image = new Image();\n        image.crossOrigin = options.crossOrigin || \"\";\n\n        image.addEventListener(\"load\", () => {\n            const rotatedCoordinates = rotateExtent([0, 0, image.width, image.height], rad);\n            const rotatedWidth = rotatedCoordinates[2] - rotatedCoordinates[0];\n            const rotatedHeight = rotatedCoordinates[3] - rotatedCoordinates[1];\n            canvas.width = rotatedWidth;\n            canvas.height = rotatedHeight;\n\n            context.save();\n            context.translate(rotatedWidth / 2, rotatedHeight / 2);\n            context.rotate(-rad);\n            context.drawImage(image, -(image.width / 2), -(image.height / 2));\n            context.restore();\n            this.setState(SourceState.READY);\n        });\n        image.addEventListener(\"error\", () => {\n            this.setState(SourceState.ERROR);\n        });\n        try {\n            image.src = options.url;\n        } catch {\n            console.log(1111111);\n        }\n    }\n}","import * as React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport {\n  Container,\n  Typography,\n  Stack,\n  Grid,\n  TextField,\n  Button,\n  RadioGroup,\n  Radio,\n  Tooltip,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n} from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nimport { Map } from \"ol\";\nimport SourceState from \"ol/source/State\";\nimport TileLayer from \"ol/layer/Tile\";\nimport { transformExtent } from \"ol/proj\";\nimport MousePosition from \"ol/control/MousePosition\";\nimport proj4 from \"proj4\";\nimport { useOl } from \"~/hooks/useOl\";\nimport { useDnDSort } from \"~/hooks/useDnDSort\";\nimport { ImageWGS84 } from \"~/scripts/ImageWGS84\";\n\nconst Hint = styled(\"div\")({\n  fontSize: \"12px\",\n});\n\nconst EllipsisWrapper = styled(\"div\")({\n  overflow: \"hidden\",\n});\n\nconst EllipsisTypography = styled(Typography)({\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  textOverflow: \"ellipsis\",\n});\n\nconst LayerName = styled(EllipsisWrapper)({\n  flex: \"1 1 auto\",\n});\n\nconst LayerButton = styled(\"div\")({\n  flex: \"0 0 auto\",\n});\n\nconst StyledUl = styled(\"ul\")({\n  listStyle: \"none\",\n  margin: 0,\n  padding: 0,\n  \"& > li\": {\n    marginTop: \"5px\",\n    \"&:firstChild\": {\n      marginTop: 0,\n    },\n  },\n});\n\ntype Input = {\n  type: string;\n  url: string;\n  files: FileList | string;\n  extent: string;\n};\n\ntype SourceConf = {\n  url: string;\n  name: string;\n  revoke: boolean;\n  extent: number[];\n};\n\ntype SubmitProps = {\n  id: string;\n  source: SourceConf;\n};\n\ntype FormError =\n  | \"Duplicate\"\n  | \"InvalidExtent\"\n  | \"ReversedExtent\"\n  | \"FailedLoadSource\";\n\ntype LayerConf = {\n  layer: TileLayer<ImageWGS84>;\n  id: string;\n  source: SourceConf;\n} & SubmitProps;\n\nconst defaultSourceValue = {\n  type: \"file\",\n  files: \"\",\n  url: \"\",\n  extent: \"\",\n};\n\nconst Coordinates = styled(\"div\")({\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  padding: \"2px 4px\",\n  fontSize: 10,\n  pointerEvents: \"none\",\n});\n\nconst Viewer = (): React.ReactElement => {\n  const ol = useOl();\n  const wrapperRef = React.useRef<HTMLDivElement | null>(null);\n  const positionRef = React.useRef<HTMLDivElement | null>(null);\n  const [layerConfs, setLayerConfs] = React.useState<LayerConf[]>([]);\n  const [error, setError] = React.useState<FormError | null>(null);\n  const [loading, setLoading] = React.useState<boolean>();\n\n  const layerList = useDnDSort<LayerConf>({\n    defaultItems: [],\n    mode: \"topbottom\",\n    drop: (draged, hovered) => {\n      if (draged.index !== hovered.index)\n        setLayerConfs(prevList => {\n          if (\n            hovered.index < 0 ||\n            draged.index < 0 ||\n            draged.index > prevList.length - 1 ||\n            hovered.index > prevList.length - 1\n          ) {\n            return prevList;\n          }\n\n          const nextList = [...prevList];\n          const target = nextList[draged.index];\n          nextList.splice(draged.index, 1);\n          nextList.splice(hovered.index, 0, target);\n          return nextList;\n        });\n    },\n  });\n\n  const {\n    control,\n    handleSubmit,\n    register,\n    reset,\n    watch,\n    setValue,\n    formState: { errors },\n  } = useForm<Input>({\n    mode: \"onSubmit\",\n    criteriaMode: \"all\",\n    defaultValues: defaultSourceValue,\n  });\n\n  const removeLayer = React.useCallback(\n    (id: string) => {\n      setLayerConfs(layerConfs => {\n        const newLayerConfs = [...layerConfs];\n        const index = newLayerConfs.findIndex(layerConf => {\n          return id === layerConf.id;\n        });\n        const target = newLayerConfs[index];\n        if (target) {\n          if (target.source.revoke) URL.revokeObjectURL(target.source.url);\n\n          if (ol.map) {\n            ol.map.removeLayer(target.layer);\n\n            newLayerConfs.splice(index, 1);\n            return newLayerConfs;\n          }\n        }\n        return newLayerConfs;\n      });\n    },\n    [ol.map]\n  );\n\n  const resetList = layerList.reset;\n  React.useEffect(() => {\n    let zIndex = 0;\n    layerConfs.forEach(({ layer }) => {\n      layer.setZIndex(zIndex++);\n    });\n\n    resetList([...layerConfs]);\n  }, [layerConfs, resetList]);\n\n  const setLayer = React.useCallback(\n    async (map: Map, id: string, source: SourceConf) => {\n      setLoading(true);\n      try {\n        const imageSource = new ImageWGS84({\n          url: source.url,\n          imageExtent: source.extent,\n          crossOrigin: \"anonymous\",\n        });\n        const sourceState = imageSource.getState();\n        const setting = () => {\n          const layer = new TileLayer({\n            source: imageSource,\n          });\n          map.addLayer(layer);\n          setLayerConfs(layerConfs => {\n            return [\n              ...layerConfs,\n              {\n                id,\n                layer,\n                source,\n                error: null,\n              },\n            ];\n          });\n\n          const originExtent = source.extent;\n          if (originExtent) {\n            const transformed = transformExtent(\n              originExtent,\n              \"EPSG:4326\",\n              \"EPSG:3857\"\n            );\n\n            if (transformed[0] > transformed[2])\n              transformed[2] +=\n                proj4(\"EPSG:4326\", \"EPSG:3857\", [180, 0])[0] * 2;\n\n            map.getView().fit(transformed, {\n              padding: [40, 20, 40, 20],\n              maxZoom: 20,\n            });\n          }\n        };\n\n        if (sourceState === SourceState.READY) {\n          setting();\n          setLoading(false);\n        } else {\n          const sourceListener = () => {\n            const sourceState = imageSource.getState();\n            if (sourceState === SourceState.ERROR) {\n              imageSource.removeEventListener(\"change\", sourceListener);\n              setError(\"FailedLoadSource\");\n              setLoading(false);\n            }\n            if (sourceState === SourceState.READY) {\n              imageSource.removeEventListener(\"change\", sourceListener);\n              setting();\n              setLoading(false);\n            }\n          };\n          imageSource.addEventListener(\"change\", sourceListener);\n        }\n      } catch {\n        setLoading(false);\n      }\n    },\n    []\n  );\n\n  const load = React.useCallback(\n    ({ source, id }: SubmitProps) => {\n      if (ol.map) setLayer(ol.map, id, source);\n    },\n    [ol.map, setLayer]\n  );\n\n  React.useEffect(() => {\n    if (loading === false) {\n      reset();\n    }\n  }, [loading, reset]);\n\n  const onSubmit: SubmitHandler<Input> = React.useCallback(\n    data => {\n      const extent = data.extent.split(\",\").map(v => Number(v));\n\n      for (let i = 0; i < extent.length; i++) {\n        const n = extent[i];\n        if (!(typeof n === \"number\" && n - n === 0)) {\n          setError(\"InvalidExtent\");\n          return;\n        }\n      }\n      if (extent[0] > extent[2] || extent[1] > extent[3]) {\n        setError(\"ReversedExtent\");\n        return;\n      }\n      let id = \"\";\n      let source: SourceConf | null = null;\n      switch (data.type) {\n        case \"file\": {\n          if (!(data.files instanceof FileList)) break;\n\n          const file = data.files[0];\n          id += file.name;\n          source = {\n            url: URL.createObjectURL(file),\n            revoke: true,\n            name: file.name,\n            extent,\n          };\n          break;\n        }\n        case \"url\": {\n          const url = data.url;\n          id += url;\n          source = {\n            url,\n            revoke: false,\n            name: url.split(\"/\").pop() || \"\",\n            extent,\n          };\n          break;\n        }\n      }\n      id += extent.join(\",\");\n      if (source) {\n        const index = layerConfs.findIndex(layerConf => {\n          return id === layerConf.id;\n        });\n        if (index >= 0) {\n          setError(\"Duplicate\");\n          return;\n        }\n        load({\n          id,\n          source,\n        });\n      }\n    },\n    [load, layerConfs]\n  );\n\n  const watcher = watch();\n  const sample = React.useCallback(() => {\n    setValue(\"type\", \"url\");\n    setValue(\"url\", \"../image/rect.png\");\n    setValue(\"extent\", \"0,0,10,10\");\n\n    setError(null);\n  }, [setValue, setError]);\n\n  React.useEffect(() => {\n    let mousePositionControl: MousePosition | null = null;\n\n    if (ol.map && positionRef.current) {\n      mousePositionControl = new MousePosition({\n        coordinateFormat: coords => {\n          if (coords)\n            return `lon: ${coords[0].toFixed(4)}, lat: ${coords[1].toFixed(4)}`;\n          return \"\";\n        },\n        projection: \"EPSG:4326\",\n        className: \"\",\n        target: positionRef.current,\n      });\n      ol.map.addControl(mousePositionControl);\n    }\n    return () => {\n      if (ol.map && mousePositionControl) {\n        ol.map.removeControl(mousePositionControl);\n      }\n    };\n  }, [ol.map]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Helmet>\n        <title>Display Image</title>\n        <meta name=\"description\" content=\"Display Image on map.\" />\n        <link\n          rel=\"canonical\"\n          href=\"https://yonda-yonda.github.io/exmap/picture\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/x-icon\"\n          href=\"https://github.githubassets.com/favicon.ico\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content=\"Display Image\" />\n        <meta name=\"twitter:description\" content=\"PNG, JPEG, SVGを表示します\" />\n        <meta\n          property=\"og:url\"\n          content=\"https://yonda-yonda.github.io/exmap/picture\"\n        />\n        <meta\n          name=\"twitter:image\"\n          content=\"https://yonda-yonda.github.io/exmap/image/twitter_picture.png\"\n        />\n      </Helmet>\n      <Container>\n        <Typography variant=\"h2\" component=\"h1\">\n          Display Image\n        </Typography>\n        <Stack my={4} spacing={4}>\n          <div>\n            <Grid container spacing={2}>\n              <Grid item xs={9}>\n                <div style={{ position: \"relative\" }} ref={wrapperRef}>\n                  <div\n                    ref={ol.ref}\n                    style={{\n                      width: \"100%\",\n                      height: \"340px\",\n                    }}\n                  />\n                  <Coordinates ref={positionRef}></Coordinates>\n                </div>\n              </Grid>\n              <Grid item xs={3}>\n                {layerConfs.length > 0 ? (\n                  <StyledUl>\n                    {layerList.items.map(item => {\n                      return (\n                        <li key={item.key} ref={item.ref} {...item.trigger}>\n                          <Stack\n                            direction=\"row\"\n                            spacing={1}\n                            justifyContent=\"space-between\"\n                            alignItems=\"center\"\n                          >\n                            <LayerName>\n                              <Tooltip\n                                title={\n                                  <Typography\n                                    variant=\"caption\"\n                                    display=\"block\"\n                                    {...item.propagation}\n                                  >\n                                    {item.value.source.name}\n                                  </Typography>\n                                }\n                                arrow\n                                placement=\"left\"\n                              >\n                                <EllipsisTypography variant=\"body2\">\n                                  {item.value.source.name}\n                                </EllipsisTypography>\n                              </Tooltip>\n                            </LayerName>\n                            <LayerButton {...item.propagation}>\n                              <Button\n                                size=\"small\"\n                                variant=\"outlined\"\n                                onClick={() => {\n                                  removeLayer(item.value.id);\n                                }}\n                              >\n                                REMOVE\n                              </Button>\n                            </LayerButton>\n                          </Stack>\n                        </li>\n                      );\n                    })}\n                  </StyledUl>\n                ) : (\n                  <Typography>Nothing to display.</Typography>\n                )}\n              </Grid>\n            </Grid>\n          </div>\n          <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Stack spacing={2}>\n                <div>\n                  <Button variant=\"outlined\" onClick={sample} size=\"small\">\n                    sample\n                  </Button>\n                </div>\n                <Controller\n                  control={control}\n                  name=\"type\"\n                  render={({ field }) => (\n                    <FormControl fullWidth>\n                      <RadioGroup row {...field}>\n                        <FormControlLabel\n                          value=\"file\"\n                          control={<Radio size=\"small\" />}\n                          label=\"Local File\"\n                        />\n                        <FormControlLabel\n                          value=\"url\"\n                          control={<Radio size=\"small\" />}\n                          label=\"URL\"\n                        />\n                      </RadioGroup>\n                    </FormControl>\n                  )}\n                />\n                {watcher.type === \"file\" && (\n                  <FormControl\n                    component=\"fieldset\"\n                    error={!!errors?.files}\n                    fullWidth\n                  >\n                    <input\n                      {...register(\"files\", {\n                        required: true,\n                        validate: {\n                          length: f => f instanceof FileList && f.length === 1,\n                        },\n                      })}\n                      disabled={loading}\n                      accept=\".webp,.png,.jpeg,.jpg,.gif,image/webp,image/png,image/jpeg,image/svg+xml,image/gif\"\n                      type=\"file\"\n                    />\n                    {errors?.files?.type === \"required\" && (\n                      <FormHelperText>\n                        Required. <br />\n                        ファイルを選択してください。\n                      </FormHelperText>\n                    )}\n                    {errors?.files?.type === \"length\" && (\n                      <FormHelperText>\n                        Required. <br />\n                        ファイルを1つ選択してください。\n                      </FormHelperText>\n                    )}\n                  </FormControl>\n                )}\n                {watcher.type === \"url\" && (\n                  <Controller\n                    control={control}\n                    name=\"url\"\n                    render={({ field, fieldState: { invalid, error } }) => (\n                      <FormControl\n                        component=\"fieldset\"\n                        error={invalid}\n                        fullWidth\n                      >\n                        <TextField\n                          {...field}\n                          label=\"url\"\n                          size=\"small\"\n                          error={invalid}\n                          placeholder=\"https://\"\n                          disabled={loading}\n                        />\n                        {error?.type === \"required\" && (\n                          <FormHelperText>\n                            Required. <br />\n                            必須です。入力してください。\n                          </FormHelperText>\n                        )}\n                        {error?.type === \"pattern\" && (\n                          <FormHelperText>\n                            Not matched URL pattern.\n                            <br />\n                            URLの形式が正しくありません。\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                    )}\n                    rules={{\n                      required: true,\n                      pattern: /(^(https?):\\/\\/[^ \"]+$|(^\\.+\\/))/,\n                    }}\n                  />\n                )}\n                <Hint>support: .webp, .png, .jpeg, .jpg, .gif</Hint>\n                <Stack direction=\"row\" spacing={4} sx={{ mt: 2, mb: 1 }}>\n                  <Controller\n                    control={control}\n                    name=\"extent\"\n                    render={({ field, fieldState: { invalid, error } }) => (\n                      <FormControl\n                        component=\"fieldset\"\n                        error={invalid}\n                        fullWidth\n                      >\n                        <TextField\n                          {...field}\n                          label=\"Extent\"\n                          size=\"small\"\n                          error={invalid}\n                          placeholder=\"left laongitude, bottom latitude, right longitude, top latitude\"\n                        />\n                        {error?.type === \"required\" && (\n                          <FormHelperText>\n                            Required. <br />\n                            必須です。入力してください。\n                          </FormHelperText>\n                        )}\n                        {error?.type === \"pattern\" && (\n                          <FormHelperText>\n                            Must be left bottom and right top coordinates\n                            separated by commas.\n                            <br />\n                            カンマ区切りで左下経度,左下緯度,右上経度,右上緯度を入力してください。\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                    )}\n                    rules={{\n                      required: true,\n                      pattern: /^(\\+|-|\\.|\\d|e|E|,|\\s)*$/,\n                    }}\n                  />\n                </Stack>\n              </Stack>\n              <FormControl error={!!error} sx={{ mt: 3 }}>\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    disabled={loading}\n                    onClick={() => {\n                      setError(null);\n                    }}\n                  >\n                    Add Layer\n                  </Button>\n                </div>\n                {error === \"Duplicate\" && (\n                  <FormHelperText sx={{ ml: 0 }}>\n                    Duplicate Layer. <br />\n                    すでに同じレイヤーが存在します。\n                  </FormHelperText>\n                )}\n                {error === \"InvalidExtent\" && (\n                  <FormHelperText sx={{ ml: 0 }}>\n                    Extent includes Non-numbers. <br />\n                    Extentに数字以外の値が入力されています。\n                  </FormHelperText>\n                )}\n                {error === \"ReversedExtent\" && (\n                  <FormHelperText sx={{ ml: 0 }}>\n                    Some values of Extent are reversed. <br />\n                    Extentに大小が逆の値が含まれています。\n                  </FormHelperText>\n                )}\n                {error === \"FailedLoadSource\" && (\n                  <FormHelperText sx={{ ml: 0 }}>\n                    Failed to load source. <br />\n                    ファイルの読み込みに失敗しました。\n                  </FormHelperText>\n                )}\n              </FormControl>\n            </form>\n          </div>\n        </Stack>\n      </Container>\n    </>\n  );\n};\nexport default Viewer;\n"],"names":["rotateExtent","extent","rad","center","leftTop","Math","cos","sin","leftBottom","rightBottom","rightTop","min","max","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_maxResolution","maxZoom","undefined","DEFAULT_MAX_ZOOM","height","getHeight","width","getWidth","tileSize","toSize","DEFAULT_TILE_SIZE","maxResolution","length","resolutions","Array","z","pow","ImageWGS84","opt_options","options","gridExtent","tileGrid","TileGrid","minZoom","interpolate","imageSmoothing","state","SourceState","attributions","cacheSize","crossOrigin","opaque","projection","reprojectionErrorThreshold","tileLoadFunction","imageTile","coordString","split","map","Number","x","y","canvas","document","createElement","context","getContext","context_","extentLeft","extentRight","size","toLonLat","leftTopLon","leftTopLat","imageExtent_","imageExtentLeft","imageExtentBottom","imageExtentRight","imageExtentTop","tileLeft","tileRight","tileBottom","tileTop","setState","TileState","sourcePerPixel","tilePerPixel","tileRect","round","sourceRect","sourceRectSize","tileRectSize","tempCanvas","tempContext","clearRect","putImageData","getImageData","drawImage","getImage","src","toDataURL","tilePixelRatio","url","wrapX","transition","attributionsCollapsible","Infinity","isArray","imageExtent","Error","rotate","imageSmoothingEnabled","image","Image","addEventListener","rotatedCoordinates","rotatedWidth","rotatedHeight","save","translate","restore","console","log","TileImage","Hint","styled","fontSize","EllipsisWrapper","overflow","EllipsisTypography","Typography","whiteSpace","textOverflow","LayerName","flex","LayerButton","StyledUl","listStyle","margin","padding","marginTop","defaultSourceValue","type","files","Coordinates","position","top","left","pointerEvents","ol","useOl","wrapperRef","React","positionRef","layerConfs","setLayerConfs","error","setError","loading","setLoading","layerList","useDnDSort","defaultItems","mode","drop","draged","hovered","index","prevList","nextList","target","splice","useForm","criteriaMode","defaultValues","control","handleSubmit","register","reset","watch","setValue","errors","formState","removeLayer","id","newLayerConfs","findIndex","layerConf","source","revoke","URL","revokeObjectURL","layer","resetList","zIndex","forEach","setZIndex","setLayer","imageSource","sourceState","getState","setting","TileLayer","addLayer","originExtent","transformed","transformExtent","proj4","getView","fit","sourceListener","removeEventListener","load","onSubmit","data","v","i","n","FileList","file","name","createObjectURL","pop","join","watcher","sample","mousePositionControl","current","MousePosition","coordinateFormat","coords","toFixed","className","addControl","removeControl","CssBaseline","Helmet","content","rel","href","property","Container","variant","component","Stack","my","spacing","Grid","container","item","xs","style","ref","items","key","trigger","direction","justifyContent","alignItems","Tooltip","title","display","propagation","value","arrow","placement","Button","onClick","render","field","FormControl","fullWidth","RadioGroup","row","FormControlLabel","Radio","label","required","validate","f","disabled","accept","FormHelperText","fieldState","invalid","TextField","placeholder","rules","pattern","sx","mt","mb","ml"],"sourceRoot":""}