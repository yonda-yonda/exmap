{"version":3,"file":"component---src-pages-picker-index-tsx-7281dd88774098c6063a.js","mappings":"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","sources":["webpack://exmap/./src/pages/picker/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { Container, Typography } from \"@mui/material\";\nimport XYZ from \"ol/source/XYZ\";\nimport { useOl } from \"~/hooks/useOl\";\nimport TileLayer from \"ol/layer/Tile\";\nimport { toLonLat } from \"ol/proj\";\nimport MapBrowserEvent from \"ol/MapBrowserEvent\";\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\nconst deg2tile = (\n  lon: number,\n  lat: number,\n  zoom: number,\n  options?: {\n    min?: number;\n    max?: number;\n  }\n) => {\n  const { min, max } = Object.assign({}, options);\n  let z = min && min > zoom ? min : max && max < zoom ? max : zoom;\n  z = z > 0 ? Math.ceil(z) : 0;\n  return {\n    x: Math.floor(((lon + 180) / 360) * Math.pow(2, z)),\n    y: Math.floor(\n      ((1 -\n        Math.log(\n          Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)\n        ) /\n          Math.PI) /\n        2) *\n        Math.pow(2, z)\n    ),\n    z,\n  };\n};\nconst tile2deg = (x: number, y: number, z: number) => {\n  // タイルの左上のlon,lat\n  const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, z);\n  return [\n    (x / Math.pow(2, z)) * 360 - 180,\n    (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))),\n  ];\n};\n\nconst deg2pixel = (\n  lon: number,\n  lat: number,\n  tile: {\n    x: number;\n    y: number;\n    z: number;\n  },\n  size = 256\n) => {\n  if (![256, 512].includes(size)) throw new Error(\"unexpected tile size.\");\n  const lefttopLonLat = tile2deg(tile.x, tile.y, tile.z);\n  const target = deg2tile(lon, lat, tile.z + (size === 512 ? 9 : 8));\n  const lefttop = deg2tile(\n    lefttopLonLat[0],\n    lefttopLonLat[1],\n    tile.z + (size === 512 ? 9 : 8)\n  );\n  return [target.x - lefttop.x, target.y - lefttop.y];\n};\n\nconst getPixelValue = (\n  image: HTMLImageElement,\n  x: number,\n  y: number\n): number[] => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  if (context) {\n    canvas.width = image.width;\n    canvas.height = image.height;\n    context.drawImage(image, 0, 0);\n\n    return Array.from(context.getImageData(x, y, 1, 1).data);\n  } else {\n    throw new Error(\"can't get value.\");\n  }\n};\n\nconst dsm = (rgb: number[], u = 100) => {\n  // https://maps.gsi.go.jp/development/demtile.html\n  let hyoko = Math.floor(rgb[0] * 256 * 256 + rgb[1] * 256 + rgb[2]);\n  if (hyoko == 8388608) return NaN;\n  if (hyoko > 8388608) hyoko = (hyoko - 16777216) / u;\n  if (hyoko < 8388608) hyoko = hyoko / u;\n  return hyoko;\n};\n\nconst Picker = (): React.ReactElement => {\n  const viewer = useOl({ basemap: false });\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const demLayer = React.useRef<TileLayer<any>>();\n  const resultRef = React.useRef<HTMLDivElement | null>(null);\n\n  React.useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const clicked = (evt: MapBrowserEvent<any>) => {\n      if (demLayer.current && resultRef.current) {\n        let zoom = evt.map.getView().getZoom();\n        const lonlat = toLonLat(evt?.coordinate);\n        if (zoom && lonlat.length > 1) {\n          try {\n            const source = demLayer.current.getSource();\n            while (zoom >= 0) {\n              const xyzCoord = deg2tile(lonlat[0], lonlat[1], zoom, {\n                min: 0,\n                max: 8,\n              });\n              const image: HTMLImageElement = source\n                .getTile(xyzCoord.z, xyzCoord.x, xyzCoord.y)\n                .getImage();\n\n              // ロードされてないときはsrcが空\n              if (image.src.length > 0) {\n                const pixel = deg2pixel(\n                  lonlat[0],\n                  lonlat[1],\n                  xyzCoord,\n                  image.width\n                );\n                resultRef.current.innerText = `lon: ${lonlat[0].toFixed(\n                  4\n                )}[deg], lat: ${lonlat[1].toFixed(4)}[deg], height: ${dsm(\n                  getPixelValue(image, pixel[0], pixel[1])\n                )}[m]`;\n                break;\n              }\n              zoom--;\n            }\n            if (zoom < 0) throw new Error(\"can't get image.\");\n          } catch (e) {\n            console.log(e);\n            resultRef.current.innerText = \"\";\n          }\n        }\n      }\n    };\n\n    if (viewer.map) {\n      if (!demLayer.current) {\n        demLayer.current = new TileLayer({\n          source: new XYZ({\n            maxZoom: 8,\n            url: \"https://cyberjapandata.gsi.go.jp/xyz/demgm_png/{z}/{x}/{y}.png\",\n            attributions:\n              \"国土地理院(https://maps.gsi.go.jp/development/ichiran.html)\",\n            tilePixelRatio:\n              window && window.devicePixelRatio ? window.devicePixelRatio : 1,\n            crossOrigin: \"anonymous\", // 設定し忘れるとcanvasで値が取れない\n          }),\n        });\n\n        viewer.map.addLayer(demLayer.current);\n      }\n\n      viewer.map.getViewport().style.cursor = \"pointer\";\n      viewer.map.on(\"singleclick\", clicked);\n    }\n    return () => {\n      if (viewer.map) {\n        viewer.map.un(\"singleclick\", clicked);\n      }\n    };\n  }, [viewer.map]);\n\n  return (\n    <>\n      <CssBaseline />\n      <Helmet>\n        <title>Picker</title>\n        <meta name=\"description\" content=\"Pick tile values.\" />\n        <link\n          rel=\"canonical\"\n          href=\"https://yonda-yonda.github.io/exmap/picker\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/x-icon\"\n          href=\"https://github.githubassets.com/favicon.ico\"\n        />\n        <link\n          rel=\"stylesheet\"\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n        />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content=\"Pick tile values\" />\n        <meta\n          name=\"twitter:description\"\n          content=\"クリックした位置のタイルの値を取得します。\"\n        />\n        <meta\n          property=\"og:url\"\n          content=\"https://yonda-yonda.github.io/exmap/picker\"\n        />\n        <meta\n          name=\"twitter:image\"\n          content=\"https://yonda-yonda.github.io/exmap/image/twitter_picker.png\"\n        />\n      </Helmet>\n      <Container>\n        <Typography variant=\"h2\" component=\"h1\">\n          Pick tile values\n        </Typography>\n        <div\n          ref={viewer.ref}\n          style={{\n            width: \"100%\",\n            height: \"520px\",\n          }}\n        />\n        <Typography variant=\"body1\" ref={resultRef}></Typography>\n      </Container>\n    </>\n  );\n};\nexport default Picker;\n"],"names":["deg2tile","lon","lat","zoom","options","Object","assign","min","max","z","Math","ceil","x","floor","pow","y","log","tan","PI","cos","deg2pixel","tile","size","includes","Error","n","lefttopLonLat","atan","exp","target","lefttop","getPixelValue","image","canvas","document","createElement","context","getContext","width","height","drawImage","Array","from","getImageData","data","dsm","rgb","u","hyoko","NaN","viewer","useOl","basemap","demLayer","React","resultRef","clicked","evt","current","map","getView","getZoom","lonlat","toLonLat","coordinate","length","source","getSource","xyzCoord","getTile","getImage","src","pixel","innerText","toFixed","e","console","TileLayer","XYZ","maxZoom","url","attributions","tilePixelRatio","window","devicePixelRatio","crossOrigin","addLayer","getViewport","style","cursor","on","un","Helmet","name","content","rel","href","type","property","variant","component","ref"],"sourceRoot":""}