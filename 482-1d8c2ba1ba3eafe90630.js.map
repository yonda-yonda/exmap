{"version":3,"file":"482-1d8c2ba1ba3eafe90630.js","mappings":"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","sources":["webpack://exmap/./node_modules/ol/node_modules/geotiff/src/predictor.js","webpack://exmap/./node_modules/ol/node_modules/geotiff/src/compression/basedecoder.js","webpack://exmap/./node_modules/ol/node_modules/geotiff/src/compression/lzw.js"],"sourcesContent":["function decodeRowAcc(row, stride) {\n  var length = row.length - stride;\n  var offset = 0;\n\n  do {\n    for (var i = stride; i > 0; i--) {\n      row[offset + stride] += row[offset];\n      offset++;\n    }\n\n    length -= stride;\n  } while (length > 0);\n}\n\nfunction decodeRowFloatingPoint(row, stride, bytesPerSample) {\n  var index = 0;\n  var count = row.length;\n  var wc = count / bytesPerSample;\n\n  while (count > stride) {\n    for (var i = stride; i > 0; --i) {\n      row[index + stride] += row[index];\n      ++index;\n    }\n\n    count -= stride;\n  }\n\n  var copy = row.slice();\n\n  for (var _i = 0; _i < wc; ++_i) {\n    for (var b = 0; b < bytesPerSample; ++b) {\n      row[bytesPerSample * _i + b] = copy[(bytesPerSample - b - 1) * wc + _i];\n    }\n  }\n}\n\nexport function applyPredictor(block, predictor, width, height, bitsPerSample, planarConfiguration) {\n  if (!predictor || predictor === 1) {\n    return block;\n  }\n\n  for (var i = 0; i < bitsPerSample.length; ++i) {\n    if (bitsPerSample[i] % 8 !== 0) {\n      throw new Error('When decoding with predictor, only multiple of 8 bits are supported.');\n    }\n\n    if (bitsPerSample[i] !== bitsPerSample[0]) {\n      throw new Error('When decoding with predictor, all samples must have the same size.');\n    }\n  }\n\n  var bytesPerSample = bitsPerSample[0] / 8;\n  var stride = planarConfiguration === 2 ? 1 : bitsPerSample.length;\n\n  for (var _i2 = 0; _i2 < height; ++_i2) {\n    // Last strip will be truncated if height % stripHeight != 0\n    if (_i2 * stride * width * bytesPerSample >= block.byteLength) {\n      break;\n    }\n\n    var row = void 0;\n\n    if (predictor === 2) {\n      // horizontal prediction\n      switch (bitsPerSample[0]) {\n        case 8:\n          row = new Uint8Array(block, _i2 * stride * width * bytesPerSample, stride * width * bytesPerSample);\n          break;\n\n        case 16:\n          row = new Uint16Array(block, _i2 * stride * width * bytesPerSample, stride * width * bytesPerSample / 2);\n          break;\n\n        case 32:\n          row = new Uint32Array(block, _i2 * stride * width * bytesPerSample, stride * width * bytesPerSample / 4);\n          break;\n\n        default:\n          throw new Error(\"Predictor 2 not allowed with \".concat(bitsPerSample[0], \" bits per sample.\"));\n      }\n\n      decodeRowAcc(row, stride, bytesPerSample);\n    } else if (predictor === 3) {\n      // horizontal floating point\n      row = new Uint8Array(block, _i2 * stride * width * bytesPerSample, stride * width * bytesPerSample);\n      decodeRowFloatingPoint(row, stride, bytesPerSample);\n    }\n  }\n\n  return block;\n}","import _asyncToGenerator from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/regenerator/index.js\";\nimport { applyPredictor } from '../predictor';\n\nvar BaseDecoder = /*#__PURE__*/function () {\n  function BaseDecoder() {\n    _classCallCheck(this, BaseDecoder);\n  }\n\n  _createClass(BaseDecoder, [{\n    key: \"decode\",\n    value: function () {\n      var _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fileDirectory, buffer) {\n        var decoded, predictor, isTiled, tileWidth, tileHeight;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.decodeBlock(buffer);\n\n              case 2:\n                decoded = _context.sent;\n                predictor = fileDirectory.Predictor || 1;\n\n                if (!(predictor !== 1)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                isTiled = !fileDirectory.StripOffsets;\n                tileWidth = isTiled ? fileDirectory.TileWidth : fileDirectory.ImageWidth;\n                tileHeight = isTiled ? fileDirectory.TileLength : fileDirectory.RowsPerStrip || fileDirectory.ImageLength;\n                return _context.abrupt(\"return\", applyPredictor(decoded, predictor, tileWidth, tileHeight, fileDirectory.BitsPerSample, fileDirectory.PlanarConfiguration));\n\n              case 9:\n                return _context.abrupt(\"return\", decoded);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function decode(_x, _x2) {\n        return _decode.apply(this, arguments);\n      }\n\n      return decode;\n    }()\n  }]);\n\n  return BaseDecoder;\n}();\n\nexport { BaseDecoder as default };","import _classCallCheck from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/Users/k-yoda/work/sandbox/exmap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport BaseDecoder from './basedecoder';\nvar MIN_BITS = 9;\nvar CLEAR_CODE = 256; // clear code\n\nvar EOI_CODE = 257; // end of information\n\nvar MAX_BYTELENGTH = 12;\n\nfunction getByte(array, position, length) {\n  var d = position % 8;\n  var a = Math.floor(position / 8);\n  var de = 8 - d;\n  var ef = position + length - (a + 1) * 8;\n  var fg = 8 * (a + 2) - (position + length);\n  var dg = (a + 2) * 8 - position;\n  fg = Math.max(0, fg);\n\n  if (a >= array.length) {\n    console.warn('ran off the end of the buffer before finding EOI_CODE (end on input code)');\n    return EOI_CODE;\n  }\n\n  var chunk1 = array[a] & Math.pow(2, 8 - d) - 1;\n  chunk1 <<= length - de;\n  var chunks = chunk1;\n\n  if (a + 1 < array.length) {\n    var chunk2 = array[a + 1] >>> fg;\n    chunk2 <<= Math.max(0, length - dg);\n    chunks += chunk2;\n  }\n\n  if (ef > 8 && a + 2 < array.length) {\n    var hi = (a + 3) * 8 - (position + length);\n    var chunk3 = array[a + 2] >>> hi;\n    chunks += chunk3;\n  }\n\n  return chunks;\n}\n\nfunction appendReversed(dest, source) {\n  for (var i = source.length - 1; i >= 0; i--) {\n    dest.push(source[i]);\n  }\n\n  return dest;\n}\n\nfunction decompress(input) {\n  var dictionaryIndex = new Uint16Array(4093);\n  var dictionaryChar = new Uint8Array(4093);\n\n  for (var i = 0; i <= 257; i++) {\n    dictionaryIndex[i] = 4096;\n    dictionaryChar[i] = i;\n  }\n\n  var dictionaryLength = 258;\n  var byteLength = MIN_BITS;\n  var position = 0;\n\n  function initDictionary() {\n    dictionaryLength = 258;\n    byteLength = MIN_BITS;\n  }\n\n  function getNext(array) {\n    var byte = getByte(array, position, byteLength);\n    position += byteLength;\n    return byte;\n  }\n\n  function addToDictionary(i, c) {\n    dictionaryChar[dictionaryLength] = c;\n    dictionaryIndex[dictionaryLength] = i;\n    dictionaryLength++;\n    return dictionaryLength - 1;\n  }\n\n  function getDictionaryReversed(n) {\n    var rev = [];\n\n    for (var _i = n; _i !== 4096; _i = dictionaryIndex[_i]) {\n      rev.push(dictionaryChar[_i]);\n    }\n\n    return rev;\n  }\n\n  var result = [];\n  initDictionary();\n  var array = new Uint8Array(input);\n  var code = getNext(array);\n  var oldCode;\n\n  while (code !== EOI_CODE) {\n    if (code === CLEAR_CODE) {\n      initDictionary();\n      code = getNext(array);\n\n      while (code === CLEAR_CODE) {\n        code = getNext(array);\n      }\n\n      if (code === EOI_CODE) {\n        break;\n      } else if (code > CLEAR_CODE) {\n        throw new Error(\"corrupted code at scanline \".concat(code));\n      } else {\n        var val = getDictionaryReversed(code);\n        appendReversed(result, val);\n        oldCode = code;\n      }\n    } else if (code < dictionaryLength) {\n      var _val = getDictionaryReversed(code);\n\n      appendReversed(result, _val);\n      addToDictionary(oldCode, _val[_val.length - 1]);\n      oldCode = code;\n    } else {\n      var oldVal = getDictionaryReversed(oldCode);\n\n      if (!oldVal) {\n        throw new Error(\"Bogus entry. Not in dictionary, \".concat(oldCode, \" / \").concat(dictionaryLength, \", position: \").concat(position));\n      }\n\n      appendReversed(result, oldVal);\n      result.push(oldVal[oldVal.length - 1]);\n      addToDictionary(oldCode, oldVal[oldVal.length - 1]);\n      oldCode = code;\n    }\n\n    if (dictionaryLength + 1 >= Math.pow(2, byteLength)) {\n      if (byteLength === MAX_BYTELENGTH) {\n        oldCode = undefined;\n      } else {\n        byteLength++;\n      }\n    }\n\n    code = getNext(array);\n  }\n\n  return new Uint8Array(result);\n}\n\nvar LZWDecoder = /*#__PURE__*/function (_BaseDecoder) {\n  _inherits(LZWDecoder, _BaseDecoder);\n\n  var _super = _createSuper(LZWDecoder);\n\n  function LZWDecoder() {\n    _classCallCheck(this, LZWDecoder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LZWDecoder, [{\n    key: \"decodeBlock\",\n    value: function decodeBlock(buffer) {\n      return decompress(buffer, false).buffer;\n    }\n  }]);\n\n  return LZWDecoder;\n}(BaseDecoder);\n\nexport { LZWDecoder as default };"],"names":["decodeRowAcc","row","stride","length","offset","i","decodeRowFloatingPoint","bytesPerSample","index","count","wc","copy","slice","_i","b","applyPredictor","block","predictor","width","height","bitsPerSample","planarConfiguration","Error","_i2","byteLength","Uint8Array","Uint16Array","Uint32Array","concat","BaseDecoder","this","_decode","key","value","_callee","fileDirectory","buffer","decoded","isTiled","tileWidth","tileHeight","_context","prev","next","decodeBlock","sent","Predictor","StripOffsets","TileWidth","ImageWidth","TileLength","RowsPerStrip","ImageLength","abrupt","BitsPerSample","PlanarConfiguration","stop","_x","_x2","apply","arguments","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","constructor","appendReversed","dest","source","push","decompress","input","dictionaryIndex","dictionaryChar","dictionaryLength","position","initDictionary","getNext","array","byte","d","a","Math","floor","de","ef","fg","dg","max","console","warn","chunk1","pow","chunks","chunk2","hi","getByte","addToDictionary","c","getDictionaryReversed","n","rev","oldCode","code","_val","oldVal","undefined","LZWDecoder","_BaseDecoder","_super"],"sourceRoot":""}